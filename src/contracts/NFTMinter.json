{
  "contractName": "NFTMinter",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftChef",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "NFT_Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "starts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Mintable",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Mintable",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftChef\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"NFT_Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Mintable\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Mintable\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"starts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTMinter.sol\":\"NFTMinter\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/CryptoGame.sol\":{\"keccak256\":\"0x7ffc143bfe2cca487e3159b5fa92ee2b8aa6f6b3130352009f2c6bf730f8b024\",\"urls\":[\"bzz-raw://cacff5b14ab0af244d4eb9e0400f48309742f4907920edbf70adf3abc86308dc\",\"dweb:/ipfs/QmWNCEgn3VoLBmd3psFpzuPckkGF72GkMdnyViFujsY8AD\"]},\"/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/Interfaces/Mintable.sol\":{\"keccak256\":\"0xcd2f9dae02d4a1deada6ab205b04ba0c5792991ac0a2cf9ccae53dbe8cdc4658\",\"urls\":[\"bzz-raw://bfc26952fa81e93b453a4d8c9ed40ecf70cde88cdde2f1f5bc08422a77d665df\",\"dweb:/ipfs/QmSvkkoDLdQhzYi75trb8kWRyWUZTi3MN1fNnsSyuYh3vS\"]},\"/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTChef.sol\":{\"keccak256\":\"0x08d8e69bdd430bfa3dc5e3a53bc0b3e3be6b2a4cf4fda653f92cb626f816eb2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64c2067ff6350d10b08e972fdb7162a1dc811e2a28abbada3f23910b4f45fde3\",\"dweb:/ipfs/QmUyEg7M5c6oCsSpXT1FXf3Zmrp9GMRayGZj7sCLEHqaXj\"]},\"/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTMinter.sol\":{\"keccak256\":\"0xff4fdc04995e1ac683f6ff250245e44f2fd6774a422a51595dd44aa080155c08\",\"urls\":[\"bzz-raw://89a85548be00cd5d44328fd974335292e91cf05163897f423575fa069aac01f4\",\"dweb:/ipfs/QmVLvkqMmKEnhpdrCL17gAw4XebCmbHFoh9cdJKB2EeMXG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620020be380380620020be833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001ed565b92915050565b6000602082840312156200019b576200019a620001e8565b5b6000620001ab848285016200016b565b91505092915050565b6000620001c182620001c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001f881620001b4565b81146200020457600080fd5b50565b611ea780620002176000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461015a5780638da5cb5b146101645780639dc29fac14610182578063cbcf02701461019e578063f2fde38b146101ba5761009e565b8063018ee9b7146100a3578063599db0f8146100bf57806364482f79146100f25780636a6278421461010e5780636e03cd691461012a575b600080fd5b6100bd60048036038101906100b89190611543565b6101d6565b005b6100d960048036038101906100d4919061142e565b610475565b6040516100e994939291906118bc565b60405180910390f35b61010c6004803603810190610107919061161d565b6104c5565b005b61012860048036038101906101239190611583565b6105d7565b005b610144600480360381019061013f9190611488565b610a1f565b6040516101519190611a01565b60405180910390f35b610162610a44565b005b61016c610acc565b60405161017991906117d3565b60405180910390f35b61019c600480360381019061019791906115b0565b610af5565b005b6101b860048036038101906101b391906114c8565b610f22565b005b6101d460048036038101906101cf919061142e565b6111c2565b005b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f906119e1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102f89190611a01565b60206040518083038186803b15801561031057600080fd5b505afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610348919061145b565b73ffffffffffffffffffffffffffffffffffffffff161461039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590611941565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f758870133600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154846040518463ffffffff1660e01b815260040161043f93929190611840565b600060405180830381600087803b15801561045957600080fd5b505af115801561046d573d6000803e3d6000fd5b505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6104cd6112ba565b73ffffffffffffffffffffffffffffffffffffffff166104eb610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364482f798484846040518463ffffffff1660e01b81526004016105a093929190611a61565b600060405180830381600087803b1580156105ba57600080fd5b505af11580156105ce573d6000803e3d6000fd5b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090611901565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505090508060200151816000015173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016107d19291906117ee565b60206040518083038186803b1580156107e957600080fd5b505afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082191906115f0565b1015610862576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610859906119a1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b815260040161089d91906117d3565b602060405180830381600087803b1580156108b757600080fd5b505af11580156108cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ef91906115f0565b905043600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055507f0c2c69ba7d09e669a763b20242404d12b7588cb5521d7f3814181f0f660226c48382604051610977929190611817565b60405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce88b4393384606001518486602001516040518563ffffffff1660e01b81526004016109e89493929190611877565b600060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b50505050505050565b6001602052816000526040600020602052806000526040600020600091509150505481565b610a4c6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610a6a610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab790611981565b60405180910390fd5b610aca60006112c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe90611961565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610c009190611a01565b60206040518083038186803b158015610c1857600080fd5b505afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c50919061145b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611941565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054610d5b9190611aa9565b4311610d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d93906119c1565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634532d77633600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015484600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b8152600401610e819493929190611877565b600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610eec9190611a01565b600060405180830381600087803b158015610f0657600080fd5b505af1158015610f1a573d6000803e3d6000fd5b505050505050565b610f2a6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610f48610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c71b4b4382878760016040518563ffffffff1660e01b81526004016110009493929190611a1c565b600060405180830381600087803b15801561101a57600080fd5b505af115801561102e573d6000803e3d6000fd5b5050505060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016001600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663081e3eda6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110791906115f0565b6111119190611aff565b815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050505050505050565b6111ca6112ba565b73ffffffffffffffffffffffffffffffffffffffff166111e8610acc565b73ffffffffffffffffffffffffffffffffffffffff161461123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590611981565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a590611921565b60405180910390fd5b6112b7816112c2565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061139581611de7565b92915050565b6000815190506113aa81611de7565b92915050565b6000813590506113bf81611dfe565b92915050565b6000813590506113d481611e15565b92915050565b6000813590506113e981611e2c565b92915050565b6000813590506113fe81611e43565b92915050565b60008135905061141381611e5a565b92915050565b60008151905061142881611e5a565b92915050565b60006020828403121561144457611443611c28565b5b600061145284828501611386565b91505092915050565b60006020828403121561147157611470611c28565b5b600061147f8482850161139b565b91505092915050565b6000806040838503121561149f5761149e611c28565b5b60006114ad85828601611386565b92505060206114be85828601611404565b9150509250929050565b600080600080600060a086880312156114e4576114e3611c28565b5b60006114f2888289016113da565b9550506020611503888289016113c5565b945050604061151488828901611404565b935050606061152588828901611404565b925050608061153688828901611404565b9150509295509295909350565b6000806040838503121561155a57611559611c28565b5b6000611568858286016113da565b925050602061157985828601611404565b9150509250929050565b60006020828403121561159957611598611c28565b5b60006115a7848285016113ef565b91505092915050565b600080604083850312156115c7576115c6611c28565b5b60006115d5858286016113ef565b92505060206115e685828601611404565b9150509250929050565b60006020828403121561160657611605611c28565b5b600061161484828501611419565b91505092915050565b60008060006060848603121561163657611635611c28565b5b600061164486828701611404565b935050602061165586828701611404565b9250506040611666868287016113b0565b9150509250925092565b61167981611b33565b82525050565b61168881611b45565b82525050565b61169781611bb1565b82525050565b6116a681611bd5565b82525050565b60006116b9601383611a98565b91506116c482611c2d565b602082019050919050565b60006116dc602683611a98565b91506116e782611c56565b604082019050919050565b60006116ff602583611a98565b915061170a82611ca5565b604082019050919050565b6000611722601383611a98565b915061172d82611cf4565b602082019050919050565b6000611745602083611a98565b915061175082611d1d565b602082019050919050565b6000611768602483611a98565b915061177382611d46565b604082019050919050565b600061178b601e83611a98565b915061179682611d95565b602082019050919050565b60006117ae601c83611a98565b91506117b982611dbe565b602082019050919050565b6117cd81611ba7565b82525050565b60006020820190506117e86000830184611670565b92915050565b60006040820190506118036000830185611670565b6118106020830184611670565b9392505050565b600060408201905061182c6000830185611670565b61183960208301846117c4565b9392505050565b60006060820190506118556000830186611670565b61186260208301856117c4565b61186f60408301846117c4565b949350505050565b600060808201905061188c6000830187611670565b61189960208301866117c4565b6118a660408301856117c4565b6118b360608301846117c4565b95945050505050565b60006080820190506118d1600083018761168e565b6118de60208301866117c4565b6118eb60408301856117c4565b6118f860608301846117c4565b95945050505050565b6000602082019050818103600083015261191a816116ac565b9050919050565b6000602082019050818103600083015261193a816116cf565b9050919050565b6000602082019050818103600083015261195a816116f2565b9050919050565b6000602082019050818103600083015261197a81611715565b9050919050565b6000602082019050818103600083015261199a81611738565b9050919050565b600060208201905081810360008301526119ba8161175b565b9050919050565b600060208201905081810360008301526119da8161177e565b9050919050565b600060208201905081810360008301526119fa816117a1565b9050919050565b6000602082019050611a1660008301846117c4565b92915050565b6000608082019050611a3160008301876117c4565b611a3e602083018661169d565b611a4b604083018561168e565b611a58606083018461167f565b95945050505050565b6000606082019050611a7660008301866117c4565b611a8360208301856117c4565b611a90604083018461167f565b949350505050565b600082825260208201905092915050565b6000611ab482611ba7565b9150611abf83611ba7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611af457611af3611bf9565b5b828201905092915050565b6000611b0a82611ba7565b9150611b1583611ba7565b925082821015611b2857611b27611bf9565b5b828203905092915050565b6000611b3e82611b87565b9050919050565b60008115159050919050565b6000611b5c82611b33565b9050919050565b6000611b6e82611b33565b9050919050565b6000611b8082611b33565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611bbc82611bc3565b9050919050565b6000611bce82611b87565b9050919050565b6000611be082611be7565b9050919050565b6000611bf282611b87565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e76616c6964206e667420746f206d696e7400000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53656e646572206973206e6f7420746865206f776e6572206f6620746865207460008201527f6f6b656e2e000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c6964206e667420746f206275726e00000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964207374616b6520676976656e20666f7220746865206e66742060008201527f6d696e7400000000000000000000000000000000000000000000000000000000602082015250565b7f546865206e66742063616e206e6f74206265206275726e6564207965742e0000600082015250565b7f43616e206e6f742068617276657374204e465420616464726573732e00000000600082015250565b611df081611b33565b8114611dfb57600080fd5b50565b611e0781611b45565b8114611e1257600080fd5b50565b611e1e81611b51565b8114611e2957600080fd5b50565b611e3581611b63565b8114611e4057600080fd5b50565b611e4c81611b75565b8114611e5757600080fd5b50565b611e6381611ba7565b8114611e6e57600080fd5b5056fea26469706673582212202bc99b314e7372f1c5379a082fd3b05ffda817872487f09222fec871dff7ca7164736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461015a5780638da5cb5b146101645780639dc29fac14610182578063cbcf02701461019e578063f2fde38b146101ba5761009e565b8063018ee9b7146100a3578063599db0f8146100bf57806364482f79146100f25780636a6278421461010e5780636e03cd691461012a575b600080fd5b6100bd60048036038101906100b89190611543565b6101d6565b005b6100d960048036038101906100d4919061142e565b610475565b6040516100e994939291906118bc565b60405180910390f35b61010c6004803603810190610107919061161d565b6104c5565b005b61012860048036038101906101239190611583565b6105d7565b005b610144600480360381019061013f9190611488565b610a1f565b6040516101519190611a01565b60405180910390f35b610162610a44565b005b61016c610acc565b60405161017991906117d3565b60405180910390f35b61019c600480360381019061019791906115b0565b610af5565b005b6101b860048036038101906101b391906114c8565b610f22565b005b6101d460048036038101906101cf919061142e565b6111c2565b005b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f906119e1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102f89190611a01565b60206040518083038186803b15801561031057600080fd5b505afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610348919061145b565b73ffffffffffffffffffffffffffffffffffffffff161461039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590611941565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f758870133600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154846040518463ffffffff1660e01b815260040161043f93929190611840565b600060405180830381600087803b15801561045957600080fd5b505af115801561046d573d6000803e3d6000fd5b505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6104cd6112ba565b73ffffffffffffffffffffffffffffffffffffffff166104eb610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364482f798484846040518463ffffffff1660e01b81526004016105a093929190611a61565b600060405180830381600087803b1580156105ba57600080fd5b505af11580156105ce573d6000803e3d6000fd5b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090611901565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505090508060200151816000015173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016107d19291906117ee565b60206040518083038186803b1580156107e957600080fd5b505afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082191906115f0565b1015610862576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610859906119a1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b815260040161089d91906117d3565b602060405180830381600087803b1580156108b757600080fd5b505af11580156108cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ef91906115f0565b905043600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055507f0c2c69ba7d09e669a763b20242404d12b7588cb5521d7f3814181f0f660226c48382604051610977929190611817565b60405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce88b4393384606001518486602001516040518563ffffffff1660e01b81526004016109e89493929190611877565b600060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b50505050505050565b6001602052816000526040600020602052806000526040600020600091509150505481565b610a4c6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610a6a610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab790611981565b60405180910390fd5b610aca60006112c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe90611961565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610c009190611a01565b60206040518083038186803b158015610c1857600080fd5b505afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c50919061145b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611941565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054610d5b9190611aa9565b4311610d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d93906119c1565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634532d77633600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015484600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b8152600401610e819493929190611877565b600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610eec9190611a01565b600060405180830381600087803b158015610f0657600080fd5b505af1158015610f1a573d6000803e3d6000fd5b505050505050565b610f2a6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610f48610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c71b4b4382878760016040518563ffffffff1660e01b81526004016110009493929190611a1c565b600060405180830381600087803b15801561101a57600080fd5b505af115801561102e573d6000803e3d6000fd5b5050505060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016001600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663081e3eda6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110791906115f0565b6111119190611aff565b815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050505050505050565b6111ca6112ba565b73ffffffffffffffffffffffffffffffffffffffff166111e8610acc565b73ffffffffffffffffffffffffffffffffffffffff161461123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590611981565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a590611921565b60405180910390fd5b6112b7816112c2565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061139581611de7565b92915050565b6000815190506113aa81611de7565b92915050565b6000813590506113bf81611dfe565b92915050565b6000813590506113d481611e15565b92915050565b6000813590506113e981611e2c565b92915050565b6000813590506113fe81611e43565b92915050565b60008135905061141381611e5a565b92915050565b60008151905061142881611e5a565b92915050565b60006020828403121561144457611443611c28565b5b600061145284828501611386565b91505092915050565b60006020828403121561147157611470611c28565b5b600061147f8482850161139b565b91505092915050565b6000806040838503121561149f5761149e611c28565b5b60006114ad85828601611386565b92505060206114be85828601611404565b9150509250929050565b600080600080600060a086880312156114e4576114e3611c28565b5b60006114f2888289016113da565b9550506020611503888289016113c5565b945050604061151488828901611404565b935050606061152588828901611404565b925050608061153688828901611404565b9150509295509295909350565b6000806040838503121561155a57611559611c28565b5b6000611568858286016113da565b925050602061157985828601611404565b9150509250929050565b60006020828403121561159957611598611c28565b5b60006115a7848285016113ef565b91505092915050565b600080604083850312156115c7576115c6611c28565b5b60006115d5858286016113ef565b92505060206115e685828601611404565b9150509250929050565b60006020828403121561160657611605611c28565b5b600061161484828501611419565b91505092915050565b60008060006060848603121561163657611635611c28565b5b600061164486828701611404565b935050602061165586828701611404565b9250506040611666868287016113b0565b9150509250925092565b61167981611b33565b82525050565b61168881611b45565b82525050565b61169781611bb1565b82525050565b6116a681611bd5565b82525050565b60006116b9601383611a98565b91506116c482611c2d565b602082019050919050565b60006116dc602683611a98565b91506116e782611c56565b604082019050919050565b60006116ff602583611a98565b915061170a82611ca5565b604082019050919050565b6000611722601383611a98565b915061172d82611cf4565b602082019050919050565b6000611745602083611a98565b915061175082611d1d565b602082019050919050565b6000611768602483611a98565b915061177382611d46565b604082019050919050565b600061178b601e83611a98565b915061179682611d95565b602082019050919050565b60006117ae601c83611a98565b91506117b982611dbe565b602082019050919050565b6117cd81611ba7565b82525050565b60006020820190506117e86000830184611670565b92915050565b60006040820190506118036000830185611670565b6118106020830184611670565b9392505050565b600060408201905061182c6000830185611670565b61183960208301846117c4565b9392505050565b60006060820190506118556000830186611670565b61186260208301856117c4565b61186f60408301846117c4565b949350505050565b600060808201905061188c6000830187611670565b61189960208301866117c4565b6118a660408301856117c4565b6118b360608301846117c4565b95945050505050565b60006080820190506118d1600083018761168e565b6118de60208301866117c4565b6118eb60408301856117c4565b6118f860608301846117c4565b95945050505050565b6000602082019050818103600083015261191a816116ac565b9050919050565b6000602082019050818103600083015261193a816116cf565b9050919050565b6000602082019050818103600083015261195a816116f2565b9050919050565b6000602082019050818103600083015261197a81611715565b9050919050565b6000602082019050818103600083015261199a81611738565b9050919050565b600060208201905081810360008301526119ba8161175b565b9050919050565b600060208201905081810360008301526119da8161177e565b9050919050565b600060208201905081810360008301526119fa816117a1565b9050919050565b6000602082019050611a1660008301846117c4565b92915050565b6000608082019050611a3160008301876117c4565b611a3e602083018661169d565b611a4b604083018561168e565b611a58606083018461167f565b95945050505050565b6000606082019050611a7660008301866117c4565b611a8360208301856117c4565b611a90604083018461167f565b949350505050565b600082825260208201905092915050565b6000611ab482611ba7565b9150611abf83611ba7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611af457611af3611bf9565b5b828201905092915050565b6000611b0a82611ba7565b9150611b1583611ba7565b925082821015611b2857611b27611bf9565b5b828203905092915050565b6000611b3e82611b87565b9050919050565b60008115159050919050565b6000611b5c82611b33565b9050919050565b6000611b6e82611b33565b9050919050565b6000611b8082611b33565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611bbc82611bc3565b9050919050565b6000611bce82611b87565b9050919050565b6000611be082611be7565b9050919050565b6000611bf282611b87565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e76616c6964206e667420746f206d696e7400000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53656e646572206973206e6f7420746865206f776e6572206f6620746865207460008201527f6f6b656e2e000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c6964206e667420746f206275726e00000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964207374616b6520676976656e20666f7220746865206e66742060008201527f6d696e7400000000000000000000000000000000000000000000000000000000602082015250565b7f546865206e66742063616e206e6f74206265206275726e6564207965742e0000600082015250565b7f43616e206e6f742068617276657374204e465420616464726573732e00000000600082015250565b611df081611b33565b8114611dfb57600080fd5b50565b611e0781611b45565b8114611e1257600080fd5b50565b611e1e81611b51565b8114611e2957600080fd5b50565b611e3581611b63565b8114611e4057600080fd5b50565b611e4c81611b75565b8114611e5757600080fd5b50565b611e6381611ba7565b8114611e6e57600080fd5b5056fea26469706673582212202bc99b314e7372f1c5379a082fd3b05ffda817872487f09222fec871dff7ca7164736f6c63430008050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:73",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:73"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:73",
                "type": ""
              }
            ],
            "src": "7:143:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:274:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "281:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "372:128:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "387:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "391:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "416:74:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "462:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "482:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "426:31:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:64:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "416:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:73",
                "type": ""
              }
            ],
            "src": "156:351:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "553:35:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "563:19:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "573:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "563:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "546:6:73",
                "type": ""
              }
            ],
            "src": "513:75:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:51:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "649:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "678:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "660:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "649:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "621:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "631:7:73",
                "type": ""
              }
            ],
            "src": "594:96:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:81:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "751:65:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:42:73",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:54:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "751:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "723:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "733:7:73",
                "type": ""
              }
            ],
            "src": "696:126:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "927:12:73"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "828:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1057:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:12:73"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "951:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:79:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1174:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1186:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1176:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1165:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1147:17:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:24:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1137:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:35:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:43:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:2:73"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:73",
                "type": ""
              }
            ],
            "src": "1074:122:73"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 73,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:21669:73",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:73"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:73",
                "type": ""
              }
            ],
            "src": "7:139:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:80:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "240:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "234:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:13:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "225:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "283:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "256:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:33:73"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "193:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "201:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "209:5:73",
                "type": ""
              }
            ],
            "src": "152:143:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "350:84:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "360:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "382:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "369:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "360:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "398:23:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "398:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "398:30:73"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "328:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "336:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "344:5:73",
                "type": ""
              }
            ],
            "src": "301:133:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:103:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "540:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "527:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "518:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "599:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$10988",
                      "nodeType": "YulIdentifier",
                      "src": "556:42:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:49:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:49:73"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$10988",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "486:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "494:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "502:5:73",
                "type": ""
              }
            ],
            "src": "440:171:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "686:104:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "696:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "718:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "705:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "696:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "778:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC721_$13064",
                      "nodeType": "YulIdentifier",
                      "src": "734:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:50:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "734:50:73"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC721_$13064",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "664:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "672:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "680:5:73",
                "type": ""
              }
            ],
            "src": "617:173:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "864:103:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "874:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "896:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "883:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "874:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "955:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Mintable_$271",
                      "nodeType": "YulIdentifier",
                      "src": "912:42:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:49:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "912:49:73"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Mintable_$271",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "842:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "850:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "858:5:73",
                "type": ""
              }
            ],
            "src": "796:171:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1025:87:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1035:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1057:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1044:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1035:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1100:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1073:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1073:33:73"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1003:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1011:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1019:5:73",
                "type": ""
              }
            ],
            "src": "973:139:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:80:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:22:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1206:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1200:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:13:73"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1191:5:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1249:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1222:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1222:33:73"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1159:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1167:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1175:5:73",
                "type": ""
              }
            ],
            "src": "1118:143:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1333:263:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1379:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1381:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1381:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1381:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1354:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1363:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1350:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1350:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1375:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1346:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1343:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1472:117:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1487:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1501:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1491:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1516:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1551:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1562:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1547:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1547:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1571:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1526:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1526:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1516:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1303:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1314:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:73",
                "type": ""
              }
            ],
            "src": "1267:329:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1679:274:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1725:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1727:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1727:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1727:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1700:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1709:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1696:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1721:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1692:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1689:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1818:128:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1833:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1847:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1837:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1862:74:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1908:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1919:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1904:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1904:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1928:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1872:31:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:64:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1862:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1649:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1660:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1672:6:73",
                "type": ""
              }
            ],
            "src": "1602:351:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2042:391:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2088:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2090:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2090:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2090:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2063:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2072:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2059:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2059:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2084:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2055:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2055:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2052:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2181:117:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2196:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2210:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2200:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2225:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2260:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2271:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2256:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2256:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2280:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2235:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2235:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2225:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2308:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2323:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2337:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2327:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2353:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2388:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2399:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2384:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2384:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2408:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2363:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2363:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2353:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2004:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2015:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2027:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2035:6:73",
                "type": ""
              }
            ],
            "src": "1959:474:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2606:810:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2653:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2655:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2655:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2655:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2627:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2636:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2648:3:73",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2619:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:33:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2616:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2746:134:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2761:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2775:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2765:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2790:80:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2842:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2853:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2838:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2838:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2862:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC721_$13064",
                          "nodeType": "YulIdentifier",
                          "src": "2800:37:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2800:70:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2790:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2890:134:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2905:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2919:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2909:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2935:79:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2986:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2997:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2982:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2982:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3006:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$10988",
                          "nodeType": "YulIdentifier",
                          "src": "2945:36:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2945:69:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2935:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3034:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3049:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3063:2:73",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3053:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3079:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3114:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3125:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3110:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3110:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3134:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3089:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3089:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3079:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3162:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3177:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3191:2:73",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3181:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3207:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3242:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3253:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3238:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3238:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3262:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3217:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3217:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3207:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3290:119:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3305:17:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3319:3:73",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3309:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3336:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3371:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3382:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3367:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3367:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3391:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3346:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3346:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3336:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$13064t_contract$_IERC20_$10988t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2544:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2555:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2567:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2575:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2583:6:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2591:6:73",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2599:6:73",
                "type": ""
              }
            ],
            "src": "2439:977:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3522:408:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3568:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3570:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3570:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3570:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3543:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3552:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3539:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3539:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3564:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3535:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3535:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3532:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3661:134:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3676:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3690:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3680:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3705:80:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3757:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3768:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3753:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3753:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3777:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC721_$13064",
                          "nodeType": "YulIdentifier",
                          "src": "3715:37:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3715:70:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3705:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3805:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3820:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3834:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3824:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3850:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3885:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3896:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3881:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3881:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3905:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3860:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3860:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3850:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$13064t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3484:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3495:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3507:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3515:6:73",
                "type": ""
              }
            ],
            "src": "3422:508:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4018:279:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4064:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4066:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4066:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4066:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4039:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4048:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4035:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4035:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4060:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4031:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4031:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4028:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4157:133:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4172:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4186:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4176:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4201:79:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4252:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4263:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4248:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4248:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4272:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Mintable_$271",
                          "nodeType": "YulIdentifier",
                          "src": "4211:36:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4211:69:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4201:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Mintable_$271",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3988:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3999:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4011:6:73",
                "type": ""
              }
            ],
            "src": "3936:361:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4402:407:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4448:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4450:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4450:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4450:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4423:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4432:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4419:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4419:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4444:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4415:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4415:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4412:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4541:133:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4556:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4570:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4560:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4585:79:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4636:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4647:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4632:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4632:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4656:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Mintable_$271",
                          "nodeType": "YulIdentifier",
                          "src": "4595:36:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4595:69:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4585:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4684:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4699:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4713:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4703:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4729:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4764:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4775:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4760:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4760:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4784:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4739:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4739:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4729:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Mintable_$271t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4364:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4375:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4387:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4395:6:73",
                "type": ""
              }
            ],
            "src": "4303:506:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4892:274:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4938:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4940:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4940:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4940:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4913:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4922:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4909:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4909:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4934:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4905:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4905:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4902:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5031:128:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5046:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5060:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5050:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5075:74:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5121:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5132:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5117:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5117:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5141:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5085:31:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5085:64:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5075:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4862:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4873:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4885:6:73",
                "type": ""
              }
            ],
            "src": "4815:351:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5269:516:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5315:83:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5317:77:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5317:79:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5317:79:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5290:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5299:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5286:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5286:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5311:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5282:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5282:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "5279:2:73"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5408:117:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5423:15:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5437:1:73",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5427:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5452:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5487:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5498:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5483:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5483:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5507:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5462:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5462:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5452:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5535:118:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5550:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5564:2:73",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5554:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5580:63:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5615:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5626:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5611:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5611:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5635:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5590:20:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5590:53:73"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5580:6:73"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5663:115:73",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5678:16:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5692:2:73",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5682:6:73",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5708:60:73",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5740:9:73"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5751:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5736:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5736:22:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5760:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5718:17:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5718:50:73"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5708:6:73"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5223:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5234:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5246:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5254:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5262:6:73",
                "type": ""
              }
            ],
            "src": "5172:613:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5856:53:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5873:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5896:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5878:17:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5878:24:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5866:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5866:37:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5866:37:73"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5844:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5851:3:73",
                "type": ""
              }
            ],
            "src": "5791:118:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5974:50:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5991:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6011:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5996:14:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5996:21:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5984:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5984:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5984:34:73"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5962:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5969:3:73",
                "type": ""
              }
            ],
            "src": "5915:109:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6111:82:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6128:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6180:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$10988_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6133:46:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6133:53:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6121:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6121:66:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6121:66:73"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$10988_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6099:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6106:3:73",
                "type": ""
              }
            ],
            "src": "6030:163:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6281:83:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6298:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6351:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC721_$13064_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6303:47:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6303:54:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6291:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6291:67:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6291:67:73"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC721_$13064_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6269:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6276:3:73",
                "type": ""
              }
            ],
            "src": "6199:165:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6516:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6526:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6592:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6597:2:73",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6533:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6533:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6526:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6698:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                      "nodeType": "YulIdentifier",
                      "src": "6609:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6609:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6609:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6711:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6722:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6727:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6718:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6718:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6711:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6504:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6512:3:73",
                "type": ""
              }
            ],
            "src": "6370:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6888:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6898:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6964:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6969:2:73",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6905:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6905:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6898:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7070:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "6981:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6981:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6981:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7083:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7094:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7099:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7090:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7090:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7083:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6876:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6884:3:73",
                "type": ""
              }
            ],
            "src": "6742:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7260:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7270:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7336:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7341:2:73",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7277:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7270:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7442:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                      "nodeType": "YulIdentifier",
                      "src": "7353:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7353:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7353:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7455:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7466:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7471:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7462:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7462:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7455:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7248:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7256:3:73",
                "type": ""
              }
            ],
            "src": "7114:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7632:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7642:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7708:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7713:2:73",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7649:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7649:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7642:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7814:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                      "nodeType": "YulIdentifier",
                      "src": "7725:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7725:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7725:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7827:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7838:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7843:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7834:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7834:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7827:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7620:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7628:3:73",
                "type": ""
              }
            ],
            "src": "7486:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8004:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8014:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8080:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8085:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8021:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8021:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8014:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8186:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "8097:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8097:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8097:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8199:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8210:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8215:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8206:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8206:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8199:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7992:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8000:3:73",
                "type": ""
              }
            ],
            "src": "7858:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8376:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8386:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8452:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8457:2:73",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8393:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8393:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8386:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8558:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                      "nodeType": "YulIdentifier",
                      "src": "8469:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8469:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8469:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8571:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8582:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8587:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8578:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8578:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8571:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8364:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8372:3:73",
                "type": ""
              }
            ],
            "src": "8230:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8748:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8758:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8824:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8829:2:73",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8765:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8765:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8758:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8930:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                      "nodeType": "YulIdentifier",
                      "src": "8841:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8841:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8841:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8943:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8954:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8959:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8950:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8950:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8943:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8736:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8744:3:73",
                "type": ""
              }
            ],
            "src": "8602:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9120:220:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9130:74:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9196:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9201:2:73",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9137:58:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9137:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9130:3:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9302:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                      "nodeType": "YulIdentifier",
                      "src": "9213:88:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9213:93:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9213:93:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9315:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9326:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9331:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9322:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9322:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9315:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9108:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9116:3:73",
                "type": ""
              }
            ],
            "src": "8974:366:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9411:53:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9428:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9451:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9433:17:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9433:24:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9421:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9421:37:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9421:37:73"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9399:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9406:3:73",
                "type": ""
              }
            ],
            "src": "9346:118:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9568:124:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9578:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9590:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9601:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9586:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9586:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9578:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9658:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9671:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9682:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9667:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9667:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9614:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9614:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9614:71:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9540:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9552:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9563:4:73",
                "type": ""
              }
            ],
            "src": "9470:222:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9824:206:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9834:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9846:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9857:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9842:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9842:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9834:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9914:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9927:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9938:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9923:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9923:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9870:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9870:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9870:71:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9995:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10008:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10019:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10004:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10004:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9951:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9951:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9951:72:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9788:9:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9800:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9808:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9819:4:73",
                "type": ""
              }
            ],
            "src": "9698:332:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10162:206:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10172:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10184:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10195:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10180:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10180:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10172:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10252:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10265:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10276:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10261:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10261:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10208:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10208:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10208:71:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10333:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10346:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10357:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10342:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10342:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10289:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10289:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10289:72:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10126:9:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10138:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10146:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10157:4:73",
                "type": ""
              }
            ],
            "src": "10036:332:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10528:288:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10538:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10550:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10561:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10546:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10546:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10538:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10618:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10631:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10642:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10627:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10627:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10574:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10574:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10574:71:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10699:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10712:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10723:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10708:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10708:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10655:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10655:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10655:72:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10781:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10794:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10805:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10790:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10790:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10737:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10737:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10737:72:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10484:9:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10496:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10504:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10512:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10523:4:73",
                "type": ""
              }
            ],
            "src": "10374:442:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11004:371:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11014:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11026:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11037:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11022:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11022:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11014:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11095:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11108:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11119:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11104:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11104:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11051:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11051:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11051:71:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11176:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11189:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11200:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11185:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11185:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11132:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11132:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11132:72:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11258:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11271:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11282:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11267:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11267:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11214:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11214:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11214:72:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11340:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11353:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11364:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11349:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11349:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11296:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11296:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11296:72:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10952:9:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10964:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10972:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10980:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10988:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10999:4:73",
                "type": ""
              }
            ],
            "src": "10822:553:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11579:387:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11589:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11601:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11612:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11597:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11597:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11589:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11686:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11699:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11710:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11695:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11695:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$10988_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11626:59:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11626:87:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11626:87:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11767:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11780:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11791:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11776:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11776:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11723:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11723:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11723:72:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11849:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11862:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11873:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11858:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11858:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11805:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11805:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11805:72:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11931:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11944:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11955:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11940:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11940:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11887:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11887:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11887:72:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$10988_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11527:9:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11539:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11547:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11555:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11563:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11574:4:73",
                "type": ""
              }
            ],
            "src": "11381:585:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12143:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12153:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12165:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12176:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12161:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12161:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12153:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12200:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12211:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12196:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12196:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12219:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12225:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12215:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12215:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12189:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12189:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12189:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12245:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12379:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12253:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12253:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12245:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12123:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12138:4:73",
                "type": ""
              }
            ],
            "src": "11972:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12568:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12578:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12590:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12601:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12586:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12586:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12578:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12625:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12636:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12621:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12621:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12644:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12650:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12640:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12640:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12614:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12614:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12614:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12670:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12804:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12678:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12678:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12670:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12548:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12563:4:73",
                "type": ""
              }
            ],
            "src": "12397:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12993:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13003:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13015:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13026:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13011:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13011:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13003:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13050:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13061:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13046:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13046:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13069:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13075:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13065:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13065:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13039:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13039:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13039:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13095:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13229:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13103:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13103:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13095:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12973:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12988:4:73",
                "type": ""
              }
            ],
            "src": "12822:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13418:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13428:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13440:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13451:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13436:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13436:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13428:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13475:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13486:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13471:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13471:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13494:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13500:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13490:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13490:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13464:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13464:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13464:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13520:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13654:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13528:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13528:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13520:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13398:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13413:4:73",
                "type": ""
              }
            ],
            "src": "13247:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13843:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13853:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13865:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13876:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13861:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13861:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13853:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13900:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13911:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13896:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13896:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13919:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13925:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13915:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13915:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13889:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13889:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13889:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13945:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14079:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13953:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13953:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13945:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13823:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13838:4:73",
                "type": ""
              }
            ],
            "src": "13672:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14268:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14278:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14290:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14301:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14286:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14286:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14278:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14325:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14336:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14321:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14321:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14344:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14350:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14340:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14340:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14314:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14314:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14314:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14370:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14504:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14378:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14378:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14370:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14248:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14263:4:73",
                "type": ""
              }
            ],
            "src": "14097:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14693:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14703:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14715:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14726:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14711:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14711:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14703:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14750:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14761:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14746:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14746:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14769:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14775:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14765:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14765:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14739:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14739:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14739:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14795:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14929:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14803:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14803:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14795:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14673:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14688:4:73",
                "type": ""
              }
            ],
            "src": "14522:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15118:248:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15128:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15140:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15151:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15136:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15136:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15128:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15175:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15186:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15171:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15171:17:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15194:4:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15200:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15190:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15190:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15164:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15164:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15164:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15220:139:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15354:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15228:124:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15228:131:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15220:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15098:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15113:4:73",
                "type": ""
              }
            ],
            "src": "14947:419:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15470:124:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15480:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15492:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15503:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15488:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15488:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15480:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15560:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15573:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15584:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15569:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15569:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15516:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15516:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15516:71:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15442:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15454:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15465:4:73",
                "type": ""
              }
            ],
            "src": "15372:222:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15809:398:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15819:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15831:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15842:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15827:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15827:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15819:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15900:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15913:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15924:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15909:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15909:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15856:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15856:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15856:71:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15998:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16011:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16022:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16007:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16007:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC721_$13064_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15937:60:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15937:89:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15937:89:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16096:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16109:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16120:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16105:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16105:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$10988_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16036:59:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16036:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16036:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "16172:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16185:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16196:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16181:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16181:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16134:37:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16134:66:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16134:66:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_contract$_IERC721_$13064_t_contract$_IERC20_$10988_t_bool__to_t_uint256_t_address_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15757:9:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "15769:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15777:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15785:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15793:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15804:4:73",
                "type": ""
              }
            ],
            "src": "15600:607:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16361:282:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16371:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16383:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16394:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16379:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16379:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16371:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16451:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16464:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16475:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16460:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16460:17:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16407:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16407:71:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16407:71:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16532:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16545:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16556:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16541:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16541:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16488:43:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16488:72:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16488:72:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16608:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16621:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16632:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16617:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16617:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16570:37:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16570:66:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16570:66:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16317:9:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16329:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16337:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16345:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16356:4:73",
                "type": ""
              }
            ],
            "src": "16213:430:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16689:35:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16699:19:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16715:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16709:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16709:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "16699:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16682:6:73",
                "type": ""
              }
            ],
            "src": "16649:75:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16826:73:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16843:3:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16848:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16836:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16836:19:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16836:19:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16864:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16883:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16888:4:73",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16879:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16879:14:73"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "16864:11:73"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16798:3:73",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16803:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "16814:11:73",
                "type": ""
              }
            ],
            "src": "16730:169:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16949:261:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16959:25:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16982:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16964:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16964:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16959:1:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16993:25:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17016:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16998:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16998:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16993:1:73"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17156:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17158:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17158:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17158:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17077:1:73"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17084:66:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17152:1:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17080:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17080:74:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17074:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17074:81:73"
                  },
                  "nodeType": "YulIf",
                  "src": "17071:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17188:16:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17199:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17202:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17195:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17195:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "17188:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16936:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16939:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "16945:3:73",
                "type": ""
              }
            ],
            "src": "16905:305:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17261:146:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17271:25:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17294:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17276:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17276:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17271:1:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17305:25:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17328:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17310:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17310:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17305:1:73"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17352:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17354:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17354:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17354:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17346:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17349:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17343:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17343:8:73"
                  },
                  "nodeType": "YulIf",
                  "src": "17340:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17384:17:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17396:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17399:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17392:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17392:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17384:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17247:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17250:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17256:4:73",
                "type": ""
              }
            ],
            "src": "17216:191:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17458:51:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17468:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17497:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "17479:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17479:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17468:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17440:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17450:7:73",
                "type": ""
              }
            ],
            "src": "17413:96:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17557:48:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17567:32:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17592:5:73"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17585:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17585:13:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17578:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17578:21:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17567:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17539:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17549:7:73",
                "type": ""
              }
            ],
            "src": "17515:90:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17672:51:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17682:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17711:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "17693:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17693:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17682:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$10988",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17654:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17664:7:73",
                "type": ""
              }
            ],
            "src": "17611:112:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17791:51:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17801:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17830:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "17812:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17812:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17801:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC721_$13064",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17773:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17783:7:73",
                "type": ""
              }
            ],
            "src": "17729:113:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17909:51:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17919:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17948:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "17930:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17930:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17919:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Mintable_$271",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17891:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17901:7:73",
                "type": ""
              }
            ],
            "src": "17848:112:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18011:81:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18021:65:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18036:5:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18043:42:73",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18032:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18032:54:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "18021:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17993:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "18003:7:73",
                "type": ""
              }
            ],
            "src": "17966:126:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18143:32:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18153:16:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "18164:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "18153:7:73"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18125:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "18135:7:73",
                "type": ""
              }
            ],
            "src": "18098:77:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18257:82:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18267:66:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18327:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$10988_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18280:46:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18280:53:73"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18267:9:73"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$10988_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18237:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18247:9:73",
                "type": ""
              }
            ],
            "src": "18181:158:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18421:53:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18431:37:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18462:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18444:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18444:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18431:9:73"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$10988_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18401:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18411:9:73",
                "type": ""
              }
            ],
            "src": "18345:129:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18557:83:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18567:67:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18628:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC721_$13064_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18580:47:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18580:54:73"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18567:9:73"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC721_$13064_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18537:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18547:9:73",
                "type": ""
              }
            ],
            "src": "18480:160:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18723:53:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18733:37:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18764:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18746:17:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18746:24:73"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18733:9:73"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC721_$13064_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18703:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18713:9:73",
                "type": ""
              }
            ],
            "src": "18646:130:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18810:152:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18827:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18830:77:73",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18820:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18820:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18820:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18924:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18927:4:73",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18917:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18917:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18917:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18948:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18951:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18941:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18941:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18941:15:73"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18782:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19057:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19074:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19077:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19067:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19067:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19067:12:73"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "18968:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19180:28:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19197:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19200:1:73",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19190:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19190:12:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19190:12:73"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "19091:117:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19320:63:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19342:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19350:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19338:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19338:14:73"
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206d696e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19354:21:73",
                        "type": "",
                        "value": "Invalid nft to mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19331:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19331:45:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19331:45:73"
                }
              ]
            },
            "name": "store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19312:6:73",
                "type": ""
              }
            ],
            "src": "19214:169:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19495:119:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19517:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19525:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19513:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19513:14:73"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19529:34:73",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19506:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19506:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19506:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19585:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19593:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19581:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19581:15:73"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19598:8:73",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19574:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19574:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19574:33:73"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19487:6:73",
                "type": ""
              }
            ],
            "src": "19389:225:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19726:118:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19748:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19756:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19744:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19744:14:73"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f66207468652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19760:34:73",
                        "type": "",
                        "value": "Sender is not the owner of the t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19737:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19737:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19737:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19816:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19824:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19812:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19812:15:73"
                      },
                      {
                        "hexValue": "6f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19829:7:73",
                        "type": "",
                        "value": "oken."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19805:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19805:32:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19805:32:73"
                }
              ]
            },
            "name": "store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19718:6:73",
                "type": ""
              }
            ],
            "src": "19620:224:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19956:63:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19978:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19986:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19974:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19974:14:73"
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206275726e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19990:21:73",
                        "type": "",
                        "value": "Invalid nft to burn"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19967:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19967:45:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19967:45:73"
                }
              ]
            },
            "name": "store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19948:6:73",
                "type": ""
              }
            ],
            "src": "19850:169:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20131:76:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20153:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20161:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20149:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20149:14:73"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20165:34:73",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20142:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20142:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20142:58:73"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20123:6:73",
                "type": ""
              }
            ],
            "src": "20025:182:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20319:117:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20341:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20349:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20337:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20337:14:73"
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520676976656e20666f7220746865206e667420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20353:34:73",
                        "type": "",
                        "value": "Invalid stake given for the nft "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20330:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20330:58:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20330:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20409:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20417:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20405:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20405:15:73"
                      },
                      {
                        "hexValue": "6d696e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20422:6:73",
                        "type": "",
                        "value": "mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20398:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20398:31:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20398:31:73"
                }
              ]
            },
            "name": "store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20311:6:73",
                "type": ""
              }
            ],
            "src": "20213:223:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20548:74:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20570:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20578:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20566:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20566:14:73"
                      },
                      {
                        "hexValue": "546865206e66742063616e206e6f74206265206275726e6564207965742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20582:32:73",
                        "type": "",
                        "value": "The nft can not be burned yet."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20559:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20559:56:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20559:56:73"
                }
              ]
            },
            "name": "store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20540:6:73",
                "type": ""
              }
            ],
            "src": "20442:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20734:72:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20756:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20764:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20752:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20752:14:73"
                      },
                      {
                        "hexValue": "43616e206e6f742068617276657374204e465420616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20768:30:73",
                        "type": "",
                        "value": "Can not harvest NFT address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20745:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20745:54:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20745:54:73"
                }
              ]
            },
            "name": "store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20726:6:73",
                "type": ""
              }
            ],
            "src": "20628:178:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20855:79:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20912:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20921:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20924:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20914:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20914:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20914:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20878:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20903:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "20885:17:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20885:24:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "20875:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20875:35:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20868:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20868:43:73"
                  },
                  "nodeType": "YulIf",
                  "src": "20865:2:73"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20848:5:73",
                "type": ""
              }
            ],
            "src": "20812:122:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20980:76:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21034:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21043:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21046:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21036:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21036:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21036:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21003:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21025:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "21010:14:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21010:21:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21000:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21000:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20993:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20993:40:73"
                  },
                  "nodeType": "YulIf",
                  "src": "20990:2:73"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20973:5:73",
                "type": ""
              }
            ],
            "src": "20940:116:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21121:95:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21194:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21203:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21206:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21196:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21196:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21196:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21144:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21185:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$10988",
                              "nodeType": "YulIdentifier",
                              "src": "21151:33:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21151:40:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21141:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21141:51:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21134:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21134:59:73"
                  },
                  "nodeType": "YulIf",
                  "src": "21131:2:73"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$10988",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21114:5:73",
                "type": ""
              }
            ],
            "src": "21062:154:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21282:96:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21356:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21365:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21368:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21358:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21358:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21358:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21305:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21347:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC721_$13064",
                              "nodeType": "YulIdentifier",
                              "src": "21312:34:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21312:41:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21302:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21302:52:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21295:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21295:60:73"
                  },
                  "nodeType": "YulIf",
                  "src": "21292:2:73"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC721_$13064",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21275:5:73",
                "type": ""
              }
            ],
            "src": "21222:156:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21443:95:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21516:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21525:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21528:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21518:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21518:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21518:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21466:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21507:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Mintable_$271",
                              "nodeType": "YulIdentifier",
                              "src": "21473:33:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21473:40:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21463:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21463:51:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21456:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21456:59:73"
                  },
                  "nodeType": "YulIf",
                  "src": "21453:2:73"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Mintable_$271",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21436:5:73",
                "type": ""
              }
            ],
            "src": "21384:154:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21587:79:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21644:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21653:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21656:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21646:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21646:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21646:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21610:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21635:5:73"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "21617:17:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21617:24:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21607:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21607:35:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21600:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21600:43:73"
                  },
                  "nodeType": "YulIf",
                  "src": "21597:2:73"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21580:5:73",
                "type": ""
              }
            ],
            "src": "21544:122:73"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$10988(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$10988(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$13064(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$13064(value)\n    }\n\n    function abi_decode_t_contract$_Mintable_$271(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Mintable_$271(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$13064t_contract$_IERC20_$10988t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$13064(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$10988(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$13064t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$13064(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Mintable_$271(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Mintable_$271(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Mintable_$271t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Mintable_$271(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$10988_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$10988_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$13064_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$13064_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$10988_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$10988_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC721_$13064_t_contract$_IERC20_$10988_t_bool__to_t_uint256_t_address_t_address_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC721_$13064_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IERC20_$10988_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$10988(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$13064(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Mintable_$271(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$10988_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$10988_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$10988_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$13064_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC721_$13064_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$13064_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid nft to mint\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is not the owner of the t\")\n\n        mstore(add(memPtr, 32), \"oken.\")\n\n    }\n\n    function store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid nft to burn\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake given for the nft \")\n\n        mstore(add(memPtr, 32), \"mint\")\n\n    }\n\n    function store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666(memPtr) {\n\n        mstore(add(memPtr, 0), \"The nft can not be burned yet.\")\n\n    }\n\n    function store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can not harvest NFT address.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$10988(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$10988(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$13064(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$13064(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Mintable_$271(value) {\n        if iszero(eq(value, cleanup_t_contract$_Mintable_$271(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 73,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "381:3758:5:-:0;;;1034:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:29;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1092:8:5;1074:7;;:27;;;;;;;;;;;;;;;;;;1034:75;381:3758;;640:96:57;693:7;719:10;712:17;;640:96;:::o;2270:187:29:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:143:73:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;639:51;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;741:81;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:2;;1186:1;1183;1176:12;1127:2;1117:79;:::o;381:3758:5:-;;;;;;;",
  "deployedSourceMap": "381:3758:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;874:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1512:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1794:859;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;716:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:29;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3324:812:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1190:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2742:525:5;2924:1;2878:48;;2886:4;:19;2899:4;2886:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2878:48;;;;2870:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3079:10;3058:31;;:4;:12;;;3071:3;3058:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;;3050:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3202:7;;;;;;;;;;;:15;;;3218:10;3230:4;:19;3243:4;3230:19;;;;;;;;;;;;;;;:23;;;3255:3;3202:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:525;;:::o;874:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1512:150::-;1259:12:29;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1611:7:5::1;;;;;;;;;;;:11;;;1623:4;1629:11;1642;1611:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1512:150:::0;;;:::o;1794:859::-;1961:1;1915:48;;1923:4;:19;1936:4;1923:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1915:48;;;;1907:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2058:19;2080:4;:19;2093:4;2080:19;;;;;;;;;;;;;;;2058:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2260:4;:10;;;2206:4;:10;;;:20;;;2227:10;2247:7;;;;;;;;;;;2206:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;2198:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;2372:7;2382:4;:9;;;2392:10;2382:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2372:31;;2444:12;2416:6;:21;2431:4;2416:21;;;;;;;;;;;;;;;:25;2438:2;2416:25;;;;;;;;;;;:40;;;;2503:27;2520:4;2527:2;2503:27;;;;;;;:::i;:::-;;;;;;;;2582:7;;;;;;;;;;;:15;;;2598:10;2610:4;:8;;;2620:2;2624:4;:10;;;2582:53;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1829:824;;1794:859;:::o;716:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1668:101:29:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;3324:812:5:-;3501:1;3455:48;;3463:4;:19;3476:4;3463:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;3455:48;;;;3447:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3661:4;3645:30;;;3676:3;3645:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3631:49;;:10;:49;;;3623:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;3857:4;:19;3870:4;3857:19;;;;;;;;;;;;;;;:28;;;3828:6;:21;3843:4;3828:21;;;;;;;;;;;;;;;:26;3850:3;3828:26;;;;;;;;;;;;:57;;;;:::i;:::-;3813:12;:72;3805:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;3981:7;;;;;;;;;;;:16;;;3998:10;4010:4;:19;4023:4;4010:19;;;;;;;;;;;;;;;:23;;;4035:3;4039:4;:19;4052:4;4039:19;;;;;;;;;;;;;;;:25;;;3981:84;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4114:4;:9;;;4124:3;4114:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3324:812;;:::o;1190:263::-;1259:12:29;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1306:7:5::1;;;;;;;;;;;:11;;;1318;1331:4;1337:6;1345:4;1306:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1385:60;;;;;;;;1393:6;1385:60;;;;;;1401:6;1385:60;;;;1409:9;1385:60;;;;1443:1;1420:7;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;;;:::i;:::-;1385:60;;::::0;1363:4:::1;:19;1376:4;1363:19;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:263:::0;;;;;:::o;1918:198:29:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:57:-;693:7;719:10;712:17;;640:96;:::o;2270:187:29:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:73:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:133::-;344:5;382:6;369:20;360:29;;398:30;422:5;398:30;:::i;:::-;350:84;;;;:::o;440:171::-;502:5;540:6;527:20;518:29;;556:49;599:5;556:49;:::i;:::-;508:103;;;;:::o;617:173::-;680:5;718:6;705:20;696:29;;734:50;778:5;734:50;:::i;:::-;686:104;;;;:::o;796:171::-;858:5;896:6;883:20;874:29;;912:49;955:5;912:49;:::i;:::-;864:103;;;;:::o;973:139::-;1019:5;1057:6;1044:20;1035:29;;1073:33;1100:5;1073:33;:::i;:::-;1025:87;;;;:::o;1118:143::-;1175:5;1206:6;1200:13;1191:22;;1222:33;1249:5;1222:33;:::i;:::-;1181:80;;;;:::o;1267:329::-;1326:6;1375:2;1363:9;1354:7;1350:23;1346:32;1343:2;;;1381:79;;:::i;:::-;1343:2;1501:1;1526:53;1571:7;1562:6;1551:9;1547:22;1526:53;:::i;:::-;1516:63;;1472:117;1333:263;;;;:::o;1602:351::-;1672:6;1721:2;1709:9;1700:7;1696:23;1692:32;1689:2;;;1727:79;;:::i;:::-;1689:2;1847:1;1872:64;1928:7;1919:6;1908:9;1904:22;1872:64;:::i;:::-;1862:74;;1818:128;1679:274;;;;:::o;1959:474::-;2027:6;2035;2084:2;2072:9;2063:7;2059:23;2055:32;2052:2;;;2090:79;;:::i;:::-;2052:2;2210:1;2235:53;2280:7;2271:6;2260:9;2256:22;2235:53;:::i;:::-;2225:63;;2181:117;2337:2;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2308:118;2042:391;;;;;:::o;2439:977::-;2567:6;2575;2583;2591;2599;2648:3;2636:9;2627:7;2623:23;2619:33;2616:2;;;2655:79;;:::i;:::-;2616:2;2775:1;2800:70;2862:7;2853:6;2842:9;2838:22;2800:70;:::i;:::-;2790:80;;2746:134;2919:2;2945:69;3006:7;2997:6;2986:9;2982:22;2945:69;:::i;:::-;2935:79;;2890:134;3063:2;3089:53;3134:7;3125:6;3114:9;3110:22;3089:53;:::i;:::-;3079:63;;3034:118;3191:2;3217:53;3262:7;3253:6;3242:9;3238:22;3217:53;:::i;:::-;3207:63;;3162:118;3319:3;3346:53;3391:7;3382:6;3371:9;3367:22;3346:53;:::i;:::-;3336:63;;3290:119;2606:810;;;;;;;;:::o;3422:508::-;3507:6;3515;3564:2;3552:9;3543:7;3539:23;3535:32;3532:2;;;3570:79;;:::i;:::-;3532:2;3690:1;3715:70;3777:7;3768:6;3757:9;3753:22;3715:70;:::i;:::-;3705:80;;3661:134;3834:2;3860:53;3905:7;3896:6;3885:9;3881:22;3860:53;:::i;:::-;3850:63;;3805:118;3522:408;;;;;:::o;3936:361::-;4011:6;4060:2;4048:9;4039:7;4035:23;4031:32;4028:2;;;4066:79;;:::i;:::-;4028:2;4186:1;4211:69;4272:7;4263:6;4252:9;4248:22;4211:69;:::i;:::-;4201:79;;4157:133;4018:279;;;;:::o;4303:506::-;4387:6;4395;4444:2;4432:9;4423:7;4419:23;4415:32;4412:2;;;4450:79;;:::i;:::-;4412:2;4570:1;4595:69;4656:7;4647:6;4636:9;4632:22;4595:69;:::i;:::-;4585:79;;4541:133;4713:2;4739:53;4784:7;4775:6;4764:9;4760:22;4739:53;:::i;:::-;4729:63;;4684:118;4402:407;;;;;:::o;4815:351::-;4885:6;4934:2;4922:9;4913:7;4909:23;4905:32;4902:2;;;4940:79;;:::i;:::-;4902:2;5060:1;5085:64;5141:7;5132:6;5121:9;5117:22;5085:64;:::i;:::-;5075:74;;5031:128;4892:274;;;;:::o;5172:613::-;5246:6;5254;5262;5311:2;5299:9;5290:7;5286:23;5282:32;5279:2;;;5317:79;;:::i;:::-;5279:2;5437:1;5462:53;5507:7;5498:6;5487:9;5483:22;5462:53;:::i;:::-;5452:63;;5408:117;5564:2;5590:53;5635:7;5626:6;5615:9;5611:22;5590:53;:::i;:::-;5580:63;;5535:118;5692:2;5718:50;5760:7;5751:6;5740:9;5736:22;5718:50;:::i;:::-;5708:60;;5663:115;5269:516;;;;;:::o;5791:118::-;5878:24;5896:5;5878:24;:::i;:::-;5873:3;5866:37;5856:53;;:::o;5915:109::-;5996:21;6011:5;5996:21;:::i;:::-;5991:3;5984:34;5974:50;;:::o;6030:163::-;6133:53;6180:5;6133:53;:::i;:::-;6128:3;6121:66;6111:82;;:::o;6199:165::-;6303:54;6351:5;6303:54;:::i;:::-;6298:3;6291:67;6281:83;;:::o;6370:366::-;6512:3;6533:67;6597:2;6592:3;6533:67;:::i;:::-;6526:74;;6609:93;6698:3;6609:93;:::i;:::-;6727:2;6722:3;6718:12;6711:19;;6516:220;;;:::o;6742:366::-;6884:3;6905:67;6969:2;6964:3;6905:67;:::i;:::-;6898:74;;6981:93;7070:3;6981:93;:::i;:::-;7099:2;7094:3;7090:12;7083:19;;6888:220;;;:::o;7114:366::-;7256:3;7277:67;7341:2;7336:3;7277:67;:::i;:::-;7270:74;;7353:93;7442:3;7353:93;:::i;:::-;7471:2;7466:3;7462:12;7455:19;;7260:220;;;:::o;7486:366::-;7628:3;7649:67;7713:2;7708:3;7649:67;:::i;:::-;7642:74;;7725:93;7814:3;7725:93;:::i;:::-;7843:2;7838:3;7834:12;7827:19;;7632:220;;;:::o;7858:366::-;8000:3;8021:67;8085:2;8080:3;8021:67;:::i;:::-;8014:74;;8097:93;8186:3;8097:93;:::i;:::-;8215:2;8210:3;8206:12;8199:19;;8004:220;;;:::o;8230:366::-;8372:3;8393:67;8457:2;8452:3;8393:67;:::i;:::-;8386:74;;8469:93;8558:3;8469:93;:::i;:::-;8587:2;8582:3;8578:12;8571:19;;8376:220;;;:::o;8602:366::-;8744:3;8765:67;8829:2;8824:3;8765:67;:::i;:::-;8758:74;;8841:93;8930:3;8841:93;:::i;:::-;8959:2;8954:3;8950:12;8943:19;;8748:220;;;:::o;8974:366::-;9116:3;9137:67;9201:2;9196:3;9137:67;:::i;:::-;9130:74;;9213:93;9302:3;9213:93;:::i;:::-;9331:2;9326:3;9322:12;9315:19;;9120:220;;;:::o;9346:118::-;9433:24;9451:5;9433:24;:::i;:::-;9428:3;9421:37;9411:53;;:::o;9470:222::-;9563:4;9601:2;9590:9;9586:18;9578:26;;9614:71;9682:1;9671:9;9667:17;9658:6;9614:71;:::i;:::-;9568:124;;;;:::o;9698:332::-;9819:4;9857:2;9846:9;9842:18;9834:26;;9870:71;9938:1;9927:9;9923:17;9914:6;9870:71;:::i;:::-;9951:72;10019:2;10008:9;10004:18;9995:6;9951:72;:::i;:::-;9824:206;;;;;:::o;10036:332::-;10157:4;10195:2;10184:9;10180:18;10172:26;;10208:71;10276:1;10265:9;10261:17;10252:6;10208:71;:::i;:::-;10289:72;10357:2;10346:9;10342:18;10333:6;10289:72;:::i;:::-;10162:206;;;;;:::o;10374:442::-;10523:4;10561:2;10550:9;10546:18;10538:26;;10574:71;10642:1;10631:9;10627:17;10618:6;10574:71;:::i;:::-;10655:72;10723:2;10712:9;10708:18;10699:6;10655:72;:::i;:::-;10737;10805:2;10794:9;10790:18;10781:6;10737:72;:::i;:::-;10528:288;;;;;;:::o;10822:553::-;10999:4;11037:3;11026:9;11022:19;11014:27;;11051:71;11119:1;11108:9;11104:17;11095:6;11051:71;:::i;:::-;11132:72;11200:2;11189:9;11185:18;11176:6;11132:72;:::i;:::-;11214;11282:2;11271:9;11267:18;11258:6;11214:72;:::i;:::-;11296;11364:2;11353:9;11349:18;11340:6;11296:72;:::i;:::-;11004:371;;;;;;;:::o;11381:585::-;11574:4;11612:3;11601:9;11597:19;11589:27;;11626:87;11710:1;11699:9;11695:17;11686:6;11626:87;:::i;:::-;11723:72;11791:2;11780:9;11776:18;11767:6;11723:72;:::i;:::-;11805;11873:2;11862:9;11858:18;11849:6;11805:72;:::i;:::-;11887;11955:2;11944:9;11940:18;11931:6;11887:72;:::i;:::-;11579:387;;;;;;;:::o;11972:419::-;12138:4;12176:2;12165:9;12161:18;12153:26;;12225:9;12219:4;12215:20;12211:1;12200:9;12196:17;12189:47;12253:131;12379:4;12253:131;:::i;:::-;12245:139;;12143:248;;;:::o;12397:419::-;12563:4;12601:2;12590:9;12586:18;12578:26;;12650:9;12644:4;12640:20;12636:1;12625:9;12621:17;12614:47;12678:131;12804:4;12678:131;:::i;:::-;12670:139;;12568:248;;;:::o;12822:419::-;12988:4;13026:2;13015:9;13011:18;13003:26;;13075:9;13069:4;13065:20;13061:1;13050:9;13046:17;13039:47;13103:131;13229:4;13103:131;:::i;:::-;13095:139;;12993:248;;;:::o;13247:419::-;13413:4;13451:2;13440:9;13436:18;13428:26;;13500:9;13494:4;13490:20;13486:1;13475:9;13471:17;13464:47;13528:131;13654:4;13528:131;:::i;:::-;13520:139;;13418:248;;;:::o;13672:419::-;13838:4;13876:2;13865:9;13861:18;13853:26;;13925:9;13919:4;13915:20;13911:1;13900:9;13896:17;13889:47;13953:131;14079:4;13953:131;:::i;:::-;13945:139;;13843:248;;;:::o;14097:419::-;14263:4;14301:2;14290:9;14286:18;14278:26;;14350:9;14344:4;14340:20;14336:1;14325:9;14321:17;14314:47;14378:131;14504:4;14378:131;:::i;:::-;14370:139;;14268:248;;;:::o;14522:419::-;14688:4;14726:2;14715:9;14711:18;14703:26;;14775:9;14769:4;14765:20;14761:1;14750:9;14746:17;14739:47;14803:131;14929:4;14803:131;:::i;:::-;14795:139;;14693:248;;;:::o;14947:419::-;15113:4;15151:2;15140:9;15136:18;15128:26;;15200:9;15194:4;15190:20;15186:1;15175:9;15171:17;15164:47;15228:131;15354:4;15228:131;:::i;:::-;15220:139;;15118:248;;;:::o;15372:222::-;15465:4;15503:2;15492:9;15488:18;15480:26;;15516:71;15584:1;15573:9;15569:17;15560:6;15516:71;:::i;:::-;15470:124;;;;:::o;15600:607::-;15804:4;15842:3;15831:9;15827:19;15819:27;;15856:71;15924:1;15913:9;15909:17;15900:6;15856:71;:::i;:::-;15937:89;16022:2;16011:9;16007:18;15998:6;15937:89;:::i;:::-;16036:88;16120:2;16109:9;16105:18;16096:6;16036:88;:::i;:::-;16134:66;16196:2;16185:9;16181:18;16172:6;16134:66;:::i;:::-;15809:398;;;;;;;:::o;16213:430::-;16356:4;16394:2;16383:9;16379:18;16371:26;;16407:71;16475:1;16464:9;16460:17;16451:6;16407:71;:::i;:::-;16488:72;16556:2;16545:9;16541:18;16532:6;16488:72;:::i;:::-;16570:66;16632:2;16621:9;16617:18;16608:6;16570:66;:::i;:::-;16361:282;;;;;;:::o;16730:169::-;16814:11;16848:6;16843:3;16836:19;16888:4;16883:3;16879:14;16864:29;;16826:73;;;;:::o;16905:305::-;16945:3;16964:20;16982:1;16964:20;:::i;:::-;16959:25;;16998:20;17016:1;16998:20;:::i;:::-;16993:25;;17152:1;17084:66;17080:74;17077:1;17074:81;17071:2;;;17158:18;;:::i;:::-;17071:2;17202:1;17199;17195:9;17188:16;;16949:261;;;;:::o;17216:191::-;17256:4;17276:20;17294:1;17276:20;:::i;:::-;17271:25;;17310:20;17328:1;17310:20;:::i;:::-;17305:25;;17349:1;17346;17343:8;17340:2;;;17354:18;;:::i;:::-;17340:2;17399:1;17396;17392:9;17384:17;;17261:146;;;;:::o;17413:96::-;17450:7;17479:24;17497:5;17479:24;:::i;:::-;17468:35;;17458:51;;;:::o;17515:90::-;17549:7;17592:5;17585:13;17578:21;17567:32;;17557:48;;;:::o;17611:112::-;17664:7;17693:24;17711:5;17693:24;:::i;:::-;17682:35;;17672:51;;;:::o;17729:113::-;17783:7;17812:24;17830:5;17812:24;:::i;:::-;17801:35;;17791:51;;;:::o;17848:112::-;17901:7;17930:24;17948:5;17930:24;:::i;:::-;17919:35;;17909:51;;;:::o;17966:126::-;18003:7;18043:42;18036:5;18032:54;18021:65;;18011:81;;;:::o;18098:77::-;18135:7;18164:5;18153:16;;18143:32;;;:::o;18181:158::-;18247:9;18280:53;18327:5;18280:53;:::i;:::-;18267:66;;18257:82;;;:::o;18345:129::-;18411:9;18444:24;18462:5;18444:24;:::i;:::-;18431:37;;18421:53;;;:::o;18480:160::-;18547:9;18580:54;18628:5;18580:54;:::i;:::-;18567:67;;18557:83;;;:::o;18646:130::-;18713:9;18746:24;18764:5;18746:24;:::i;:::-;18733:37;;18723:53;;;:::o;18782:180::-;18830:77;18827:1;18820:88;18927:4;18924:1;18917:15;18951:4;18948:1;18941:15;19091:117;19200:1;19197;19190:12;19214:169;19354:21;19350:1;19342:6;19338:14;19331:45;19320:63;:::o;19389:225::-;19529:34;19525:1;19517:6;19513:14;19506:58;19598:8;19593:2;19585:6;19581:15;19574:33;19495:119;:::o;19620:224::-;19760:34;19756:1;19748:6;19744:14;19737:58;19829:7;19824:2;19816:6;19812:15;19805:32;19726:118;:::o;19850:169::-;19990:21;19986:1;19978:6;19974:14;19967:45;19956:63;:::o;20025:182::-;20165:34;20161:1;20153:6;20149:14;20142:58;20131:76;:::o;20213:223::-;20353:34;20349:1;20341:6;20337:14;20330:58;20422:6;20417:2;20409:6;20405:15;20398:31;20319:117;:::o;20442:180::-;20582:32;20578:1;20570:6;20566:14;20559:56;20548:74;:::o;20628:178::-;20768:30;20764:1;20756:6;20752:14;20745:54;20734:72;:::o;20812:122::-;20885:24;20903:5;20885:24;:::i;:::-;20878:5;20875:35;20865:2;;20924:1;20921;20914:12;20865:2;20855:79;:::o;20940:116::-;21010:21;21025:5;21010:21;:::i;:::-;21003:5;21000:32;20990:2;;21046:1;21043;21036:12;20990:2;20980:76;:::o;21062:154::-;21151:40;21185:5;21151:40;:::i;:::-;21144:5;21141:51;21131:2;;21206:1;21203;21196:12;21131:2;21121:95;:::o;21222:156::-;21312:41;21347:5;21312:41;:::i;:::-;21305:5;21302:52;21292:2;;21368:1;21365;21358:12;21292:2;21282:96;:::o;21384:154::-;21473:40;21507:5;21473:40;:::i;:::-;21466:5;21463:51;21453:2;;21528:1;21525;21518:12;21453:2;21443:95;:::o;21544:122::-;21617:24;21635:5;21617:24;:::i;:::-;21610:5;21607:35;21597:2;;21656:1;21653;21646:12;21597:2;21587:79;:::o",
  "source": "pragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\nimport \"./Interfaces/Mintable.sol\";\r\n\r\nimport \"./NFTChef.sol\";\r\n\r\n// Creates NFT stakes for participants \r\ncontract NFTMinter is Ownable{\r\n    using SafeERC20 for IERC20;\r\n\r\n    // struct to hold information about nfts which receive rewards from NFTChef\r\n    struct nftInfo{\r\n        IERC20 token;\r\n        uint stake;\r\n        uint duration;\r\n        uint pid;\r\n    }\r\n\r\n    // mapping holding the starting stake block of nfts tokenIds\r\n    mapping(address => mapping(uint => uint)) public starts;\r\n\r\n    // Contract of the NFTChef.\r\n    NFTChef nftChef;\r\n\r\n    // mapping of the nfts nftInfo.\r\n    mapping(address => nftInfo) public nfts;\r\n\r\n    // event emitted when an nft is minted \r\n    event NFT_Mint(address _nft, uint _id);\r\n\r\n    // Constructor\r\n    constructor(address _nftChef){\r\n        nftChef = NFTChef(_nftChef);\r\n    }\r\n\r\n    // Function to add the nft type to the NFTMinter/NFTChef contracts.\r\n    function add(IERC721 _nft, IERC20 _token, uint _stake, uint _duration, uint _allocPoint) public onlyOwner{\r\n        nftChef.add(_allocPoint, _nft, _token, true);\r\n\r\n        nfts[address(_nft)] = nftInfo(_token, _stake, _duration, nftChef.poolLength() - 1);\r\n    }\r\n\r\n    //Fuunction to set nft allocPoints in nftChef\r\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner\r\n    {\r\n        nftChef.set(_pid, _allocPoint, _withUpdate);\r\n    }\r\n\r\n    //Function to insert nft into NFTChef,\r\n\r\n    //Funtion to remove nft from NFTChef,\r\n\r\n    // Function to mint an _nft\r\n    function mint(Mintable _nft) public{\r\n        // Condition to determine if the nft to be minted exists.\r\n        require(address(nfts[address(_nft)].token) != address(0), \"Invalid nft to mint\");\r\n\r\n        // Get the info about the given nft for minting.\r\n        nftInfo memory info = nfts[address(_nft)];\r\n\r\n        // Condition to determine if the sender has aproved collateral for nft mint.\r\n        require(info.token.allowance(msg.sender, address(nftChef)) >= info.stake, \"Invalid stake given for the nft mint\");\r\n\r\n        // Mint NFT and store id for pool use.\r\n        uint id = _nft.mint(msg.sender);\r\n\r\n        starts[address(_nft)][id] = block.number;\r\n\r\n        // Mint and emit id\r\n        emit NFT_Mint(address(_nft), id);\r\n\r\n        //deposit stake into NFTChef.\r\n        nftChef.deposit(msg.sender, info.pid, id, info.stake);\r\n        \r\n    }\r\n\r\n    // Function to harvest CryptoGame tokens on the behalf of the _nft with _id\r\n    function harvest(IERC721 _nft, uint _id) public{\r\n        // Condition to determine if the nft to be harvested exists.\r\n        require(address(nfts[address(_nft)].token) != address(0), \"Can not harvest NFT address.\");\r\n        // Condition to determine if the sender is the owner of _nft with _id \r\n        require(_nft.ownerOf(_id) == msg.sender, \"Sender is not the owner of the token.\");\r\n\r\n        // Condition to harvest _nft with _id to sender.\r\n        nftChef.harvest(msg.sender, nfts[address(_nft)].pid, _id);\r\n    }\r\n\r\n    // Function to burn _nft and receive stake.\r\n    function burn(Mintable _nft, uint _id) public{\r\n        // Condition to determine if the nft to be burned exists.\r\n        require(address(nfts[address(_nft)].token) != address(0), \"Invalid nft to burn\");\r\n\r\n        // Condition to determine if the sender is the owner of the _nft with _id\r\n        require(msg.sender == IERC721(address(_nft)).ownerOf(_id), \"Sender is not the owner of the token.\");\r\n\r\n        // Condition to determine if the stake duration has expired.\r\n        require(block.number > starts[address(_nft)][_id] + nfts[address(_nft)].duration, \"The nft can not be burned yet.\");\r\n\r\n        // Remove nft and stake from the pool.\r\n        nftChef.withdraw(msg.sender, nfts[address(_nft)].pid, _id,nfts[address(_nft)].stake);\r\n\r\n        // Burn the _nft with _id.\r\n        _nft.burn(_id);\r\n    }\r\n}",
  "sourcePath": "/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTMinter.sol",
  "ast": {
    "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTMinter.sol",
    "exportedSymbols": {
      "Address": [
        13901
      ],
      "Context": [
        13923
      ],
      "CryptoGame": [
        31
      ],
      "ERC20": [
        10910
      ],
      "EnumerableSet": [
        17090
      ],
      "IERC165": [
        15357
      ],
      "IERC20": [
        10988
      ],
      "IERC20Metadata": [
        11650
      ],
      "IERC721": [
        13064
      ],
      "Mintable": [
        271
      ],
      "NFTChef": [
        1192
      ],
      "NFTMinter": [
        1556
      ],
      "Ownable": [
        5992
      ],
      "SafeERC20": [
        12082
      ],
      "SafeMath": [
        16150
      ]
    },
    "id": 1557,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1194,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1195,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 5993,
        "src": "27:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1196,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 10989,
        "src": "83:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 1197,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 13065,
        "src": "143:58:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1198,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 12083,
        "src": "205:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/Interfaces/Mintable.sol",
        "file": "./Interfaces/Mintable.sol",
        "id": 1199,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 272,
        "src": "274:35:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTChef.sol",
        "file": "./NFTChef.sol",
        "id": 1200,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 1193,
        "src": "313:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1201,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5992,
              "src": "403:7:5"
            },
            "id": 1202,
            "nodeType": "InheritanceSpecifier",
            "src": "403:7:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1556,
        "linearizedBaseContracts": [
          1556,
          5992,
          13923
        ],
        "name": "NFTMinter",
        "nameLocation": "390:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1206,
            "libraryName": {
              "id": 1203,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12082,
              "src": "423:9:5"
            },
            "nodeType": "UsingForDirective",
            "src": "417:27:5",
            "typeName": {
              "id": 1205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1204,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10988,
                "src": "437:6:5"
              },
              "referencedDeclaration": 10988,
              "src": "437:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10988",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "NFTMinter.nftInfo",
            "id": 1216,
            "members": [
              {
                "constant": false,
                "id": 1209,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "565:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "558:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$10988",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 1208,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1207,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10988,
                    "src": "558:6:5"
                  },
                  "referencedDeclaration": 10988,
                  "src": "558:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10988",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1211,
                "mutability": "mutable",
                "name": "stake",
                "nameLocation": "586:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "581:10:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1210,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1213,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "607:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "602:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1212,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1215,
                "mutability": "mutable",
                "name": "pid",
                "nameLocation": "631:3:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "626:8:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1214,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "626:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "nftInfo",
            "nameLocation": "540:7:5",
            "nodeType": "StructDefinition",
            "scope": 1556,
            "src": "533:109:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e03cd69",
            "id": 1222,
            "mutability": "mutable",
            "name": "starts",
            "nameLocation": "765:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1556,
            "src": "716:55:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 1221,
              "keyType": {
                "id": 1217,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "724:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "716:41:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 1220,
                "keyType": {
                  "id": 1218,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "743:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "735:21:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 1219,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "751:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1225,
            "mutability": "mutable",
            "name": "nftChef",
            "nameLocation": "821:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1556,
            "src": "813:15:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTChef_$1192",
              "typeString": "contract NFTChef"
            },
            "typeName": {
              "id": 1224,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1223,
                "name": "NFTChef",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1192,
                "src": "813:7:5"
              },
              "referencedDeclaration": 1192,
              "src": "813:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTChef_$1192",
                "typeString": "contract NFTChef"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "599db0f8",
            "id": 1230,
            "mutability": "mutable",
            "name": "nfts",
            "nameLocation": "909:4:5",
            "nodeType": "VariableDeclaration",
            "scope": 1556,
            "src": "874:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
              "typeString": "mapping(address => struct NFTMinter.nftInfo)"
            },
            "typeName": {
              "id": 1229,
              "keyType": {
                "id": 1226,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                "typeString": "mapping(address => struct NFTMinter.nftInfo)"
              },
              "valueType": {
                "id": 1228,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1227,
                  "name": "nftInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1216,
                  "src": "893:7:5"
                },
                "referencedDeclaration": 1216,
                "src": "893:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage_ptr",
                  "typeString": "struct NFTMinter.nftInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1236,
            "name": "NFT_Mint",
            "nameLocation": "973:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "990:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "982:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1234,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1001:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "996:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:24:5"
            },
            "src": "967:39:5"
          },
          {
            "body": {
              "id": 1247,
              "nodeType": "Block",
              "src": "1063:46:5",
              "statements": [
                {
                  "expression": {
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1241,
                      "name": "nftChef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "1074:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$1192",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1243,
                          "name": "_nftChef",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1238,
                          "src": "1092:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1242,
                        "name": "NFTChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "1084:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTChef_$1192_$",
                          "typeString": "type(contract NFTChef)"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$1192",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "src": "1074:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTChef_$1192",
                      "typeString": "contract NFTChef"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:27:5"
                }
              ]
            },
            "id": 1248,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_nftChef",
                  "nameLocation": "1054:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1248,
                  "src": "1046:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:18:5"
            },
            "returnParameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:5"
            },
            "scope": 1556,
            "src": "1034:75:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "1295:158:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1268,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "1318:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "1331:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$13064",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 1270,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "1337:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10988",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$13064",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$10988",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1265,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "1306:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 496,
                      "src": "1306:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC721_$13064_$_t_contract$_IERC20_$10988_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,contract IERC721,contract IERC20,bool) external"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:44:5"
                },
                {
                  "expression": {
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1274,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1230,
                        "src": "1363:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                          "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                        }
                      },
                      "id": 1279,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1277,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "1376:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$13064",
                              "typeString": "contract IERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721_$13064",
                              "typeString": "contract IERC721"
                            }
                          ],
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1368:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1368:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1363:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                        "typeString": "struct NFTMinter.nftInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1281,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "1393:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10988",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 1282,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1256,
                          "src": "1401:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1283,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1258,
                          "src": "1409:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1284,
                                "name": "nftChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1225,
                                "src": "1420:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTChef_$1192",
                                  "typeString": "contract NFTChef"
                                }
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "poolLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 444,
                              "src": "1420:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1420:20:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1443:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1420:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$10988",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1280,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "1385:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_nftInfo_$1216_storage_ptr_$",
                          "typeString": "type(struct NFTMinter.nftInfo storage pointer)"
                        }
                      },
                      "id": 1289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1385:60:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo memory"
                      }
                    },
                    "src": "1363:82:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:82:5"
                }
              ]
            },
            "functionSelector": "cbcf0270",
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1262,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5934,
                  "src": "1286:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1286:9:5"
              }
            ],
            "name": "add",
            "nameLocation": "1199:3:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1211:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1203:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$13064",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1249,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13064,
                      "src": "1203:7:5"
                    },
                    "referencedDeclaration": 13064,
                    "src": "1203:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$13064",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1224:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1217:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10988",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1253,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1252,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10988,
                      "src": "1217:6:5"
                    },
                    "referencedDeclaration": 10988,
                    "src": "1217:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10988",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "1237:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1232:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1250:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1245:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1266:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1261:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:76:5"
            },
            "returnParameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1295:0:5"
            },
            "scope": 1556,
            "src": "1190:263:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1312,
              "nodeType": "Block",
              "src": "1600:62:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1307,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1623:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1308,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1297,
                        "src": "1629:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1309,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "1642:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1304,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "1611:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 534,
                      "src": "1611:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,bool) external"
                      }
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:43:5"
                }
              ]
            },
            "functionSelector": "64482f79",
            "id": 1313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1301,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5934,
                  "src": "1585:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1585:9:5"
              }
            ],
            "name": "set",
            "nameLocation": "1521:3:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1533:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "1525:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1547:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "1539:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "1565:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "1560:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1524:53:5"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:5"
            },
            "scope": 1556,
            "src": "1512:150:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1405,
              "nodeType": "Block",
              "src": "1829:824:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1322,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "1923:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1327,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1325,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1316,
                                      "src": "1936:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1928:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1323,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1928:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1928:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1923:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "1923:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1915:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1320,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1915:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1915:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1961:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1953:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1330,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1953:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1953:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1915:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206d696e74",
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1965:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        },
                        "value": "Invalid nft to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        }
                      ],
                      "id": 1319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1907:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:80:5"
                },
                {
                  "assignments": [
                    1340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1340,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2073:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "2058:19:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo"
                      },
                      "typeName": {
                        "id": 1339,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1338,
                          "name": "nftInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1216,
                          "src": "2058:7:5"
                        },
                        "referencedDeclaration": 1216,
                        "src": "2058:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nftInfo_$1216_storage_ptr",
                          "typeString": "struct NFTMinter.nftInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1347,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1341,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "2080:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                        "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                      }
                    },
                    "id": 1346,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1344,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "2093:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mintable_$271",
                            "typeString": "contract Mintable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Mintable_$271",
                            "typeString": "contract Mintable"
                          }
                        ],
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2085:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2085:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2085:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2080:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2058:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1352,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2227:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2227:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1356,
                                  "name": "nftChef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1225,
                                  "src": "2247:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTChef_$1192",
                                    "typeString": "contract NFTChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTChef_$1192",
                                    "typeString": "contract NFTChef"
                                  }
                                ],
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2239:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1354,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2239:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2239:16:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1349,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "2206:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                                  "typeString": "struct NFTMinter.nftInfo memory"
                                }
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "2206:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10965,
                            "src": "2206:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2206:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1359,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "2260:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                              "typeString": "struct NFTMinter.nftInfo memory"
                            }
                          },
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1211,
                          "src": "2260:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2206:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520676976656e20666f7220746865206e6674206d696e74",
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2272:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        },
                        "value": "Invalid stake given for the nft mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        }
                      ],
                      "id": 1348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2198:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2198:113:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:113:5"
                },
                {
                  "assignments": [
                    1366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1366,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "2377:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "2372:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1365,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2372:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1372,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2392:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2392:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1367,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "2382:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$271",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 265,
                      "src": "2382:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) payable external returns (uint256)"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2372:31:5"
                },
                {
                  "expression": {
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1373,
                          "name": "starts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1222,
                          "src": "2416:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1379,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 1376,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1316,
                              "src": "2431:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Mintable_$271",
                                "typeString": "contract Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Mintable_$271",
                                "typeString": "contract Mintable"
                              }
                            ],
                            "id": 1375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2423:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1374,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2423:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2423:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2416:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1380,
                      "indexExpression": {
                        "id": 1378,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2438:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2416:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1381,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2444:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2444:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2416:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:40:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1388,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "2520:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Mintable_$271",
                              "typeString": "contract Mintable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Mintable_$271",
                              "typeString": "contract Mintable"
                            }
                          ],
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2512:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1386,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2512:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1390,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2527:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1385,
                      "name": "NFT_Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1236,
                      "src": "2503:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1392,
                  "nodeType": "EmitStatement",
                  "src": "2498:32:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1396,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2598:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2598:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1398,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "2610:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "2610:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1400,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2620:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1401,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "2624:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1211,
                        "src": "2624:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1393,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "2582:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 900,
                      "src": "2582:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "2582:53:5"
                }
              ]
            },
            "functionSelector": "6a627842",
            "id": 1406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1803:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1817:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "1808:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$271",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1315,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1314,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 271,
                      "src": "1808:8:5"
                    },
                    "referencedDeclaration": 271,
                    "src": "1808:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$271",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1807:15:5"
            },
            "returnParameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1829:0:5"
            },
            "scope": 1556,
            "src": "1794:859:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "2789:478:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1417,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "2886:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1422,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1420,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1409,
                                      "src": "2899:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC721_$13064",
                                        "typeString": "contract IERC721"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC721_$13064",
                                        "typeString": "contract IERC721"
                                      }
                                    ],
                                    "id": 1419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2891:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1418,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2891:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2891:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2886:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "2886:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2878:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1415,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2878:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2878:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2924:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2916:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1425,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2916:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2916:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2878:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f742068617276657374204e465420616464726573732e",
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2928:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        },
                        "value": "Can not harvest NFT address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        }
                      ],
                      "id": 1414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2870:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:89:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1432,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:89:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1436,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "3071:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1434,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1409,
                              "src": "3058:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$13064",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12997,
                            "src": "3058:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3058:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3079:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3079:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3058:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3050:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:81:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:81:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1447,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3218:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3218:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1449,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "3230:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1454,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1452,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1409,
                                "src": "3243:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$13064",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$13064",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3235:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1450,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3235:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3235:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3230:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "3230:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1456,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "3255:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1444,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "3202:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1135,
                      "src": "3202:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3202:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:57:5"
                }
              ]
            },
            "functionSelector": "018ee9b7",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "2751:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "2767:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "2759:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$13064",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1408,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1407,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13064,
                      "src": "2759:7:5"
                    },
                    "referencedDeclaration": 13064,
                    "src": "2759:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$13064",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2778:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "2773:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2758:24:5"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:5"
            },
            "scope": 1556,
            "src": "2742:525:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1554,
              "nodeType": "Block",
              "src": "3369:767:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1471,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "3463:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1476,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1474,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1463,
                                      "src": "3476:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1473,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3468:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1472,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3468:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3468:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3463:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1477,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "3463:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3455:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1469,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3455:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3455:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3501:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3493:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1479,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3493:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3493:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3455:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206275726e",
                        "id": 1484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3505:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        },
                        "value": "Invalid nft to burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        }
                      ],
                      "id": 1468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3447:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3447:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1486,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:80:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1488,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3631:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3631:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1497,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "3676:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1493,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1463,
                                      "src": "3661:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3653:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1491,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3653:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3653:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1490,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13064,
                                "src": "3645:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$13064_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3645:22:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$13064",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12997,
                            "src": "3645:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3631:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3682:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3623:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:99:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:99:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1504,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3813:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "3813:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1506,
                                "name": "starts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "3828:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 1511,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1509,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1463,
                                    "src": "3843:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3835:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1507,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3835:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3835:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3828:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1513,
                            "indexExpression": {
                              "id": 1512,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "3850:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3828:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1514,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1230,
                                "src": "3857:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                  "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                }
                              },
                              "id": 1519,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1517,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1463,
                                    "src": "3870:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3862:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1515,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3862:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3862:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3857:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                "typeString": "struct NFTMinter.nftInfo storage ref"
                              }
                            },
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "duration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1213,
                            "src": "3857:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3828:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3813:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e66742063616e206e6f74206265206275726e6564207965742e",
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3887:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        },
                        "value": "The nft can not be burned yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        }
                      ],
                      "id": 1503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3805:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3805:115:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "3805:115:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3998:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3998:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1531,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "4010:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1536,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1534,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1463,
                                "src": "4023:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4015:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1532,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4015:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4015:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4010:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "4010:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1538,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "4035:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1539,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "4039:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1544,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1542,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1463,
                                "src": "4052:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4044:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4044:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4044:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4039:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1211,
                        "src": "4039:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1526,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "3981:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1005,
                      "src": "3981:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1551,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "4124:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1548,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "4114:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$271",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 270,
                      "src": "4114:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4114:14:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1553,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:14:5"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 1555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "3333:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "3347:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "3338:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$271",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1461,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 271,
                      "src": "3338:8:5"
                    },
                    "referencedDeclaration": 271,
                    "src": "3338:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$271",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3358:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "3353:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:25:5"
            },
            "returnParameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:5"
            },
            "scope": 1556,
            "src": "3324:812:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1557,
        "src": "381:3758:5",
        "usedErrors": []
      }
    ],
    "src": "0:4139:5"
  },
  "legacyAST": {
    "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTMinter.sol",
    "exportedSymbols": {
      "Address": [
        13901
      ],
      "Context": [
        13923
      ],
      "CryptoGame": [
        31
      ],
      "ERC20": [
        10910
      ],
      "EnumerableSet": [
        17090
      ],
      "IERC165": [
        15357
      ],
      "IERC20": [
        10988
      ],
      "IERC20Metadata": [
        11650
      ],
      "IERC721": [
        13064
      ],
      "Mintable": [
        271
      ],
      "NFTChef": [
        1192
      ],
      "NFTMinter": [
        1556
      ],
      "Ownable": [
        5992
      ],
      "SafeERC20": [
        12082
      ],
      "SafeMath": [
        16150
      ]
    },
    "id": 1557,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1194,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1195,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 5993,
        "src": "27:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1196,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 10989,
        "src": "83:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 1197,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 13065,
        "src": "143:58:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1198,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 12083,
        "src": "205:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/Interfaces/Mintable.sol",
        "file": "./Interfaces/Mintable.sol",
        "id": 1199,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 272,
        "src": "274:35:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labsV0/contracts/CryptoGame/NFTChef.sol",
        "file": "./NFTChef.sol",
        "id": 1200,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1557,
        "sourceUnit": 1193,
        "src": "313:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1201,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5992,
              "src": "403:7:5"
            },
            "id": 1202,
            "nodeType": "InheritanceSpecifier",
            "src": "403:7:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1556,
        "linearizedBaseContracts": [
          1556,
          5992,
          13923
        ],
        "name": "NFTMinter",
        "nameLocation": "390:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1206,
            "libraryName": {
              "id": 1203,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12082,
              "src": "423:9:5"
            },
            "nodeType": "UsingForDirective",
            "src": "417:27:5",
            "typeName": {
              "id": 1205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1204,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10988,
                "src": "437:6:5"
              },
              "referencedDeclaration": 10988,
              "src": "437:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10988",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "NFTMinter.nftInfo",
            "id": 1216,
            "members": [
              {
                "constant": false,
                "id": 1209,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "565:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "558:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$10988",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 1208,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1207,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10988,
                    "src": "558:6:5"
                  },
                  "referencedDeclaration": 10988,
                  "src": "558:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10988",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1211,
                "mutability": "mutable",
                "name": "stake",
                "nameLocation": "586:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "581:10:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1210,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1213,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "607:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "602:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1212,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1215,
                "mutability": "mutable",
                "name": "pid",
                "nameLocation": "631:3:5",
                "nodeType": "VariableDeclaration",
                "scope": 1216,
                "src": "626:8:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1214,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "626:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "nftInfo",
            "nameLocation": "540:7:5",
            "nodeType": "StructDefinition",
            "scope": 1556,
            "src": "533:109:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e03cd69",
            "id": 1222,
            "mutability": "mutable",
            "name": "starts",
            "nameLocation": "765:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1556,
            "src": "716:55:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 1221,
              "keyType": {
                "id": 1217,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "724:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "716:41:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 1220,
                "keyType": {
                  "id": 1218,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "743:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "735:21:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 1219,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "751:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1225,
            "mutability": "mutable",
            "name": "nftChef",
            "nameLocation": "821:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1556,
            "src": "813:15:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTChef_$1192",
              "typeString": "contract NFTChef"
            },
            "typeName": {
              "id": 1224,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1223,
                "name": "NFTChef",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1192,
                "src": "813:7:5"
              },
              "referencedDeclaration": 1192,
              "src": "813:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTChef_$1192",
                "typeString": "contract NFTChef"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "599db0f8",
            "id": 1230,
            "mutability": "mutable",
            "name": "nfts",
            "nameLocation": "909:4:5",
            "nodeType": "VariableDeclaration",
            "scope": 1556,
            "src": "874:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
              "typeString": "mapping(address => struct NFTMinter.nftInfo)"
            },
            "typeName": {
              "id": 1229,
              "keyType": {
                "id": 1226,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                "typeString": "mapping(address => struct NFTMinter.nftInfo)"
              },
              "valueType": {
                "id": 1228,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1227,
                  "name": "nftInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1216,
                  "src": "893:7:5"
                },
                "referencedDeclaration": 1216,
                "src": "893:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage_ptr",
                  "typeString": "struct NFTMinter.nftInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1236,
            "name": "NFT_Mint",
            "nameLocation": "973:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "990:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "982:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1234,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1001:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "996:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:24:5"
            },
            "src": "967:39:5"
          },
          {
            "body": {
              "id": 1247,
              "nodeType": "Block",
              "src": "1063:46:5",
              "statements": [
                {
                  "expression": {
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1241,
                      "name": "nftChef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "1074:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$1192",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1243,
                          "name": "_nftChef",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1238,
                          "src": "1092:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1242,
                        "name": "NFTChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "1084:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTChef_$1192_$",
                          "typeString": "type(contract NFTChef)"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$1192",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "src": "1074:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTChef_$1192",
                      "typeString": "contract NFTChef"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:27:5"
                }
              ]
            },
            "id": 1248,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_nftChef",
                  "nameLocation": "1054:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1248,
                  "src": "1046:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:18:5"
            },
            "returnParameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:5"
            },
            "scope": 1556,
            "src": "1034:75:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "1295:158:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1268,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "1318:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "1331:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$13064",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 1270,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "1337:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10988",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$13064",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$10988",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1265,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "1306:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 496,
                      "src": "1306:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC721_$13064_$_t_contract$_IERC20_$10988_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,contract IERC721,contract IERC20,bool) external"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:44:5"
                },
                {
                  "expression": {
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1274,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1230,
                        "src": "1363:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                          "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                        }
                      },
                      "id": 1279,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1277,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "1376:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$13064",
                              "typeString": "contract IERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721_$13064",
                              "typeString": "contract IERC721"
                            }
                          ],
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1368:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1368:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1363:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                        "typeString": "struct NFTMinter.nftInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1281,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "1393:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10988",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 1282,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1256,
                          "src": "1401:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1283,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1258,
                          "src": "1409:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1284,
                                "name": "nftChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1225,
                                "src": "1420:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTChef_$1192",
                                  "typeString": "contract NFTChef"
                                }
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "poolLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 444,
                              "src": "1420:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1420:20:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1443:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1420:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$10988",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1280,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "1385:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_nftInfo_$1216_storage_ptr_$",
                          "typeString": "type(struct NFTMinter.nftInfo storage pointer)"
                        }
                      },
                      "id": 1289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1385:60:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo memory"
                      }
                    },
                    "src": "1363:82:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:82:5"
                }
              ]
            },
            "functionSelector": "cbcf0270",
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1262,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5934,
                  "src": "1286:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1286:9:5"
              }
            ],
            "name": "add",
            "nameLocation": "1199:3:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1211:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1203:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$13064",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1249,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13064,
                      "src": "1203:7:5"
                    },
                    "referencedDeclaration": 13064,
                    "src": "1203:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$13064",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1224:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1217:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10988",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1253,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1252,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10988,
                      "src": "1217:6:5"
                    },
                    "referencedDeclaration": 10988,
                    "src": "1217:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10988",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "1237:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1232:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1250:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1245:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1266:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1261:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:76:5"
            },
            "returnParameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1295:0:5"
            },
            "scope": 1556,
            "src": "1190:263:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1312,
              "nodeType": "Block",
              "src": "1600:62:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1307,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1623:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1308,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1297,
                        "src": "1629:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1309,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "1642:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1304,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "1611:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 534,
                      "src": "1611:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,bool) external"
                      }
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:43:5"
                }
              ]
            },
            "functionSelector": "64482f79",
            "id": 1313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1301,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5934,
                  "src": "1585:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1585:9:5"
              }
            ],
            "name": "set",
            "nameLocation": "1521:3:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1533:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "1525:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1547:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "1539:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "1565:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "1560:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1524:53:5"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:5"
            },
            "scope": 1556,
            "src": "1512:150:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1405,
              "nodeType": "Block",
              "src": "1829:824:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1322,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "1923:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1327,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1325,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1316,
                                      "src": "1936:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1928:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1323,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1928:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1928:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1923:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "1923:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1915:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1320,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1915:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1915:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1961:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1953:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1330,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1953:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1953:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1915:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206d696e74",
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1965:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        },
                        "value": "Invalid nft to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        }
                      ],
                      "id": 1319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1907:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:80:5"
                },
                {
                  "assignments": [
                    1340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1340,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2073:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "2058:19:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo"
                      },
                      "typeName": {
                        "id": 1339,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1338,
                          "name": "nftInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1216,
                          "src": "2058:7:5"
                        },
                        "referencedDeclaration": 1216,
                        "src": "2058:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nftInfo_$1216_storage_ptr",
                          "typeString": "struct NFTMinter.nftInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1347,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1341,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "2080:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                        "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                      }
                    },
                    "id": 1346,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1344,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "2093:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mintable_$271",
                            "typeString": "contract Mintable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Mintable_$271",
                            "typeString": "contract Mintable"
                          }
                        ],
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2085:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2085:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2085:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2080:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2058:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1352,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2227:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2227:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1356,
                                  "name": "nftChef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1225,
                                  "src": "2247:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTChef_$1192",
                                    "typeString": "contract NFTChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTChef_$1192",
                                    "typeString": "contract NFTChef"
                                  }
                                ],
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2239:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1354,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2239:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2239:16:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1349,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "2206:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                                  "typeString": "struct NFTMinter.nftInfo memory"
                                }
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "2206:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10965,
                            "src": "2206:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2206:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1359,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "2260:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                              "typeString": "struct NFTMinter.nftInfo memory"
                            }
                          },
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1211,
                          "src": "2260:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2206:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520676976656e20666f7220746865206e6674206d696e74",
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2272:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        },
                        "value": "Invalid stake given for the nft mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        }
                      ],
                      "id": 1348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2198:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2198:113:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:113:5"
                },
                {
                  "assignments": [
                    1366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1366,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "2377:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "2372:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1365,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2372:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1372,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2392:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2392:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1367,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "2382:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$271",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 265,
                      "src": "2382:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) payable external returns (uint256)"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2372:31:5"
                },
                {
                  "expression": {
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1373,
                          "name": "starts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1222,
                          "src": "2416:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1379,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 1376,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1316,
                              "src": "2431:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Mintable_$271",
                                "typeString": "contract Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Mintable_$271",
                                "typeString": "contract Mintable"
                              }
                            ],
                            "id": 1375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2423:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1374,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2423:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2423:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2416:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1380,
                      "indexExpression": {
                        "id": 1378,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2438:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2416:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1381,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2444:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2444:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2416:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:40:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1388,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "2520:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Mintable_$271",
                              "typeString": "contract Mintable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Mintable_$271",
                              "typeString": "contract Mintable"
                            }
                          ],
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2512:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1386,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2512:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1390,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2527:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1385,
                      "name": "NFT_Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1236,
                      "src": "2503:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1392,
                  "nodeType": "EmitStatement",
                  "src": "2498:32:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1396,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2598:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2598:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1398,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "2610:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "2610:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1400,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2620:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1401,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "2624:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1211,
                        "src": "2624:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1393,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "2582:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 900,
                      "src": "2582:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "2582:53:5"
                }
              ]
            },
            "functionSelector": "6a627842",
            "id": 1406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1803:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1817:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "1808:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$271",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1315,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1314,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 271,
                      "src": "1808:8:5"
                    },
                    "referencedDeclaration": 271,
                    "src": "1808:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$271",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1807:15:5"
            },
            "returnParameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1829:0:5"
            },
            "scope": 1556,
            "src": "1794:859:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "2789:478:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1417,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "2886:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1422,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1420,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1409,
                                      "src": "2899:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC721_$13064",
                                        "typeString": "contract IERC721"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC721_$13064",
                                        "typeString": "contract IERC721"
                                      }
                                    ],
                                    "id": 1419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2891:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1418,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2891:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2891:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2886:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "2886:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2878:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1415,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2878:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2878:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2924:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2916:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1425,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2916:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2916:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2878:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f742068617276657374204e465420616464726573732e",
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2928:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        },
                        "value": "Can not harvest NFT address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        }
                      ],
                      "id": 1414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2870:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:89:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1432,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:89:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1436,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "3071:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1434,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1409,
                              "src": "3058:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$13064",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12997,
                            "src": "3058:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3058:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3079:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3079:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3058:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3050:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:81:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:81:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1447,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3218:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3218:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1449,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "3230:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1454,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1452,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1409,
                                "src": "3243:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$13064",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$13064",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3235:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1450,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3235:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3235:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3230:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "3230:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1456,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "3255:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1444,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "3202:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1135,
                      "src": "3202:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3202:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:57:5"
                }
              ]
            },
            "functionSelector": "018ee9b7",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "2751:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "2767:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "2759:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$13064",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1408,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1407,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13064,
                      "src": "2759:7:5"
                    },
                    "referencedDeclaration": 13064,
                    "src": "2759:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$13064",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2778:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "2773:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2758:24:5"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:5"
            },
            "scope": 1556,
            "src": "2742:525:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1554,
              "nodeType": "Block",
              "src": "3369:767:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1471,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "3463:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1476,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1474,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1463,
                                      "src": "3476:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1473,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3468:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1472,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3468:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3468:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3463:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1477,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "3463:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10988",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3455:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1469,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3455:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3455:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3501:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3493:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1479,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3493:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3493:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3455:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206275726e",
                        "id": 1484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3505:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        },
                        "value": "Invalid nft to burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        }
                      ],
                      "id": 1468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3447:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3447:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1486,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:80:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1488,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3631:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3631:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1497,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "3676:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1493,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1463,
                                      "src": "3661:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$271",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3653:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1491,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3653:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3653:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1490,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13064,
                                "src": "3645:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$13064_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3645:22:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$13064",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12997,
                            "src": "3645:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3631:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3682:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3623:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:99:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:99:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1504,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3813:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "3813:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1506,
                                "name": "starts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "3828:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 1511,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1509,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1463,
                                    "src": "3843:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3835:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1507,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3835:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3835:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3828:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1513,
                            "indexExpression": {
                              "id": 1512,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "3850:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3828:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1514,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1230,
                                "src": "3857:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                                  "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                }
                              },
                              "id": 1519,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1517,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1463,
                                    "src": "3870:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$271",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3862:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1515,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3862:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3862:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3857:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                                "typeString": "struct NFTMinter.nftInfo storage ref"
                              }
                            },
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "duration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1213,
                            "src": "3857:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3828:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3813:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e66742063616e206e6f74206265206275726e6564207965742e",
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3887:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        },
                        "value": "The nft can not be burned yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        }
                      ],
                      "id": 1503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3805:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3805:115:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "3805:115:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3998:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3998:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1531,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "4010:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1536,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1534,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1463,
                                "src": "4023:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4015:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1532,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4015:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4015:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4010:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "4010:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1538,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "4035:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1539,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "4039:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$1216_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1544,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1542,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1463,
                                "src": "4052:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$271",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4044:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4044:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4044:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4039:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$1216_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1211,
                        "src": "4039:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1526,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "3981:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$1192",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1005,
                      "src": "3981:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1551,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "4124:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1548,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "4114:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$271",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 270,
                      "src": "4114:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4114:14:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1553,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:14:5"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 1555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "3333:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "3347:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "3338:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$271",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1461,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 271,
                      "src": "3338:8:5"
                    },
                    "referencedDeclaration": 271,
                    "src": "3338:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$271",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3358:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "3353:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:25:5"
            },
            "returnParameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:5"
            },
            "scope": 1556,
            "src": "3324:812:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1557,
        "src": "381:3758:5",
        "usedErrors": []
      }
    ],
    "src": "0:4139:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.5+commit.a4f2e591.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2022-07-15T04:56:39.142Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}