{
  "contractName": "NFTMinter",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftChef",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "NFT_Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "starts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Mintable",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Mintable",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftChef\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"NFT_Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Mintable\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Mintable\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"starts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTMinter.sol\":\"NFTMinter\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/CryptoGame.sol\":{\"keccak256\":\"0x7ffc143bfe2cca487e3159b5fa92ee2b8aa6f6b3130352009f2c6bf730f8b024\",\"urls\":[\"bzz-raw://cacff5b14ab0af244d4eb9e0400f48309742f4907920edbf70adf3abc86308dc\",\"dweb:/ipfs/QmWNCEgn3VoLBmd3psFpzuPckkGF72GkMdnyViFujsY8AD\"]},\"/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/Interfaces/Mintable.sol\":{\"keccak256\":\"0xcd2f9dae02d4a1deada6ab205b04ba0c5792991ac0a2cf9ccae53dbe8cdc4658\",\"urls\":[\"bzz-raw://bfc26952fa81e93b453a4d8c9ed40ecf70cde88cdde2f1f5bc08422a77d665df\",\"dweb:/ipfs/QmSvkkoDLdQhzYi75trb8kWRyWUZTi3MN1fNnsSyuYh3vS\"]},\"/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTChef.sol\":{\"keccak256\":\"0x08d8e69bdd430bfa3dc5e3a53bc0b3e3be6b2a4cf4fda653f92cb626f816eb2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64c2067ff6350d10b08e972fdb7162a1dc811e2a28abbada3f23910b4f45fde3\",\"dweb:/ipfs/QmUyEg7M5c6oCsSpXT1FXf3Zmrp9GMRayGZj7sCLEHqaXj\"]},\"/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTMinter.sol\":{\"keccak256\":\"0xff4fdc04995e1ac683f6ff250245e44f2fd6774a422a51595dd44aa080155c08\",\"urls\":[\"bzz-raw://89a85548be00cd5d44328fd974335292e91cf05163897f423575fa069aac01f4\",\"dweb:/ipfs/QmVLvkqMmKEnhpdrCL17gAw4XebCmbHFoh9cdJKB2EeMXG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620020be380380620020be833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001ed565b92915050565b6000602082840312156200019b576200019a620001e8565b5b6000620001ab848285016200016b565b91505092915050565b6000620001c182620001c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001f881620001b4565b81146200020457600080fd5b50565b611ea780620002176000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461015a5780638da5cb5b146101645780639dc29fac14610182578063cbcf02701461019e578063f2fde38b146101ba5761009e565b8063018ee9b7146100a3578063599db0f8146100bf57806364482f79146100f25780636a6278421461010e5780636e03cd691461012a575b600080fd5b6100bd60048036038101906100b89190611543565b6101d6565b005b6100d960048036038101906100d4919061142e565b610475565b6040516100e994939291906118bc565b60405180910390f35b61010c6004803603810190610107919061161d565b6104c5565b005b61012860048036038101906101239190611583565b6105d7565b005b610144600480360381019061013f9190611488565b610a1f565b6040516101519190611a01565b60405180910390f35b610162610a44565b005b61016c610acc565b60405161017991906117d3565b60405180910390f35b61019c600480360381019061019791906115b0565b610af5565b005b6101b860048036038101906101b391906114c8565b610f22565b005b6101d460048036038101906101cf919061142e565b6111c2565b005b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f906119e1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102f89190611a01565b60206040518083038186803b15801561031057600080fd5b505afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610348919061145b565b73ffffffffffffffffffffffffffffffffffffffff161461039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590611941565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f758870133600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154846040518463ffffffff1660e01b815260040161043f93929190611840565b600060405180830381600087803b15801561045957600080fd5b505af115801561046d573d6000803e3d6000fd5b505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6104cd6112ba565b73ffffffffffffffffffffffffffffffffffffffff166104eb610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364482f798484846040518463ffffffff1660e01b81526004016105a093929190611a61565b600060405180830381600087803b1580156105ba57600080fd5b505af11580156105ce573d6000803e3d6000fd5b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090611901565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505090508060200151816000015173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016107d19291906117ee565b60206040518083038186803b1580156107e957600080fd5b505afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082191906115f0565b1015610862576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610859906119a1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b815260040161089d91906117d3565b602060405180830381600087803b1580156108b757600080fd5b505af11580156108cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ef91906115f0565b905043600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055507f0c2c69ba7d09e669a763b20242404d12b7588cb5521d7f3814181f0f660226c48382604051610977929190611817565b60405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce88b4393384606001518486602001516040518563ffffffff1660e01b81526004016109e89493929190611877565b600060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b50505050505050565b6001602052816000526040600020602052806000526040600020600091509150505481565b610a4c6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610a6a610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab790611981565b60405180910390fd5b610aca60006112c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe90611961565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610c009190611a01565b60206040518083038186803b158015610c1857600080fd5b505afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c50919061145b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611941565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054610d5b9190611aa9565b4311610d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d93906119c1565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634532d77633600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015484600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b8152600401610e819493929190611877565b600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610eec9190611a01565b600060405180830381600087803b158015610f0657600080fd5b505af1158015610f1a573d6000803e3d6000fd5b505050505050565b610f2a6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610f48610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c71b4b4382878760016040518563ffffffff1660e01b81526004016110009493929190611a1c565b600060405180830381600087803b15801561101a57600080fd5b505af115801561102e573d6000803e3d6000fd5b5050505060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016001600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663081e3eda6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110791906115f0565b6111119190611aff565b815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050505050505050565b6111ca6112ba565b73ffffffffffffffffffffffffffffffffffffffff166111e8610acc565b73ffffffffffffffffffffffffffffffffffffffff161461123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590611981565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a590611921565b60405180910390fd5b6112b7816112c2565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061139581611de7565b92915050565b6000815190506113aa81611de7565b92915050565b6000813590506113bf81611dfe565b92915050565b6000813590506113d481611e15565b92915050565b6000813590506113e981611e2c565b92915050565b6000813590506113fe81611e43565b92915050565b60008135905061141381611e5a565b92915050565b60008151905061142881611e5a565b92915050565b60006020828403121561144457611443611c28565b5b600061145284828501611386565b91505092915050565b60006020828403121561147157611470611c28565b5b600061147f8482850161139b565b91505092915050565b6000806040838503121561149f5761149e611c28565b5b60006114ad85828601611386565b92505060206114be85828601611404565b9150509250929050565b600080600080600060a086880312156114e4576114e3611c28565b5b60006114f2888289016113da565b9550506020611503888289016113c5565b945050604061151488828901611404565b935050606061152588828901611404565b925050608061153688828901611404565b9150509295509295909350565b6000806040838503121561155a57611559611c28565b5b6000611568858286016113da565b925050602061157985828601611404565b9150509250929050565b60006020828403121561159957611598611c28565b5b60006115a7848285016113ef565b91505092915050565b600080604083850312156115c7576115c6611c28565b5b60006115d5858286016113ef565b92505060206115e685828601611404565b9150509250929050565b60006020828403121561160657611605611c28565b5b600061161484828501611419565b91505092915050565b60008060006060848603121561163657611635611c28565b5b600061164486828701611404565b935050602061165586828701611404565b9250506040611666868287016113b0565b9150509250925092565b61167981611b33565b82525050565b61168881611b45565b82525050565b61169781611bb1565b82525050565b6116a681611bd5565b82525050565b60006116b9601383611a98565b91506116c482611c2d565b602082019050919050565b60006116dc602683611a98565b91506116e782611c56565b604082019050919050565b60006116ff602583611a98565b915061170a82611ca5565b604082019050919050565b6000611722601383611a98565b915061172d82611cf4565b602082019050919050565b6000611745602083611a98565b915061175082611d1d565b602082019050919050565b6000611768602483611a98565b915061177382611d46565b604082019050919050565b600061178b601e83611a98565b915061179682611d95565b602082019050919050565b60006117ae601c83611a98565b91506117b982611dbe565b602082019050919050565b6117cd81611ba7565b82525050565b60006020820190506117e86000830184611670565b92915050565b60006040820190506118036000830185611670565b6118106020830184611670565b9392505050565b600060408201905061182c6000830185611670565b61183960208301846117c4565b9392505050565b60006060820190506118556000830186611670565b61186260208301856117c4565b61186f60408301846117c4565b949350505050565b600060808201905061188c6000830187611670565b61189960208301866117c4565b6118a660408301856117c4565b6118b360608301846117c4565b95945050505050565b60006080820190506118d1600083018761168e565b6118de60208301866117c4565b6118eb60408301856117c4565b6118f860608301846117c4565b95945050505050565b6000602082019050818103600083015261191a816116ac565b9050919050565b6000602082019050818103600083015261193a816116cf565b9050919050565b6000602082019050818103600083015261195a816116f2565b9050919050565b6000602082019050818103600083015261197a81611715565b9050919050565b6000602082019050818103600083015261199a81611738565b9050919050565b600060208201905081810360008301526119ba8161175b565b9050919050565b600060208201905081810360008301526119da8161177e565b9050919050565b600060208201905081810360008301526119fa816117a1565b9050919050565b6000602082019050611a1660008301846117c4565b92915050565b6000608082019050611a3160008301876117c4565b611a3e602083018661169d565b611a4b604083018561168e565b611a58606083018461167f565b95945050505050565b6000606082019050611a7660008301866117c4565b611a8360208301856117c4565b611a90604083018461167f565b949350505050565b600082825260208201905092915050565b6000611ab482611ba7565b9150611abf83611ba7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611af457611af3611bf9565b5b828201905092915050565b6000611b0a82611ba7565b9150611b1583611ba7565b925082821015611b2857611b27611bf9565b5b828203905092915050565b6000611b3e82611b87565b9050919050565b60008115159050919050565b6000611b5c82611b33565b9050919050565b6000611b6e82611b33565b9050919050565b6000611b8082611b33565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611bbc82611bc3565b9050919050565b6000611bce82611b87565b9050919050565b6000611be082611be7565b9050919050565b6000611bf282611b87565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e76616c6964206e667420746f206d696e7400000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53656e646572206973206e6f7420746865206f776e6572206f6620746865207460008201527f6f6b656e2e000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c6964206e667420746f206275726e00000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964207374616b6520676976656e20666f7220746865206e66742060008201527f6d696e7400000000000000000000000000000000000000000000000000000000602082015250565b7f546865206e66742063616e206e6f74206265206275726e6564207965742e0000600082015250565b7f43616e206e6f742068617276657374204e465420616464726573732e00000000600082015250565b611df081611b33565b8114611dfb57600080fd5b50565b611e0781611b45565b8114611e1257600080fd5b50565b611e1e81611b51565b8114611e2957600080fd5b50565b611e3581611b63565b8114611e4057600080fd5b50565b611e4c81611b75565b8114611e5757600080fd5b50565b611e6381611ba7565b8114611e6e57600080fd5b5056fea2646970667358221220a90770207af97853c6bc161891117ed5bbe72619fef0fac88cf7167caa16d80364736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461015a5780638da5cb5b146101645780639dc29fac14610182578063cbcf02701461019e578063f2fde38b146101ba5761009e565b8063018ee9b7146100a3578063599db0f8146100bf57806364482f79146100f25780636a6278421461010e5780636e03cd691461012a575b600080fd5b6100bd60048036038101906100b89190611543565b6101d6565b005b6100d960048036038101906100d4919061142e565b610475565b6040516100e994939291906118bc565b60405180910390f35b61010c6004803603810190610107919061161d565b6104c5565b005b61012860048036038101906101239190611583565b6105d7565b005b610144600480360381019061013f9190611488565b610a1f565b6040516101519190611a01565b60405180910390f35b610162610a44565b005b61016c610acc565b60405161017991906117d3565b60405180910390f35b61019c600480360381019061019791906115b0565b610af5565b005b6101b860048036038101906101b391906114c8565b610f22565b005b6101d460048036038101906101cf919061142e565b6111c2565b005b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f906119e1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102f89190611a01565b60206040518083038186803b15801561031057600080fd5b505afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610348919061145b565b73ffffffffffffffffffffffffffffffffffffffff161461039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590611941565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f758870133600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154846040518463ffffffff1660e01b815260040161043f93929190611840565b600060405180830381600087803b15801561045957600080fd5b505af115801561046d573d6000803e3d6000fd5b505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6104cd6112ba565b73ffffffffffffffffffffffffffffffffffffffff166104eb610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364482f798484846040518463ffffffff1660e01b81526004016105a093929190611a61565b600060405180830381600087803b1580156105ba57600080fd5b505af11580156105ce573d6000803e3d6000fd5b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090611901565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505090508060200151816000015173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016107d19291906117ee565b60206040518083038186803b1580156107e957600080fd5b505afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082191906115f0565b1015610862576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610859906119a1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b815260040161089d91906117d3565b602060405180830381600087803b1580156108b757600080fd5b505af11580156108cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ef91906115f0565b905043600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055507f0c2c69ba7d09e669a763b20242404d12b7588cb5521d7f3814181f0f660226c48382604051610977929190611817565b60405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce88b4393384606001518486602001516040518563ffffffff1660e01b81526004016109e89493929190611877565b600060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b50505050505050565b6001602052816000526040600020602052806000526040600020600091509150505481565b610a4c6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610a6a610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab790611981565b60405180910390fd5b610aca60006112c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe90611961565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610c009190611a01565b60206040518083038186803b158015610c1857600080fd5b505afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c50919061145b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611941565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054610d5b9190611aa9565b4311610d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d93906119c1565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634532d77633600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015484600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b8152600401610e819493929190611877565b600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610eec9190611a01565b600060405180830381600087803b158015610f0657600080fd5b505af1158015610f1a573d6000803e3d6000fd5b505050505050565b610f2a6112ba565b73ffffffffffffffffffffffffffffffffffffffff16610f48610acc565b73ffffffffffffffffffffffffffffffffffffffff1614610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590611981565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c71b4b4382878760016040518563ffffffff1660e01b81526004016110009493929190611a1c565b600060405180830381600087803b15801561101a57600080fd5b505af115801561102e573d6000803e3d6000fd5b5050505060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016001600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663081e3eda6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110791906115f0565b6111119190611aff565b815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050505050505050565b6111ca6112ba565b73ffffffffffffffffffffffffffffffffffffffff166111e8610acc565b73ffffffffffffffffffffffffffffffffffffffff161461123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590611981565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a590611921565b60405180910390fd5b6112b7816112c2565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061139581611de7565b92915050565b6000815190506113aa81611de7565b92915050565b6000813590506113bf81611dfe565b92915050565b6000813590506113d481611e15565b92915050565b6000813590506113e981611e2c565b92915050565b6000813590506113fe81611e43565b92915050565b60008135905061141381611e5a565b92915050565b60008151905061142881611e5a565b92915050565b60006020828403121561144457611443611c28565b5b600061145284828501611386565b91505092915050565b60006020828403121561147157611470611c28565b5b600061147f8482850161139b565b91505092915050565b6000806040838503121561149f5761149e611c28565b5b60006114ad85828601611386565b92505060206114be85828601611404565b9150509250929050565b600080600080600060a086880312156114e4576114e3611c28565b5b60006114f2888289016113da565b9550506020611503888289016113c5565b945050604061151488828901611404565b935050606061152588828901611404565b925050608061153688828901611404565b9150509295509295909350565b6000806040838503121561155a57611559611c28565b5b6000611568858286016113da565b925050602061157985828601611404565b9150509250929050565b60006020828403121561159957611598611c28565b5b60006115a7848285016113ef565b91505092915050565b600080604083850312156115c7576115c6611c28565b5b60006115d5858286016113ef565b92505060206115e685828601611404565b9150509250929050565b60006020828403121561160657611605611c28565b5b600061161484828501611419565b91505092915050565b60008060006060848603121561163657611635611c28565b5b600061164486828701611404565b935050602061165586828701611404565b9250506040611666868287016113b0565b9150509250925092565b61167981611b33565b82525050565b61168881611b45565b82525050565b61169781611bb1565b82525050565b6116a681611bd5565b82525050565b60006116b9601383611a98565b91506116c482611c2d565b602082019050919050565b60006116dc602683611a98565b91506116e782611c56565b604082019050919050565b60006116ff602583611a98565b915061170a82611ca5565b604082019050919050565b6000611722601383611a98565b915061172d82611cf4565b602082019050919050565b6000611745602083611a98565b915061175082611d1d565b602082019050919050565b6000611768602483611a98565b915061177382611d46565b604082019050919050565b600061178b601e83611a98565b915061179682611d95565b602082019050919050565b60006117ae601c83611a98565b91506117b982611dbe565b602082019050919050565b6117cd81611ba7565b82525050565b60006020820190506117e86000830184611670565b92915050565b60006040820190506118036000830185611670565b6118106020830184611670565b9392505050565b600060408201905061182c6000830185611670565b61183960208301846117c4565b9392505050565b60006060820190506118556000830186611670565b61186260208301856117c4565b61186f60408301846117c4565b949350505050565b600060808201905061188c6000830187611670565b61189960208301866117c4565b6118a660408301856117c4565b6118b360608301846117c4565b95945050505050565b60006080820190506118d1600083018761168e565b6118de60208301866117c4565b6118eb60408301856117c4565b6118f860608301846117c4565b95945050505050565b6000602082019050818103600083015261191a816116ac565b9050919050565b6000602082019050818103600083015261193a816116cf565b9050919050565b6000602082019050818103600083015261195a816116f2565b9050919050565b6000602082019050818103600083015261197a81611715565b9050919050565b6000602082019050818103600083015261199a81611738565b9050919050565b600060208201905081810360008301526119ba8161175b565b9050919050565b600060208201905081810360008301526119da8161177e565b9050919050565b600060208201905081810360008301526119fa816117a1565b9050919050565b6000602082019050611a1660008301846117c4565b92915050565b6000608082019050611a3160008301876117c4565b611a3e602083018661169d565b611a4b604083018561168e565b611a58606083018461167f565b95945050505050565b6000606082019050611a7660008301866117c4565b611a8360208301856117c4565b611a90604083018461167f565b949350505050565b600082825260208201905092915050565b6000611ab482611ba7565b9150611abf83611ba7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611af457611af3611bf9565b5b828201905092915050565b6000611b0a82611ba7565b9150611b1583611ba7565b925082821015611b2857611b27611bf9565b5b828203905092915050565b6000611b3e82611b87565b9050919050565b60008115159050919050565b6000611b5c82611b33565b9050919050565b6000611b6e82611b33565b9050919050565b6000611b8082611b33565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611bbc82611bc3565b9050919050565b6000611bce82611b87565b9050919050565b6000611be082611be7565b9050919050565b6000611bf282611b87565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e76616c6964206e667420746f206d696e7400000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53656e646572206973206e6f7420746865206f776e6572206f6620746865207460008201527f6f6b656e2e000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c6964206e667420746f206275726e00000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964207374616b6520676976656e20666f7220746865206e66742060008201527f6d696e7400000000000000000000000000000000000000000000000000000000602082015250565b7f546865206e66742063616e206e6f74206265206275726e6564207965742e0000600082015250565b7f43616e206e6f742068617276657374204e465420616464726573732e00000000600082015250565b611df081611b33565b8114611dfb57600080fd5b50565b611e0781611b45565b8114611e1257600080fd5b50565b611e1e81611b51565b8114611e2957600080fd5b50565b611e3581611b63565b8114611e4057600080fd5b50565b611e4c81611b75565b8114611e5757600080fd5b50565b611e6381611ba7565b8114611e6e57600080fd5b5056fea2646970667358221220a90770207af97853c6bc161891117ed5bbe72619fef0fac88cf7167caa16d80364736f6c63430008050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:71",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:71"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:71",
                "type": ""
              }
            ],
            "src": "7:143:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:274:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "281:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "372:128:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "387:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "391:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "416:74:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "462:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "482:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "426:31:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:64:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "416:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:71",
                "type": ""
              }
            ],
            "src": "156:351:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "553:35:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "563:19:71",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "573:9:71"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "563:6:71"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "546:6:71",
                "type": ""
              }
            ],
            "src": "513:75:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:51:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "649:35:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "678:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "660:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:24:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "649:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "621:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "631:7:71",
                "type": ""
              }
            ],
            "src": "594:96:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:81:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "751:65:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:42:71",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:54:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "751:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "723:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "733:7:71",
                "type": ""
              }
            ],
            "src": "696:126:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:28:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:71",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:71",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:12:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "927:12:71"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "828:117:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:28:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1057:1:71",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:1:71",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:12:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:12:71"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "951:117:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:79:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1174:16:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:71",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1186:1:71",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:12:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1176:12:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:71"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1165:5:71"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1147:17:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:24:71"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1137:2:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:35:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:43:71"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:2:71"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:71",
                "type": ""
              }
            ],
            "src": "1074:122:71"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 71,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:21660:71",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:71"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:71",
                "type": ""
              }
            ],
            "src": "7:139:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:80:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:22:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "240:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "234:5:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:13:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "225:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "283:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "256:26:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:33:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:33:71"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "193:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "201:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "209:5:71",
                "type": ""
              }
            ],
            "src": "152:143:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "350:84:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "360:29:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "382:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "369:12:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "360:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "398:23:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "398:30:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "398:30:71"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "328:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "336:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "344:5:71",
                "type": ""
              }
            ],
            "src": "301:133:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:103:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:29:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "540:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "527:12:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "518:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "599:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$10721",
                      "nodeType": "YulIdentifier",
                      "src": "556:42:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:49:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:49:71"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$10721",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "486:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "494:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "502:5:71",
                "type": ""
              }
            ],
            "src": "440:171:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "686:104:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "696:29:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "718:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "705:12:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "696:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "778:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC721_$12797",
                      "nodeType": "YulIdentifier",
                      "src": "734:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:50:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "734:50:71"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC721_$12797",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "664:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "672:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "680:5:71",
                "type": ""
              }
            ],
            "src": "617:173:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "863:102:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "873:29:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "895:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "882:12:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "873:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "953:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Mintable_$46",
                      "nodeType": "YulIdentifier",
                      "src": "911:41:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:48:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "911:48:71"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Mintable_$46",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "841:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "849:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "857:5:71",
                "type": ""
              }
            ],
            "src": "796:169:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1023:87:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1033:29:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1055:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1042:12:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1042:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1033:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1098:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1071:26:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1071:33:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1071:33:71"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1001:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1009:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1017:5:71",
                "type": ""
              }
            ],
            "src": "971:139:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1179:80:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1189:22:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1204:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1198:5:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:13:71"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1189:5:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1247:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1220:26:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:33:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1220:33:71"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1157:6:71",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1165:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1173:5:71",
                "type": ""
              }
            ],
            "src": "1116:143:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1331:263:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1377:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1379:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1352:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1361:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1348:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1348:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1373:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1344:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1344:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "1341:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1470:117:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1485:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1499:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1489:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1514:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1549:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1560:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1545:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1545:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1569:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1524:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1524:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1514:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1301:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1312:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1324:6:71",
                "type": ""
              }
            ],
            "src": "1265:329:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1677:274:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1723:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1725:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1725:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1725:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1698:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1707:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1694:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1694:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1719:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1690:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "1687:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1816:128:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1831:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1845:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1835:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1860:74:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1906:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1917:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1902:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1902:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1926:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1870:31:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:64:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1860:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1647:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1658:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1670:6:71",
                "type": ""
              }
            ],
            "src": "1600:351:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2040:391:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2086:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2088:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2088:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2088:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2061:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2070:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2057:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2057:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2082:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2053:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2053:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "2050:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2179:117:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2194:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2208:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2198:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2223:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2258:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2269:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2254:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2254:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2278:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2233:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2223:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2306:118:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2321:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2335:2:71",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2325:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2351:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2386:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2397:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2382:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2382:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2406:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2361:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2361:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2351:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2002:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2013:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2025:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2033:6:71",
                "type": ""
              }
            ],
            "src": "1957:474:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2604:810:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2651:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2653:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2653:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2653:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2625:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2634:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2621:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2621:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2646:3:71",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2617:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2617:33:71"
                  },
                  "nodeType": "YulIf",
                  "src": "2614:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2744:134:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2759:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2773:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2763:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2788:80:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2840:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2851:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2836:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2836:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2860:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC721_$12797",
                          "nodeType": "YulIdentifier",
                          "src": "2798:37:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2798:70:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2788:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2888:134:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2903:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2917:2:71",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2907:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2933:79:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2984:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2995:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2980:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2980:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3004:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$10721",
                          "nodeType": "YulIdentifier",
                          "src": "2943:36:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2943:69:71"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2933:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3032:118:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3047:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3061:2:71",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3051:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3077:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3112:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3123:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3108:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3108:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3132:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3087:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3087:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3077:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3160:118:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3175:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3189:2:71",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3179:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3205:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3240:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3251:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3236:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3236:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3260:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3215:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3205:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3288:119:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3303:17:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3317:3:71",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3307:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3334:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3369:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3380:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3365:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3365:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3389:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3344:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3344:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3334:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$12797t_contract$_IERC20_$10721t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2542:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2553:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2565:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2573:6:71",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2581:6:71",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2589:6:71",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2597:6:71",
                "type": ""
              }
            ],
            "src": "2437:977:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3520:408:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3566:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3568:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3568:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3568:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3541:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3550:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3537:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3537:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3562:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3533:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3533:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "3530:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3659:134:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3674:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3688:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3678:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3703:80:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3755:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3766:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3751:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3751:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3775:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC721_$12797",
                          "nodeType": "YulIdentifier",
                          "src": "3713:37:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3713:70:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3703:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3803:118:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3818:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3832:2:71",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3822:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3848:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3883:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3894:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3879:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3879:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3903:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3858:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3858:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3848:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$12797t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3482:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3493:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3505:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3513:6:71",
                "type": ""
              }
            ],
            "src": "3420:508:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4015:278:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4061:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4063:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4063:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4063:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4036:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4045:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4032:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4032:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4057:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4028:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4028:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "4025:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4154:132:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4169:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4183:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4173:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4198:78:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4248:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4259:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4244:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4244:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4268:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Mintable_$46",
                          "nodeType": "YulIdentifier",
                          "src": "4208:35:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4208:68:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4198:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Mintable_$46",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3985:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3996:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4008:6:71",
                "type": ""
              }
            ],
            "src": "3934:359:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4397:406:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4443:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4445:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4445:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4445:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4418:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4427:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4414:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4414:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4439:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4410:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4410:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "4407:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4536:132:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4551:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4565:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4555:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4580:78:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4630:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4641:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4626:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4626:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4650:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Mintable_$46",
                          "nodeType": "YulIdentifier",
                          "src": "4590:35:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4590:68:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4580:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4678:118:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4693:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4707:2:71",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4697:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4723:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4758:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4769:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4754:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4754:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4778:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4733:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4733:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4723:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Mintable_$46t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4359:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4370:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4382:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4390:6:71",
                "type": ""
              }
            ],
            "src": "4299:504:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4886:274:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4932:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4934:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4934:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4934:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4907:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4916:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4903:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4903:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4928:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4899:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4899:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "4896:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5025:128:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5040:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5054:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5044:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5069:74:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5115:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5126:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5111:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5111:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5135:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5079:31:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5079:64:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5069:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4856:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4867:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4879:6:71",
                "type": ""
              }
            ],
            "src": "4809:351:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5263:516:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5309:83:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5311:77:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5311:79:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5311:79:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5284:7:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5293:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5280:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5280:23:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5305:2:71",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5276:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:32:71"
                  },
                  "nodeType": "YulIf",
                  "src": "5273:2:71"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5402:117:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5417:15:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5431:1:71",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5421:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5446:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5481:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5492:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5477:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5477:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5501:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5456:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5456:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5446:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5529:118:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5544:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5558:2:71",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5548:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5574:63:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5609:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5620:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5605:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5605:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5629:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5584:20:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5584:53:71"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5574:6:71"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5657:115:71",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5672:16:71",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5686:2:71",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5676:6:71",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5702:60:71",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5734:9:71"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5745:6:71"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5730:3:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5730:22:71"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5754:7:71"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5712:17:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5712:50:71"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5702:6:71"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5217:9:71",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5228:7:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5240:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5248:6:71",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5256:6:71",
                "type": ""
              }
            ],
            "src": "5166:613:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5850:53:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5867:3:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5890:5:71"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5872:17:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5872:24:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5860:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5860:37:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5860:37:71"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5838:5:71",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5845:3:71",
                "type": ""
              }
            ],
            "src": "5785:118:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5968:50:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5985:3:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6005:5:71"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5990:14:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5990:21:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5978:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5978:34:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5978:34:71"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5956:5:71",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5963:3:71",
                "type": ""
              }
            ],
            "src": "5909:109:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6105:82:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6122:3:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6174:5:71"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$10721_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6127:46:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6127:53:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6115:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:66:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6115:66:71"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$10721_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6093:5:71",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6100:3:71",
                "type": ""
              }
            ],
            "src": "6024:163:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6275:83:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6292:3:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6345:5:71"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC721_$12797_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6297:47:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6297:54:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6285:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6285:67:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6285:67:71"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC721_$12797_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6263:5:71",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6270:3:71",
                "type": ""
              }
            ],
            "src": "6193:165:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6510:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6520:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6586:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6591:2:71",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6527:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6527:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6520:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6692:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                      "nodeType": "YulIdentifier",
                      "src": "6603:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6603:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6603:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6705:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6716:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6721:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6712:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6712:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6705:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6498:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6506:3:71",
                "type": ""
              }
            ],
            "src": "6364:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6882:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6892:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6958:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6963:2:71",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6899:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6899:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6892:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7064:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "6975:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6975:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6975:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7077:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7088:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7093:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7084:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7084:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7077:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6870:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6878:3:71",
                "type": ""
              }
            ],
            "src": "6736:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7254:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7264:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7330:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7335:2:71",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7271:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7271:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7264:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7436:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                      "nodeType": "YulIdentifier",
                      "src": "7347:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7347:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7347:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7449:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7460:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7465:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7456:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7456:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7449:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7242:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7250:3:71",
                "type": ""
              }
            ],
            "src": "7108:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7626:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7636:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7702:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7707:2:71",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7643:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7643:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7636:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7808:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                      "nodeType": "YulIdentifier",
                      "src": "7719:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7719:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7719:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7821:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7832:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7837:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7828:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7828:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7821:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7614:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7622:3:71",
                "type": ""
              }
            ],
            "src": "7480:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7998:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8008:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8074:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8079:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8015:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8015:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8008:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8180:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "8091:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8091:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8091:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8193:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8204:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8209:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8200:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8200:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8193:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7986:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7994:3:71",
                "type": ""
              }
            ],
            "src": "7852:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8370:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8380:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8446:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8451:2:71",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8387:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8387:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8380:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8552:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                      "nodeType": "YulIdentifier",
                      "src": "8463:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8463:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8463:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8565:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8576:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8581:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8572:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8572:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8565:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8358:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8366:3:71",
                "type": ""
              }
            ],
            "src": "8224:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8742:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8752:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8818:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8823:2:71",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8759:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8759:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8752:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8924:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                      "nodeType": "YulIdentifier",
                      "src": "8835:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8835:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8835:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8937:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8948:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8953:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8944:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8944:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8937:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8730:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8738:3:71",
                "type": ""
              }
            ],
            "src": "8596:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9114:220:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9124:74:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9190:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9195:2:71",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9131:58:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9131:67:71"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9124:3:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9296:3:71"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                      "nodeType": "YulIdentifier",
                      "src": "9207:88:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9207:93:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9207:93:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9309:19:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9320:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9325:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9316:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9316:12:71"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9309:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9102:3:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9110:3:71",
                "type": ""
              }
            ],
            "src": "8968:366:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9405:53:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9422:3:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9445:5:71"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9427:17:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9427:24:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9415:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9415:37:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9415:37:71"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9393:5:71",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9400:3:71",
                "type": ""
              }
            ],
            "src": "9340:118:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9562:124:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9572:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9584:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9595:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9580:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9580:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9572:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9652:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9665:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9676:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9661:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9661:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9608:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9608:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9608:71:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9534:9:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9546:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9557:4:71",
                "type": ""
              }
            ],
            "src": "9464:222:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9818:206:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9828:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9840:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9851:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9836:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9836:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9828:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9908:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9921:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9932:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9917:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9917:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9864:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9864:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9864:71:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9989:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10002:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10013:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9998:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9998:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9945:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9945:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9945:72:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9782:9:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9794:6:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9802:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9813:4:71",
                "type": ""
              }
            ],
            "src": "9692:332:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10156:206:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10166:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10178:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10189:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10174:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10174:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10166:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10246:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10259:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10270:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10255:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10255:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10202:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10202:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10202:71:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10327:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10340:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10351:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10336:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10336:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10283:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10283:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10283:72:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10120:9:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10132:6:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10140:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10151:4:71",
                "type": ""
              }
            ],
            "src": "10030:332:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10522:288:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10532:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10544:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10555:2:71",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10540:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10540:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10532:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10612:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10625:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10636:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10621:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10621:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10568:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10568:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10568:71:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10693:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10706:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10717:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10702:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10702:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10649:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10649:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10649:72:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10775:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10788:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10799:2:71",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10784:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10784:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10731:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10731:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10731:72:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10478:9:71",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10490:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10498:6:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10506:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10517:4:71",
                "type": ""
              }
            ],
            "src": "10368:442:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10998:371:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11008:27:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11020:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11031:3:71",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11016:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11016:19:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11008:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11089:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11102:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11113:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11098:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11098:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11045:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11045:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11045:71:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11170:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11183:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11194:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11179:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11179:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11126:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11126:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11126:72:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11252:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11265:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11276:2:71",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11261:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11261:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11208:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11208:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11208:72:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11334:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11347:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11358:2:71",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11343:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11343:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11290:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11290:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11290:72:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10946:9:71",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10958:6:71",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10966:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10974:6:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10982:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10993:4:71",
                "type": ""
              }
            ],
            "src": "10816:553:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11573:387:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11583:27:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11595:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11606:3:71",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11591:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11591:19:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11583:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11680:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11693:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11704:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11689:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11689:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$10721_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11620:59:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11620:87:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11620:87:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11761:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11774:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11785:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11770:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11770:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11717:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11717:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11717:72:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11843:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11856:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11867:2:71",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11852:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11852:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11799:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11799:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11799:72:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11925:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11938:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11949:2:71",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11934:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11934:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11881:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11881:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11881:72:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$10721_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11521:9:71",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11533:6:71",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11541:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11549:6:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11557:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11568:4:71",
                "type": ""
              }
            ],
            "src": "11375:585:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12137:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12147:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12159:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12170:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12155:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12155:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12147:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12194:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12205:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12190:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12190:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12213:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12219:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12209:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12209:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12183:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12183:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12183:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12239:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12373:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12247:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12247:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12239:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12117:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12132:4:71",
                "type": ""
              }
            ],
            "src": "11966:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12562:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12572:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12584:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12595:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12580:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12580:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12572:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12619:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12630:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12615:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12615:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12638:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12644:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12634:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12634:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12608:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12608:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12608:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12664:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12798:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12672:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12672:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12664:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12542:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12557:4:71",
                "type": ""
              }
            ],
            "src": "12391:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12987:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12997:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13009:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13020:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13005:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13005:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12997:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13044:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13055:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13040:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13040:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13063:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13069:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13059:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13059:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13033:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13033:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13033:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13089:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13223:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13097:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13097:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13089:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12967:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12982:4:71",
                "type": ""
              }
            ],
            "src": "12816:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13412:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13422:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13434:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13445:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13430:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13430:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13422:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13469:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13480:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13465:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13465:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13488:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13494:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13484:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13484:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13458:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13458:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13458:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13514:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13648:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13522:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13522:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13514:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13392:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13407:4:71",
                "type": ""
              }
            ],
            "src": "13241:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13837:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13847:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13859:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13870:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13855:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13855:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13847:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13894:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13905:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13890:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13890:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13913:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13919:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13909:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13909:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13883:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13883:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13883:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13939:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14073:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13947:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13947:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13939:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13817:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13832:4:71",
                "type": ""
              }
            ],
            "src": "13666:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14262:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14272:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14284:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14295:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14280:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14280:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14272:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14319:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14330:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14315:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14315:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14338:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14344:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14334:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14334:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14308:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14308:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14308:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14364:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14498:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14372:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14372:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14364:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14242:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14257:4:71",
                "type": ""
              }
            ],
            "src": "14091:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14687:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14697:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14709:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14720:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14705:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14705:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14697:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14744:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14755:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14740:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14740:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14763:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14769:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14759:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14759:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14733:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14733:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14733:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14789:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14923:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14797:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14797:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14789:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14667:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14682:4:71",
                "type": ""
              }
            ],
            "src": "14516:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15112:248:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15122:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15134:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15145:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15130:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15130:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15122:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15169:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15180:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15165:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15165:17:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15188:4:71"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15194:9:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15184:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15184:20:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15158:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15158:47:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15158:47:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15214:139:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15348:4:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15222:124:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15222:131:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15214:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15092:9:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15107:4:71",
                "type": ""
              }
            ],
            "src": "14941:419:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15464:124:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15474:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15486:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15497:2:71",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15482:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15482:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15474:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15554:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15567:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15578:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15563:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15563:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15510:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15510:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15510:71:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15436:9:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15448:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15459:4:71",
                "type": ""
              }
            ],
            "src": "15366:222:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15803:398:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15813:27:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15825:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15836:3:71",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15821:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15821:19:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15813:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15894:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15907:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15918:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15903:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15903:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15850:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15850:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15850:71:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15992:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16005:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16016:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16001:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16001:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC721_$12797_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15931:60:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15931:89:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15931:89:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16090:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16103:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16114:2:71",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16099:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16099:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$10721_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16030:59:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16030:88:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16030:88:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "16166:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16179:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16190:2:71",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16175:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16175:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16128:37:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16128:66:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16128:66:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_contract$_IERC721_$12797_t_contract$_IERC20_$10721_t_bool__to_t_uint256_t_address_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15751:9:71",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "15763:6:71",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15771:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15779:6:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15787:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15798:4:71",
                "type": ""
              }
            ],
            "src": "15594:607:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16355:282:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16365:26:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16377:9:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16388:2:71",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16373:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16373:18:71"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16365:4:71"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16445:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16458:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16469:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16454:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16454:17:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16401:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16401:71:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16401:71:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16526:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16539:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16550:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16535:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16535:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16482:43:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16482:72:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16482:72:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16602:6:71"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16615:9:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16626:2:71",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16611:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16611:18:71"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16564:37:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16564:66:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16564:66:71"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16311:9:71",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16323:6:71",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16331:6:71",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16339:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16350:4:71",
                "type": ""
              }
            ],
            "src": "16207:430:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16683:35:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16693:19:71",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16709:2:71",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16703:5:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16703:9:71"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "16693:6:71"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16676:6:71",
                "type": ""
              }
            ],
            "src": "16643:75:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16820:73:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16837:3:71"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16842:6:71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16830:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16830:19:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16830:19:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16858:29:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16877:3:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16882:4:71",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16873:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16873:14:71"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "16858:11:71"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16792:3:71",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16797:6:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "16808:11:71",
                "type": ""
              }
            ],
            "src": "16724:169:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16943:261:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16953:25:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16976:1:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16958:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16958:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16953:1:71"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16987:25:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17010:1:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16992:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16992:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16987:1:71"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17150:22:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17152:16:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17152:18:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17152:18:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17071:1:71"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17078:66:71",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17146:1:71"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17074:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17074:74:71"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17068:2:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17068:81:71"
                  },
                  "nodeType": "YulIf",
                  "src": "17065:2:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17182:16:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17193:1:71"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17196:1:71"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17189:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17189:9:71"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "17182:3:71"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16930:1:71",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16933:1:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "16939:3:71",
                "type": ""
              }
            ],
            "src": "16899:305:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17255:146:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17265:25:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17288:1:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17270:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17270:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17265:1:71"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17299:25:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17322:1:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17304:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17304:20:71"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17299:1:71"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17346:22:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17348:16:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17348:18:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17348:18:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17340:1:71"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17343:1:71"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17337:2:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17337:8:71"
                  },
                  "nodeType": "YulIf",
                  "src": "17334:2:71"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17378:17:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17390:1:71"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17393:1:71"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17386:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17386:9:71"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17378:4:71"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17241:1:71",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17244:1:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17250:4:71",
                "type": ""
              }
            ],
            "src": "17210:191:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17452:51:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17462:35:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17491:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "17473:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17473:24:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17462:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17434:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17444:7:71",
                "type": ""
              }
            ],
            "src": "17407:96:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17551:48:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17561:32:71",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17586:5:71"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17579:6:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17579:13:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17572:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17572:21:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17561:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17533:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17543:7:71",
                "type": ""
              }
            ],
            "src": "17509:90:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17666:51:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17676:35:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17705:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "17687:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17687:24:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17676:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$10721",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17648:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17658:7:71",
                "type": ""
              }
            ],
            "src": "17605:112:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17785:51:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17795:35:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17824:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "17806:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17806:24:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17795:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC721_$12797",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17767:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17777:7:71",
                "type": ""
              }
            ],
            "src": "17723:113:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17902:51:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17912:35:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17941:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "17923:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17923:24:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17912:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Mintable_$46",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17884:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17894:7:71",
                "type": ""
              }
            ],
            "src": "17842:111:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18004:81:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18014:65:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18029:5:71"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18036:42:71",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18025:3:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18025:54:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "18014:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17986:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17996:7:71",
                "type": ""
              }
            ],
            "src": "17959:126:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18136:32:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18146:16:71",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "18157:5:71"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "18146:7:71"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18118:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "18128:7:71",
                "type": ""
              }
            ],
            "src": "18091:77:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18250:82:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18260:66:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18320:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$10721_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18273:46:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18273:53:71"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18260:9:71"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$10721_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18230:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18240:9:71",
                "type": ""
              }
            ],
            "src": "18174:158:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18414:53:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18424:37:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18455:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18437:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18437:24:71"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18424:9:71"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$10721_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18394:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18404:9:71",
                "type": ""
              }
            ],
            "src": "18338:129:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18550:83:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18560:67:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18621:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC721_$12797_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18573:47:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18573:54:71"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18560:9:71"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC721_$12797_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18530:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18540:9:71",
                "type": ""
              }
            ],
            "src": "18473:160:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18716:53:71",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18726:37:71",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18757:5:71"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "18739:17:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18739:24:71"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18726:9:71"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC721_$12797_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18696:5:71",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18706:9:71",
                "type": ""
              }
            ],
            "src": "18639:130:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18803:152:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18820:1:71",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18823:77:71",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18813:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18813:88:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18813:88:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18917:1:71",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18920:4:71",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18910:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18910:15:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18910:15:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18941:1:71",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18944:4:71",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18934:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18934:15:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18934:15:71"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18775:180:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19050:28:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19067:1:71",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19070:1:71",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19060:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19060:12:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19060:12:71"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "18961:117:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19173:28:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19190:1:71",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19193:1:71",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19183:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19183:12:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19183:12:71"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "19084:117:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19313:63:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19335:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19343:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19331:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19331:14:71"
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206d696e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19347:21:71",
                        "type": "",
                        "value": "Invalid nft to mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19324:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19324:45:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19324:45:71"
                }
              ]
            },
            "name": "store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19305:6:71",
                "type": ""
              }
            ],
            "src": "19207:169:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19488:119:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19510:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19518:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19506:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19506:14:71"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19522:34:71",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19499:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19499:58:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19499:58:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19578:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19586:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19574:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19574:15:71"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19591:8:71",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19567:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19567:33:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19567:33:71"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19480:6:71",
                "type": ""
              }
            ],
            "src": "19382:225:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19719:118:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19741:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19749:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19737:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19737:14:71"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f66207468652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19753:34:71",
                        "type": "",
                        "value": "Sender is not the owner of the t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19730:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19730:58:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19730:58:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19809:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19817:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19805:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19805:15:71"
                      },
                      {
                        "hexValue": "6f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19822:7:71",
                        "type": "",
                        "value": "oken."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19798:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19798:32:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19798:32:71"
                }
              ]
            },
            "name": "store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19711:6:71",
                "type": ""
              }
            ],
            "src": "19613:224:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19949:63:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19971:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19979:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19967:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19967:14:71"
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206275726e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19983:21:71",
                        "type": "",
                        "value": "Invalid nft to burn"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19960:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19960:45:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19960:45:71"
                }
              ]
            },
            "name": "store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19941:6:71",
                "type": ""
              }
            ],
            "src": "19843:169:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20124:76:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20146:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20154:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20142:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20142:14:71"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20158:34:71",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20135:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20135:58:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20135:58:71"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20116:6:71",
                "type": ""
              }
            ],
            "src": "20018:182:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20312:117:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20334:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20342:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20330:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20330:14:71"
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520676976656e20666f7220746865206e667420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20346:34:71",
                        "type": "",
                        "value": "Invalid stake given for the nft "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20323:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20323:58:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20323:58:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20402:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20410:2:71",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20398:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20398:15:71"
                      },
                      {
                        "hexValue": "6d696e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20415:6:71",
                        "type": "",
                        "value": "mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20391:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20391:31:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20391:31:71"
                }
              ]
            },
            "name": "store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20304:6:71",
                "type": ""
              }
            ],
            "src": "20206:223:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20541:74:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20563:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20571:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20559:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20559:14:71"
                      },
                      {
                        "hexValue": "546865206e66742063616e206e6f74206265206275726e6564207965742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20575:32:71",
                        "type": "",
                        "value": "The nft can not be burned yet."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20552:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20552:56:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20552:56:71"
                }
              ]
            },
            "name": "store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20533:6:71",
                "type": ""
              }
            ],
            "src": "20435:180:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20727:72:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20749:6:71"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20757:1:71",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20745:3:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20745:14:71"
                      },
                      {
                        "hexValue": "43616e206e6f742068617276657374204e465420616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20761:30:71",
                        "type": "",
                        "value": "Can not harvest NFT address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20738:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20738:54:71"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20738:54:71"
                }
              ]
            },
            "name": "store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20719:6:71",
                "type": ""
              }
            ],
            "src": "20621:178:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20848:79:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20905:16:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20914:1:71",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20917:1:71",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20907:6:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20907:12:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20907:12:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20871:5:71"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20896:5:71"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "20878:17:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20878:24:71"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "20868:2:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20868:35:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20861:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20861:43:71"
                  },
                  "nodeType": "YulIf",
                  "src": "20858:2:71"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20841:5:71",
                "type": ""
              }
            ],
            "src": "20805:122:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20973:76:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21027:16:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21036:1:71",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21039:1:71",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21029:6:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21029:12:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21029:12:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20996:5:71"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21018:5:71"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "21003:14:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21003:21:71"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "20993:2:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20993:32:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20986:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20986:40:71"
                  },
                  "nodeType": "YulIf",
                  "src": "20983:2:71"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20966:5:71",
                "type": ""
              }
            ],
            "src": "20933:116:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21114:95:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21187:16:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21196:1:71",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21199:1:71",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21189:6:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21189:12:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21189:12:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21137:5:71"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21178:5:71"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$10721",
                              "nodeType": "YulIdentifier",
                              "src": "21144:33:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21144:40:71"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21134:2:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21134:51:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21127:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21127:59:71"
                  },
                  "nodeType": "YulIf",
                  "src": "21124:2:71"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$10721",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21107:5:71",
                "type": ""
              }
            ],
            "src": "21055:154:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21275:96:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21349:16:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21358:1:71",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21361:1:71",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21351:6:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21351:12:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21351:12:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21298:5:71"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21340:5:71"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC721_$12797",
                              "nodeType": "YulIdentifier",
                              "src": "21305:34:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21305:41:71"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21295:2:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21295:52:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21288:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21288:60:71"
                  },
                  "nodeType": "YulIf",
                  "src": "21285:2:71"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC721_$12797",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21268:5:71",
                "type": ""
              }
            ],
            "src": "21215:156:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21435:94:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21507:16:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21516:1:71",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21519:1:71",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21509:6:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21509:12:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21509:12:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21458:5:71"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21498:5:71"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Mintable_$46",
                              "nodeType": "YulIdentifier",
                              "src": "21465:32:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21465:39:71"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21455:2:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21455:50:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21448:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21448:58:71"
                  },
                  "nodeType": "YulIf",
                  "src": "21445:2:71"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Mintable_$46",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21428:5:71",
                "type": ""
              }
            ],
            "src": "21377:152:71"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21578:79:71",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21635:16:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21644:1:71",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21647:1:71",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21637:6:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21637:12:71"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21637:12:71"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21601:5:71"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21626:5:71"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "21608:17:71"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21608:24:71"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "21598:2:71"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21598:35:71"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21591:6:71"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21591:43:71"
                  },
                  "nodeType": "YulIf",
                  "src": "21588:2:71"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21571:5:71",
                "type": ""
              }
            ],
            "src": "21535:122:71"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$10721(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$10721(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$12797(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$12797(value)\n    }\n\n    function abi_decode_t_contract$_Mintable_$46(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Mintable_$46(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$12797t_contract$_IERC20_$10721t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$12797(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$10721(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$12797t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$12797(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Mintable_$46(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Mintable_$46(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Mintable_$46t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Mintable_$46(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$10721_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$10721_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$12797_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$12797_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$10721_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$10721_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC721_$12797_t_contract$_IERC20_$10721_t_bool__to_t_uint256_t_address_t_address_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC721_$12797_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IERC20_$10721_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$10721(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$12797(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Mintable_$46(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$10721_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$10721_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$10721_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$12797_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC721_$12797_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$12797_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid nft to mint\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is not the owner of the t\")\n\n        mstore(add(memPtr, 32), \"oken.\")\n\n    }\n\n    function store_literal_in_memory_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid nft to burn\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake given for the nft \")\n\n        mstore(add(memPtr, 32), \"mint\")\n\n    }\n\n    function store_literal_in_memory_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666(memPtr) {\n\n        mstore(add(memPtr, 0), \"The nft can not be burned yet.\")\n\n    }\n\n    function store_literal_in_memory_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can not harvest NFT address.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$10721(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$10721(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$12797(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$12797(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Mintable_$46(value) {\n        if iszero(eq(value, cleanup_t_contract$_Mintable_$46(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 71,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "381:3758:4:-:0;;;1034:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:27;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1092:8:4;1074:7;;:27;;;;;;;;;;;;;;;;;;1034:75;381:3758;;640:96:55;693:7;719:10;712:17;;640:96;:::o;2270:187:27:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:143:71:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;639:51;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;741:81;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:2;;1186:1;1183;1176:12;1127:2;1117:79;:::o;381:3758:4:-;;;;;;;",
  "deployedSourceMap": "381:3758:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;874:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1512:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1794:859;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;716:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:27;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3324:812:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1190:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2742:525:4;2924:1;2878:48;;2886:4;:19;2899:4;2886:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2878:48;;;;2870:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3079:10;3058:31;;:4;:12;;;3071:3;3058:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;;3050:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3202:7;;;;;;;;;;;:15;;;3218:10;3230:4;:19;3243:4;3230:19;;;;;;;;;;;;;;;:23;;;3255:3;3202:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:525;;:::o;874:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1512:150::-;1259:12:27;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1611:7:4::1;;;;;;;;;;;:11;;;1623:4;1629:11;1642;1611:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1512:150:::0;;;:::o;1794:859::-;1961:1;1915:48;;1923:4;:19;1936:4;1923:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1915:48;;;;1907:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2058:19;2080:4;:19;2093:4;2080:19;;;;;;;;;;;;;;;2058:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2260:4;:10;;;2206:4;:10;;;:20;;;2227:10;2247:7;;;;;;;;;;;2206:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;2198:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;2372:7;2382:4;:9;;;2392:10;2382:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2372:31;;2444:12;2416:6;:21;2431:4;2416:21;;;;;;;;;;;;;;;:25;2438:2;2416:25;;;;;;;;;;;:40;;;;2503:27;2520:4;2527:2;2503:27;;;;;;;:::i;:::-;;;;;;;;2582:7;;;;;;;;;;;:15;;;2598:10;2610:4;:8;;;2620:2;2624:4;:10;;;2582:53;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1829:824;;1794:859;:::o;716:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1668:101:27:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;3324:812:4:-;3501:1;3455:48;;3463:4;:19;3476:4;3463:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;3455:48;;;;3447:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3661:4;3645:30;;;3676:3;3645:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3631:49;;:10;:49;;;3623:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;3857:4;:19;3870:4;3857:19;;;;;;;;;;;;;;;:28;;;3828:6;:21;3843:4;3828:21;;;;;;;;;;;;;;;:26;3850:3;3828:26;;;;;;;;;;;;:57;;;;:::i;:::-;3813:12;:72;3805:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;3981:7;;;;;;;;;;;:16;;;3998:10;4010:4;:19;4023:4;4010:19;;;;;;;;;;;;;;;:23;;;4035:3;4039:4;:19;4052:4;4039:19;;;;;;;;;;;;;;;:25;;;3981:84;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4114:4;:9;;;4124:3;4114:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3324:812;;:::o;1190:263::-;1259:12:27;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1306:7:4::1;;;;;;;;;;;:11;;;1318;1331:4;1337:6;1345:4;1306:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1385:60;;;;;;;;1393:6;1385:60;;;;;;1401:6;1385:60;;;;1409:9;1385:60;;;;1443:1;1420:7;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;;;:::i;:::-;1385:60;;::::0;1363:4:::1;:19;1376:4;1363:19;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:263:::0;;;;;:::o;1918:198:27:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:55:-;693:7;719:10;712:17;;640:96;:::o;2270:187:27:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:71:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:133::-;344:5;382:6;369:20;360:29;;398:30;422:5;398:30;:::i;:::-;350:84;;;;:::o;440:171::-;502:5;540:6;527:20;518:29;;556:49;599:5;556:49;:::i;:::-;508:103;;;;:::o;617:173::-;680:5;718:6;705:20;696:29;;734:50;778:5;734:50;:::i;:::-;686:104;;;;:::o;796:169::-;857:5;895:6;882:20;873:29;;911:48;953:5;911:48;:::i;:::-;863:102;;;;:::o;971:139::-;1017:5;1055:6;1042:20;1033:29;;1071:33;1098:5;1071:33;:::i;:::-;1023:87;;;;:::o;1116:143::-;1173:5;1204:6;1198:13;1189:22;;1220:33;1247:5;1220:33;:::i;:::-;1179:80;;;;:::o;1265:329::-;1324:6;1373:2;1361:9;1352:7;1348:23;1344:32;1341:2;;;1379:79;;:::i;:::-;1341:2;1499:1;1524:53;1569:7;1560:6;1549:9;1545:22;1524:53;:::i;:::-;1514:63;;1470:117;1331:263;;;;:::o;1600:351::-;1670:6;1719:2;1707:9;1698:7;1694:23;1690:32;1687:2;;;1725:79;;:::i;:::-;1687:2;1845:1;1870:64;1926:7;1917:6;1906:9;1902:22;1870:64;:::i;:::-;1860:74;;1816:128;1677:274;;;;:::o;1957:474::-;2025:6;2033;2082:2;2070:9;2061:7;2057:23;2053:32;2050:2;;;2088:79;;:::i;:::-;2050:2;2208:1;2233:53;2278:7;2269:6;2258:9;2254:22;2233:53;:::i;:::-;2223:63;;2179:117;2335:2;2361:53;2406:7;2397:6;2386:9;2382:22;2361:53;:::i;:::-;2351:63;;2306:118;2040:391;;;;;:::o;2437:977::-;2565:6;2573;2581;2589;2597;2646:3;2634:9;2625:7;2621:23;2617:33;2614:2;;;2653:79;;:::i;:::-;2614:2;2773:1;2798:70;2860:7;2851:6;2840:9;2836:22;2798:70;:::i;:::-;2788:80;;2744:134;2917:2;2943:69;3004:7;2995:6;2984:9;2980:22;2943:69;:::i;:::-;2933:79;;2888:134;3061:2;3087:53;3132:7;3123:6;3112:9;3108:22;3087:53;:::i;:::-;3077:63;;3032:118;3189:2;3215:53;3260:7;3251:6;3240:9;3236:22;3215:53;:::i;:::-;3205:63;;3160:118;3317:3;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3288:119;2604:810;;;;;;;;:::o;3420:508::-;3505:6;3513;3562:2;3550:9;3541:7;3537:23;3533:32;3530:2;;;3568:79;;:::i;:::-;3530:2;3688:1;3713:70;3775:7;3766:6;3755:9;3751:22;3713:70;:::i;:::-;3703:80;;3659:134;3832:2;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3803:118;3520:408;;;;;:::o;3934:359::-;4008:6;4057:2;4045:9;4036:7;4032:23;4028:32;4025:2;;;4063:79;;:::i;:::-;4025:2;4183:1;4208:68;4268:7;4259:6;4248:9;4244:22;4208:68;:::i;:::-;4198:78;;4154:132;4015:278;;;;:::o;4299:504::-;4382:6;4390;4439:2;4427:9;4418:7;4414:23;4410:32;4407:2;;;4445:79;;:::i;:::-;4407:2;4565:1;4590:68;4650:7;4641:6;4630:9;4626:22;4590:68;:::i;:::-;4580:78;;4536:132;4707:2;4733:53;4778:7;4769:6;4758:9;4754:22;4733:53;:::i;:::-;4723:63;;4678:118;4397:406;;;;;:::o;4809:351::-;4879:6;4928:2;4916:9;4907:7;4903:23;4899:32;4896:2;;;4934:79;;:::i;:::-;4896:2;5054:1;5079:64;5135:7;5126:6;5115:9;5111:22;5079:64;:::i;:::-;5069:74;;5025:128;4886:274;;;;:::o;5166:613::-;5240:6;5248;5256;5305:2;5293:9;5284:7;5280:23;5276:32;5273:2;;;5311:79;;:::i;:::-;5273:2;5431:1;5456:53;5501:7;5492:6;5481:9;5477:22;5456:53;:::i;:::-;5446:63;;5402:117;5558:2;5584:53;5629:7;5620:6;5609:9;5605:22;5584:53;:::i;:::-;5574:63;;5529:118;5686:2;5712:50;5754:7;5745:6;5734:9;5730:22;5712:50;:::i;:::-;5702:60;;5657:115;5263:516;;;;;:::o;5785:118::-;5872:24;5890:5;5872:24;:::i;:::-;5867:3;5860:37;5850:53;;:::o;5909:109::-;5990:21;6005:5;5990:21;:::i;:::-;5985:3;5978:34;5968:50;;:::o;6024:163::-;6127:53;6174:5;6127:53;:::i;:::-;6122:3;6115:66;6105:82;;:::o;6193:165::-;6297:54;6345:5;6297:54;:::i;:::-;6292:3;6285:67;6275:83;;:::o;6364:366::-;6506:3;6527:67;6591:2;6586:3;6527:67;:::i;:::-;6520:74;;6603:93;6692:3;6603:93;:::i;:::-;6721:2;6716:3;6712:12;6705:19;;6510:220;;;:::o;6736:366::-;6878:3;6899:67;6963:2;6958:3;6899:67;:::i;:::-;6892:74;;6975:93;7064:3;6975:93;:::i;:::-;7093:2;7088:3;7084:12;7077:19;;6882:220;;;:::o;7108:366::-;7250:3;7271:67;7335:2;7330:3;7271:67;:::i;:::-;7264:74;;7347:93;7436:3;7347:93;:::i;:::-;7465:2;7460:3;7456:12;7449:19;;7254:220;;;:::o;7480:366::-;7622:3;7643:67;7707:2;7702:3;7643:67;:::i;:::-;7636:74;;7719:93;7808:3;7719:93;:::i;:::-;7837:2;7832:3;7828:12;7821:19;;7626:220;;;:::o;7852:366::-;7994:3;8015:67;8079:2;8074:3;8015:67;:::i;:::-;8008:74;;8091:93;8180:3;8091:93;:::i;:::-;8209:2;8204:3;8200:12;8193:19;;7998:220;;;:::o;8224:366::-;8366:3;8387:67;8451:2;8446:3;8387:67;:::i;:::-;8380:74;;8463:93;8552:3;8463:93;:::i;:::-;8581:2;8576:3;8572:12;8565:19;;8370:220;;;:::o;8596:366::-;8738:3;8759:67;8823:2;8818:3;8759:67;:::i;:::-;8752:74;;8835:93;8924:3;8835:93;:::i;:::-;8953:2;8948:3;8944:12;8937:19;;8742:220;;;:::o;8968:366::-;9110:3;9131:67;9195:2;9190:3;9131:67;:::i;:::-;9124:74;;9207:93;9296:3;9207:93;:::i;:::-;9325:2;9320:3;9316:12;9309:19;;9114:220;;;:::o;9340:118::-;9427:24;9445:5;9427:24;:::i;:::-;9422:3;9415:37;9405:53;;:::o;9464:222::-;9557:4;9595:2;9584:9;9580:18;9572:26;;9608:71;9676:1;9665:9;9661:17;9652:6;9608:71;:::i;:::-;9562:124;;;;:::o;9692:332::-;9813:4;9851:2;9840:9;9836:18;9828:26;;9864:71;9932:1;9921:9;9917:17;9908:6;9864:71;:::i;:::-;9945:72;10013:2;10002:9;9998:18;9989:6;9945:72;:::i;:::-;9818:206;;;;;:::o;10030:332::-;10151:4;10189:2;10178:9;10174:18;10166:26;;10202:71;10270:1;10259:9;10255:17;10246:6;10202:71;:::i;:::-;10283:72;10351:2;10340:9;10336:18;10327:6;10283:72;:::i;:::-;10156:206;;;;;:::o;10368:442::-;10517:4;10555:2;10544:9;10540:18;10532:26;;10568:71;10636:1;10625:9;10621:17;10612:6;10568:71;:::i;:::-;10649:72;10717:2;10706:9;10702:18;10693:6;10649:72;:::i;:::-;10731;10799:2;10788:9;10784:18;10775:6;10731:72;:::i;:::-;10522:288;;;;;;:::o;10816:553::-;10993:4;11031:3;11020:9;11016:19;11008:27;;11045:71;11113:1;11102:9;11098:17;11089:6;11045:71;:::i;:::-;11126:72;11194:2;11183:9;11179:18;11170:6;11126:72;:::i;:::-;11208;11276:2;11265:9;11261:18;11252:6;11208:72;:::i;:::-;11290;11358:2;11347:9;11343:18;11334:6;11290:72;:::i;:::-;10998:371;;;;;;;:::o;11375:585::-;11568:4;11606:3;11595:9;11591:19;11583:27;;11620:87;11704:1;11693:9;11689:17;11680:6;11620:87;:::i;:::-;11717:72;11785:2;11774:9;11770:18;11761:6;11717:72;:::i;:::-;11799;11867:2;11856:9;11852:18;11843:6;11799:72;:::i;:::-;11881;11949:2;11938:9;11934:18;11925:6;11881:72;:::i;:::-;11573:387;;;;;;;:::o;11966:419::-;12132:4;12170:2;12159:9;12155:18;12147:26;;12219:9;12213:4;12209:20;12205:1;12194:9;12190:17;12183:47;12247:131;12373:4;12247:131;:::i;:::-;12239:139;;12137:248;;;:::o;12391:419::-;12557:4;12595:2;12584:9;12580:18;12572:26;;12644:9;12638:4;12634:20;12630:1;12619:9;12615:17;12608:47;12672:131;12798:4;12672:131;:::i;:::-;12664:139;;12562:248;;;:::o;12816:419::-;12982:4;13020:2;13009:9;13005:18;12997:26;;13069:9;13063:4;13059:20;13055:1;13044:9;13040:17;13033:47;13097:131;13223:4;13097:131;:::i;:::-;13089:139;;12987:248;;;:::o;13241:419::-;13407:4;13445:2;13434:9;13430:18;13422:26;;13494:9;13488:4;13484:20;13480:1;13469:9;13465:17;13458:47;13522:131;13648:4;13522:131;:::i;:::-;13514:139;;13412:248;;;:::o;13666:419::-;13832:4;13870:2;13859:9;13855:18;13847:26;;13919:9;13913:4;13909:20;13905:1;13894:9;13890:17;13883:47;13947:131;14073:4;13947:131;:::i;:::-;13939:139;;13837:248;;;:::o;14091:419::-;14257:4;14295:2;14284:9;14280:18;14272:26;;14344:9;14338:4;14334:20;14330:1;14319:9;14315:17;14308:47;14372:131;14498:4;14372:131;:::i;:::-;14364:139;;14262:248;;;:::o;14516:419::-;14682:4;14720:2;14709:9;14705:18;14697:26;;14769:9;14763:4;14759:20;14755:1;14744:9;14740:17;14733:47;14797:131;14923:4;14797:131;:::i;:::-;14789:139;;14687:248;;;:::o;14941:419::-;15107:4;15145:2;15134:9;15130:18;15122:26;;15194:9;15188:4;15184:20;15180:1;15169:9;15165:17;15158:47;15222:131;15348:4;15222:131;:::i;:::-;15214:139;;15112:248;;;:::o;15366:222::-;15459:4;15497:2;15486:9;15482:18;15474:26;;15510:71;15578:1;15567:9;15563:17;15554:6;15510:71;:::i;:::-;15464:124;;;;:::o;15594:607::-;15798:4;15836:3;15825:9;15821:19;15813:27;;15850:71;15918:1;15907:9;15903:17;15894:6;15850:71;:::i;:::-;15931:89;16016:2;16005:9;16001:18;15992:6;15931:89;:::i;:::-;16030:88;16114:2;16103:9;16099:18;16090:6;16030:88;:::i;:::-;16128:66;16190:2;16179:9;16175:18;16166:6;16128:66;:::i;:::-;15803:398;;;;;;;:::o;16207:430::-;16350:4;16388:2;16377:9;16373:18;16365:26;;16401:71;16469:1;16458:9;16454:17;16445:6;16401:71;:::i;:::-;16482:72;16550:2;16539:9;16535:18;16526:6;16482:72;:::i;:::-;16564:66;16626:2;16615:9;16611:18;16602:6;16564:66;:::i;:::-;16355:282;;;;;;:::o;16724:169::-;16808:11;16842:6;16837:3;16830:19;16882:4;16877:3;16873:14;16858:29;;16820:73;;;;:::o;16899:305::-;16939:3;16958:20;16976:1;16958:20;:::i;:::-;16953:25;;16992:20;17010:1;16992:20;:::i;:::-;16987:25;;17146:1;17078:66;17074:74;17071:1;17068:81;17065:2;;;17152:18;;:::i;:::-;17065:2;17196:1;17193;17189:9;17182:16;;16943:261;;;;:::o;17210:191::-;17250:4;17270:20;17288:1;17270:20;:::i;:::-;17265:25;;17304:20;17322:1;17304:20;:::i;:::-;17299:25;;17343:1;17340;17337:8;17334:2;;;17348:18;;:::i;:::-;17334:2;17393:1;17390;17386:9;17378:17;;17255:146;;;;:::o;17407:96::-;17444:7;17473:24;17491:5;17473:24;:::i;:::-;17462:35;;17452:51;;;:::o;17509:90::-;17543:7;17586:5;17579:13;17572:21;17561:32;;17551:48;;;:::o;17605:112::-;17658:7;17687:24;17705:5;17687:24;:::i;:::-;17676:35;;17666:51;;;:::o;17723:113::-;17777:7;17806:24;17824:5;17806:24;:::i;:::-;17795:35;;17785:51;;;:::o;17842:111::-;17894:7;17923:24;17941:5;17923:24;:::i;:::-;17912:35;;17902:51;;;:::o;17959:126::-;17996:7;18036:42;18029:5;18025:54;18014:65;;18004:81;;;:::o;18091:77::-;18128:7;18157:5;18146:16;;18136:32;;;:::o;18174:158::-;18240:9;18273:53;18320:5;18273:53;:::i;:::-;18260:66;;18250:82;;;:::o;18338:129::-;18404:9;18437:24;18455:5;18437:24;:::i;:::-;18424:37;;18414:53;;;:::o;18473:160::-;18540:9;18573:54;18621:5;18573:54;:::i;:::-;18560:67;;18550:83;;;:::o;18639:130::-;18706:9;18739:24;18757:5;18739:24;:::i;:::-;18726:37;;18716:53;;;:::o;18775:180::-;18823:77;18820:1;18813:88;18920:4;18917:1;18910:15;18944:4;18941:1;18934:15;19084:117;19193:1;19190;19183:12;19207:169;19347:21;19343:1;19335:6;19331:14;19324:45;19313:63;:::o;19382:225::-;19522:34;19518:1;19510:6;19506:14;19499:58;19591:8;19586:2;19578:6;19574:15;19567:33;19488:119;:::o;19613:224::-;19753:34;19749:1;19741:6;19737:14;19730:58;19822:7;19817:2;19809:6;19805:15;19798:32;19719:118;:::o;19843:169::-;19983:21;19979:1;19971:6;19967:14;19960:45;19949:63;:::o;20018:182::-;20158:34;20154:1;20146:6;20142:14;20135:58;20124:76;:::o;20206:223::-;20346:34;20342:1;20334:6;20330:14;20323:58;20415:6;20410:2;20402:6;20398:15;20391:31;20312:117;:::o;20435:180::-;20575:32;20571:1;20563:6;20559:14;20552:56;20541:74;:::o;20621:178::-;20761:30;20757:1;20749:6;20745:14;20738:54;20727:72;:::o;20805:122::-;20878:24;20896:5;20878:24;:::i;:::-;20871:5;20868:35;20858:2;;20917:1;20914;20907:12;20858:2;20848:79;:::o;20933:116::-;21003:21;21018:5;21003:21;:::i;:::-;20996:5;20993:32;20983:2;;21039:1;21036;21029:12;20983:2;20973:76;:::o;21055:154::-;21144:40;21178:5;21144:40;:::i;:::-;21137:5;21134:51;21124:2;;21199:1;21196;21189:12;21124:2;21114:95;:::o;21215:156::-;21305:41;21340:5;21305:41;:::i;:::-;21298:5;21295:52;21285:2;;21361:1;21358;21351:12;21285:2;21275:96;:::o;21377:152::-;21465:39;21498:5;21465:39;:::i;:::-;21458:5;21455:50;21445:2;;21519:1;21516;21509:12;21445:2;21435:94;:::o;21535:122::-;21608:24;21626:5;21608:24;:::i;:::-;21601:5;21598:35;21588:2;;21647:1;21644;21637:12;21588:2;21578:79;:::o",
  "source": "pragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\nimport \"./Interfaces/Mintable.sol\";\r\n\r\nimport \"./NFTChef.sol\";\r\n\r\n// Creates NFT stakes for participants \r\ncontract NFTMinter is Ownable{\r\n    using SafeERC20 for IERC20;\r\n\r\n    // struct to hold information about nfts which receive rewards from NFTChef\r\n    struct nftInfo{\r\n        IERC20 token;\r\n        uint stake;\r\n        uint duration;\r\n        uint pid;\r\n    }\r\n\r\n    // mapping holding the starting stake block of nfts tokenIds\r\n    mapping(address => mapping(uint => uint)) public starts;\r\n\r\n    // Contract of the NFTChef.\r\n    NFTChef nftChef;\r\n\r\n    // mapping of the nfts nftInfo.\r\n    mapping(address => nftInfo) public nfts;\r\n\r\n    // event emitted when an nft is minted \r\n    event NFT_Mint(address _nft, uint _id);\r\n\r\n    // Constructor\r\n    constructor(address _nftChef){\r\n        nftChef = NFTChef(_nftChef);\r\n    }\r\n\r\n    // Function to add the nft type to the NFTMinter/NFTChef contracts.\r\n    function add(IERC721 _nft, IERC20 _token, uint _stake, uint _duration, uint _allocPoint) public onlyOwner{\r\n        nftChef.add(_allocPoint, _nft, _token, true);\r\n\r\n        nfts[address(_nft)] = nftInfo(_token, _stake, _duration, nftChef.poolLength() - 1);\r\n    }\r\n\r\n    //Fuunction to set nft allocPoints in nftChef\r\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner\r\n    {\r\n        nftChef.set(_pid, _allocPoint, _withUpdate);\r\n    }\r\n\r\n    //Function to insert nft into NFTChef,\r\n\r\n    //Funtion to remove nft from NFTChef,\r\n\r\n    // Function to mint an _nft\r\n    function mint(Mintable _nft) public{\r\n        // Condition to determine if the nft to be minted exists.\r\n        require(address(nfts[address(_nft)].token) != address(0), \"Invalid nft to mint\");\r\n\r\n        // Get the info about the given nft for minting.\r\n        nftInfo memory info = nfts[address(_nft)];\r\n\r\n        // Condition to determine if the sender has aproved collateral for nft mint.\r\n        require(info.token.allowance(msg.sender, address(nftChef)) >= info.stake, \"Invalid stake given for the nft mint\");\r\n\r\n        // Mint NFT and store id for pool use.\r\n        uint id = _nft.mint(msg.sender);\r\n\r\n        starts[address(_nft)][id] = block.number;\r\n\r\n        // Mint and emit id\r\n        emit NFT_Mint(address(_nft), id);\r\n\r\n        //deposit stake into NFTChef.\r\n        nftChef.deposit(msg.sender, info.pid, id, info.stake);\r\n        \r\n    }\r\n\r\n    // Function to harvest CryptoGame tokens on the behalf of the _nft with _id\r\n    function harvest(IERC721 _nft, uint _id) public{\r\n        // Condition to determine if the nft to be harvested exists.\r\n        require(address(nfts[address(_nft)].token) != address(0), \"Can not harvest NFT address.\");\r\n        // Condition to determine if the sender is the owner of _nft with _id \r\n        require(_nft.ownerOf(_id) == msg.sender, \"Sender is not the owner of the token.\");\r\n\r\n        // Condition to harvest _nft with _id to sender.\r\n        nftChef.harvest(msg.sender, nfts[address(_nft)].pid, _id);\r\n    }\r\n\r\n    // Function to burn _nft and receive stake.\r\n    function burn(Mintable _nft, uint _id) public{\r\n        // Condition to determine if the nft to be burned exists.\r\n        require(address(nfts[address(_nft)].token) != address(0), \"Invalid nft to burn\");\r\n\r\n        // Condition to determine if the sender is the owner of the _nft with _id\r\n        require(msg.sender == IERC721(address(_nft)).ownerOf(_id), \"Sender is not the owner of the token.\");\r\n\r\n        // Condition to determine if the stake duration has expired.\r\n        require(block.number > starts[address(_nft)][_id] + nfts[address(_nft)].duration, \"The nft can not be burned yet.\");\r\n\r\n        // Remove nft and stake from the pool.\r\n        nftChef.withdraw(msg.sender, nfts[address(_nft)].pid, _id,nfts[address(_nft)].stake);\r\n\r\n        // Burn the _nft with _id.\r\n        _nft.burn(_id);\r\n    }\r\n}",
  "sourcePath": "/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTMinter.sol",
  "ast": {
    "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTMinter.sol",
    "exportedSymbols": {
      "Address": [
        13634
      ],
      "Context": [
        13656
      ],
      "CryptoGame": [
        31
      ],
      "ERC20": [
        10643
      ],
      "EnumerableSet": [
        16823
      ],
      "IERC165": [
        15090
      ],
      "IERC20": [
        10721
      ],
      "IERC20Metadata": [
        11383
      ],
      "IERC721": [
        12797
      ],
      "Mintable": [
        46
      ],
      "NFTChef": [
        967
      ],
      "NFTMinter": [
        1331
      ],
      "Ownable": [
        5725
      ],
      "SafeERC20": [
        11815
      ],
      "SafeMath": [
        15883
      ]
    },
    "id": 1332,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 969,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 970,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 5726,
        "src": "27:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 971,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 10722,
        "src": "83:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 12798,
        "src": "143:58:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 11816,
        "src": "205:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/Interfaces/Mintable.sol",
        "file": "./Interfaces/Mintable.sol",
        "id": 974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 47,
        "src": "274:35:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTChef.sol",
        "file": "./NFTChef.sol",
        "id": 975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 968,
        "src": "313:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 976,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5725,
              "src": "403:7:4"
            },
            "id": 977,
            "nodeType": "InheritanceSpecifier",
            "src": "403:7:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1331,
        "linearizedBaseContracts": [
          1331,
          5725,
          13656
        ],
        "name": "NFTMinter",
        "nameLocation": "390:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 981,
            "libraryName": {
              "id": 978,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11815,
              "src": "423:9:4"
            },
            "nodeType": "UsingForDirective",
            "src": "417:27:4",
            "typeName": {
              "id": 980,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 979,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10721,
                "src": "437:6:4"
              },
              "referencedDeclaration": 10721,
              "src": "437:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10721",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "NFTMinter.nftInfo",
            "id": 991,
            "members": [
              {
                "constant": false,
                "id": 984,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "565:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "558:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$10721",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 983,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 982,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10721,
                    "src": "558:6:4"
                  },
                  "referencedDeclaration": 10721,
                  "src": "558:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10721",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "stake",
                "nameLocation": "586:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "581:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 985,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 988,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "607:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "602:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 987,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 990,
                "mutability": "mutable",
                "name": "pid",
                "nameLocation": "631:3:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "626:8:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 989,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "626:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "nftInfo",
            "nameLocation": "540:7:4",
            "nodeType": "StructDefinition",
            "scope": 1331,
            "src": "533:109:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e03cd69",
            "id": 997,
            "mutability": "mutable",
            "name": "starts",
            "nameLocation": "765:6:4",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "716:55:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 996,
              "keyType": {
                "id": 992,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "724:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "716:41:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 995,
                "keyType": {
                  "id": 993,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "743:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "735:21:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 994,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "751:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1000,
            "mutability": "mutable",
            "name": "nftChef",
            "nameLocation": "821:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "813:15:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTChef_$967",
              "typeString": "contract NFTChef"
            },
            "typeName": {
              "id": 999,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 998,
                "name": "NFTChef",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 967,
                "src": "813:7:4"
              },
              "referencedDeclaration": 967,
              "src": "813:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTChef_$967",
                "typeString": "contract NFTChef"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "599db0f8",
            "id": 1005,
            "mutability": "mutable",
            "name": "nfts",
            "nameLocation": "909:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "874:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
              "typeString": "mapping(address => struct NFTMinter.nftInfo)"
            },
            "typeName": {
              "id": 1004,
              "keyType": {
                "id": 1001,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                "typeString": "mapping(address => struct NFTMinter.nftInfo)"
              },
              "valueType": {
                "id": 1003,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1002,
                  "name": "nftInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 991,
                  "src": "893:7:4"
                },
                "referencedDeclaration": 991,
                "src": "893:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_nftInfo_$991_storage_ptr",
                  "typeString": "struct NFTMinter.nftInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1011,
            "name": "NFT_Mint",
            "nameLocation": "973:8:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "990:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1011,
                  "src": "982:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1001:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1011,
                  "src": "996:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:24:4"
            },
            "src": "967:39:4"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "1063:46:4",
              "statements": [
                {
                  "expression": {
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1016,
                      "name": "nftChef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "1074:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$967",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1018,
                          "name": "_nftChef",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1013,
                          "src": "1092:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1017,
                        "name": "NFTChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "1084:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTChef_$967_$",
                          "typeString": "type(contract NFTChef)"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:17:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$967",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "src": "1074:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTChef_$967",
                      "typeString": "contract NFTChef"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:27:4"
                }
              ]
            },
            "id": 1023,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "_nftChef",
                  "nameLocation": "1054:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "1046:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:18:4"
            },
            "returnParameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:4"
            },
            "scope": 1331,
            "src": "1034:75:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1067,
              "nodeType": "Block",
              "src": "1295:158:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1043,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "1318:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1044,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1026,
                        "src": "1331:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$12797",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 1045,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "1337:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10721",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$12797",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$10721",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1040,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1306:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 271,
                      "src": "1306:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC721_$12797_$_t_contract$_IERC20_$10721_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,contract IERC721,contract IERC20,bool) external"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:44:4"
                },
                {
                  "expression": {
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1049,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "1363:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                          "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                        }
                      },
                      "id": 1054,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1052,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "1376:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$12797",
                              "typeString": "contract IERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721_$12797",
                              "typeString": "contract IERC721"
                            }
                          ],
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1368:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1050,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1368:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1363:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                        "typeString": "struct NFTMinter.nftInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1056,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "1393:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10721",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 1057,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1031,
                          "src": "1401:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1058,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "1409:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1059,
                                "name": "nftChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1000,
                                "src": "1420:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTChef_$967",
                                  "typeString": "contract NFTChef"
                                }
                              },
                              "id": 1060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "poolLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 219,
                              "src": "1420:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 1061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1420:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1443:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1420:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$10721",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1055,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "1385:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_nftInfo_$991_storage_ptr_$",
                          "typeString": "type(struct NFTMinter.nftInfo storage pointer)"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1385:60:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo memory"
                      }
                    },
                    "src": "1363:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:82:4"
                }
              ]
            },
            "functionSelector": "cbcf0270",
            "id": 1068,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1038,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1037,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5667,
                  "src": "1286:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1286:9:4"
              }
            ],
            "name": "add",
            "nameLocation": "1199:3:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1211:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1203:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$12797",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1024,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12797,
                      "src": "1203:7:4"
                    },
                    "referencedDeclaration": 12797,
                    "src": "1203:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$12797",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1224:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1217:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10721",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1027,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10721,
                      "src": "1217:6:4"
                    },
                    "referencedDeclaration": 10721,
                    "src": "1217:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "1237:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1232:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1250:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1245:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1266:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1261:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:76:4"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1295:0:4"
            },
            "scope": 1331,
            "src": "1190:263:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "1600:62:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1082,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "1623:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1083,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "1629:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1084,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1642:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1079,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1611:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 309,
                      "src": "1611:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,bool) external"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:43:4"
                }
              ]
            },
            "functionSelector": "64482f79",
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1077,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1076,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5667,
                  "src": "1585:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1585:9:4"
              }
            ],
            "name": "set",
            "nameLocation": "1521:3:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1533:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "1525:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1547:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "1539:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "1565:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "1560:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1524:53:4"
            },
            "returnParameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:4"
            },
            "scope": 1331,
            "src": "1512:150:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "1829:824:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1097,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "1923:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1102,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1100,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1091,
                                      "src": "1936:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1099,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1928:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1098,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1928:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1928:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1923:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1103,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "1923:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1915:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1095,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1915:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1915:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1961:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1953:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1105,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1953:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1953:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1915:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206d696e74",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1965:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        },
                        "value": "Invalid nft to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        }
                      ],
                      "id": 1094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1907:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:80:4"
                },
                {
                  "assignments": [
                    1115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1115,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2073:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1180,
                      "src": "2058:19:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo"
                      },
                      "typeName": {
                        "id": 1114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1113,
                          "name": "nftInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 991,
                          "src": "2058:7:4"
                        },
                        "referencedDeclaration": 991,
                        "src": "2058:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nftInfo_$991_storage_ptr",
                          "typeString": "struct NFTMinter.nftInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1122,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1116,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "2080:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                        "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                      }
                    },
                    "id": 1121,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1119,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "2093:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mintable_$46",
                            "typeString": "contract Mintable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Mintable_$46",
                            "typeString": "contract Mintable"
                          }
                        ],
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2085:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2085:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2085:13:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2080:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2058:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1127,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2227:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2227:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1131,
                                  "name": "nftChef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1000,
                                  "src": "2247:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTChef_$967",
                                    "typeString": "contract NFTChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTChef_$967",
                                    "typeString": "contract NFTChef"
                                  }
                                ],
                                "id": 1130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2239:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1129,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2239:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2239:16:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1124,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1115,
                                "src": "2206:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                                  "typeString": "struct NFTMinter.nftInfo memory"
                                }
                              },
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "2206:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10698,
                            "src": "2206:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2206:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1134,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "2260:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                              "typeString": "struct NFTMinter.nftInfo memory"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "2260:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2206:64:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520676976656e20666f7220746865206e6674206d696e74",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2272:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        },
                        "value": "Invalid stake given for the nft mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        }
                      ],
                      "id": 1123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2198:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2198:113:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:113:4"
                },
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "2377:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1180,
                      "src": "2372:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1140,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2372:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1147,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2392:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2392:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1142,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "2382:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$46",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2382:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) payable external returns (uint256)"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2372:31:4"
                },
                {
                  "expression": {
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1148,
                          "name": "starts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "2416:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1154,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 1151,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "2431:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Mintable_$46",
                                "typeString": "contract Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Mintable_$46",
                                "typeString": "contract Mintable"
                              }
                            ],
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2423:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2423:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2423:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2416:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1155,
                      "indexExpression": {
                        "id": 1153,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "2438:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2416:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1156,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2444:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2444:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2416:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:40:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1163,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "2520:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Mintable_$46",
                              "typeString": "contract Mintable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Mintable_$46",
                              "typeString": "contract Mintable"
                            }
                          ],
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2512:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2512:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1165,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "2527:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1160,
                      "name": "NFT_Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "2503:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "EmitStatement",
                  "src": "2498:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2598:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2598:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1173,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "2610:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 990,
                        "src": "2610:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1175,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "2620:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1176,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "2624:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "2624:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1168,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "2582:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 675,
                      "src": "2582:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "2582:53:4"
                }
              ]
            },
            "functionSelector": "6a627842",
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1803:4:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1817:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1808:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$46",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1090,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1089,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46,
                      "src": "1808:8:4"
                    },
                    "referencedDeclaration": 46,
                    "src": "1808:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$46",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1807:15:4"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1829:0:4"
            },
            "scope": 1331,
            "src": "1794:859:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "2789:478:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1192,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "2886:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1197,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1195,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1184,
                                      "src": "2899:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC721_$12797",
                                        "typeString": "contract IERC721"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC721_$12797",
                                        "typeString": "contract IERC721"
                                      }
                                    ],
                                    "id": 1194,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2891:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1193,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2891:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2891:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2886:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "2886:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2878:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2878:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2878:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2924:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2916:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2916:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2916:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2878:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f742068617276657374204e465420616464726573732e",
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2928:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        },
                        "value": "Can not harvest NFT address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        }
                      ],
                      "id": 1189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2870:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:89:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:89:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1211,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "3071:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1209,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1184,
                              "src": "3058:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$12797",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12730,
                            "src": "3058:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3058:17:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3079:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3079:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3058:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3050:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:81:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:81:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3218:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3218:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1224,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "3230:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1229,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1227,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1184,
                                "src": "3243:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$12797",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$12797",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3235:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1225,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3235:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3235:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3230:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 990,
                        "src": "3230:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1231,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "3255:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1219,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "3202:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "3202:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3202:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:57:4"
                }
              ]
            },
            "functionSelector": "018ee9b7",
            "id": 1235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "2751:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "2767:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "2759:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$12797",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1183,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1182,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12797,
                      "src": "2759:7:4"
                    },
                    "referencedDeclaration": 12797,
                    "src": "2759:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$12797",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2778:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "2773:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2758:24:4"
            },
            "returnParameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:4"
            },
            "scope": 1331,
            "src": "2742:525:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "3369:767:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1246,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "3463:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1251,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1249,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1238,
                                      "src": "3476:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3468:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1247,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3468:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3468:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3463:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "3463:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3455:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3455:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3455:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3501:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3493:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1254,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3493:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3493:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3455:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206275726e",
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3505:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        },
                        "value": "Invalid nft to burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        }
                      ],
                      "id": 1243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3447:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3447:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:80:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1263,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3631:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3631:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1272,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "3676:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1268,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1238,
                                      "src": "3661:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3653:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1266,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3653:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3653:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1265,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12797,
                                "src": "3645:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$12797_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3645:22:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$12797",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12730,
                            "src": "3645:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3631:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3682:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3623:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:99:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:99:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1279,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3813:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "3813:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1281,
                                "name": "starts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "3828:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 1286,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1284,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1238,
                                    "src": "3843:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3835:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1282,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3835:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3835:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3828:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1288,
                            "indexExpression": {
                              "id": 1287,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "3850:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3828:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1289,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1005,
                                "src": "3857:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                  "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                }
                              },
                              "id": 1294,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1292,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1238,
                                    "src": "3870:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3862:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1290,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3862:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3862:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3857:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                "typeString": "struct NFTMinter.nftInfo storage ref"
                              }
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "duration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 988,
                            "src": "3857:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3828:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3813:72:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e66742063616e206e6f74206265206275726e6564207965742e",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3887:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        },
                        "value": "The nft can not be burned yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        }
                      ],
                      "id": 1278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3805:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3805:115:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "3805:115:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3998:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3998:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1306,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "4010:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1311,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1309,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1238,
                                "src": "4023:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4015:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1307,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4015:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4015:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4010:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 990,
                        "src": "4010:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1313,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "4035:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1314,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "4039:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1319,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1317,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1238,
                                "src": "4052:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4044:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1315,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4044:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4044:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4039:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "4039:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1301,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "3981:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 780,
                      "src": "3981:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:84:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:84:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1326,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "4124:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1323,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "4114:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$46",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "4114:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4114:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:14:4"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "3333:4:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "3347:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "3338:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$46",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1237,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1236,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46,
                      "src": "3338:8:4"
                    },
                    "referencedDeclaration": 46,
                    "src": "3338:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$46",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3358:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "3353:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:25:4"
            },
            "returnParameters": {
              "id": 1242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:4"
            },
            "scope": 1331,
            "src": "3324:812:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1332,
        "src": "381:3758:4",
        "usedErrors": []
      }
    ],
    "src": "0:4139:4"
  },
  "legacyAST": {
    "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTMinter.sol",
    "exportedSymbols": {
      "Address": [
        13634
      ],
      "Context": [
        13656
      ],
      "CryptoGame": [
        31
      ],
      "ERC20": [
        10643
      ],
      "EnumerableSet": [
        16823
      ],
      "IERC165": [
        15090
      ],
      "IERC20": [
        10721
      ],
      "IERC20Metadata": [
        11383
      ],
      "IERC721": [
        12797
      ],
      "Mintable": [
        46
      ],
      "NFTChef": [
        967
      ],
      "NFTMinter": [
        1331
      ],
      "Ownable": [
        5725
      ],
      "SafeERC20": [
        11815
      ],
      "SafeMath": [
        15883
      ]
    },
    "id": 1332,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 969,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 970,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 5726,
        "src": "27:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 971,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 10722,
        "src": "83:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 12798,
        "src": "143:58:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 11816,
        "src": "205:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/Interfaces/Mintable.sol",
        "file": "./Interfaces/Mintable.sol",
        "id": 974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 47,
        "src": "274:35:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephenstb/Ratio-Labs/ratio-labs/contracts/CryptoGame/NFTChef.sol",
        "file": "./NFTChef.sol",
        "id": 975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 968,
        "src": "313:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 976,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5725,
              "src": "403:7:4"
            },
            "id": 977,
            "nodeType": "InheritanceSpecifier",
            "src": "403:7:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1331,
        "linearizedBaseContracts": [
          1331,
          5725,
          13656
        ],
        "name": "NFTMinter",
        "nameLocation": "390:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 981,
            "libraryName": {
              "id": 978,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11815,
              "src": "423:9:4"
            },
            "nodeType": "UsingForDirective",
            "src": "417:27:4",
            "typeName": {
              "id": 980,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 979,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10721,
                "src": "437:6:4"
              },
              "referencedDeclaration": 10721,
              "src": "437:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10721",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "NFTMinter.nftInfo",
            "id": 991,
            "members": [
              {
                "constant": false,
                "id": 984,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "565:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "558:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$10721",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 983,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 982,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10721,
                    "src": "558:6:4"
                  },
                  "referencedDeclaration": 10721,
                  "src": "558:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10721",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "stake",
                "nameLocation": "586:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "581:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 985,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 988,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "607:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "602:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 987,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 990,
                "mutability": "mutable",
                "name": "pid",
                "nameLocation": "631:3:4",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "626:8:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 989,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "626:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "nftInfo",
            "nameLocation": "540:7:4",
            "nodeType": "StructDefinition",
            "scope": 1331,
            "src": "533:109:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e03cd69",
            "id": 997,
            "mutability": "mutable",
            "name": "starts",
            "nameLocation": "765:6:4",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "716:55:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 996,
              "keyType": {
                "id": 992,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "724:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "716:41:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 995,
                "keyType": {
                  "id": 993,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "743:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "735:21:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 994,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "751:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1000,
            "mutability": "mutable",
            "name": "nftChef",
            "nameLocation": "821:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "813:15:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTChef_$967",
              "typeString": "contract NFTChef"
            },
            "typeName": {
              "id": 999,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 998,
                "name": "NFTChef",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 967,
                "src": "813:7:4"
              },
              "referencedDeclaration": 967,
              "src": "813:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTChef_$967",
                "typeString": "contract NFTChef"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "599db0f8",
            "id": 1005,
            "mutability": "mutable",
            "name": "nfts",
            "nameLocation": "909:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "874:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
              "typeString": "mapping(address => struct NFTMinter.nftInfo)"
            },
            "typeName": {
              "id": 1004,
              "keyType": {
                "id": 1001,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                "typeString": "mapping(address => struct NFTMinter.nftInfo)"
              },
              "valueType": {
                "id": 1003,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1002,
                  "name": "nftInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 991,
                  "src": "893:7:4"
                },
                "referencedDeclaration": 991,
                "src": "893:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_nftInfo_$991_storage_ptr",
                  "typeString": "struct NFTMinter.nftInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1011,
            "name": "NFT_Mint",
            "nameLocation": "973:8:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "990:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1011,
                  "src": "982:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1001:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1011,
                  "src": "996:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:24:4"
            },
            "src": "967:39:4"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "1063:46:4",
              "statements": [
                {
                  "expression": {
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1016,
                      "name": "nftChef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "1074:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$967",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1018,
                          "name": "_nftChef",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1013,
                          "src": "1092:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1017,
                        "name": "NFTChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "1084:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTChef_$967_$",
                          "typeString": "type(contract NFTChef)"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:17:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTChef_$967",
                        "typeString": "contract NFTChef"
                      }
                    },
                    "src": "1074:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTChef_$967",
                      "typeString": "contract NFTChef"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:27:4"
                }
              ]
            },
            "id": 1023,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "_nftChef",
                  "nameLocation": "1054:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "1046:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:18:4"
            },
            "returnParameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:4"
            },
            "scope": 1331,
            "src": "1034:75:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1067,
              "nodeType": "Block",
              "src": "1295:158:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1043,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "1318:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1044,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1026,
                        "src": "1331:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$12797",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 1045,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "1337:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10721",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$12797",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$10721",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1040,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1306:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 271,
                      "src": "1306:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IERC721_$12797_$_t_contract$_IERC20_$10721_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,contract IERC721,contract IERC20,bool) external"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:44:4"
                },
                {
                  "expression": {
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1049,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "1363:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                          "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                        }
                      },
                      "id": 1054,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1052,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "1376:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$12797",
                              "typeString": "contract IERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721_$12797",
                              "typeString": "contract IERC721"
                            }
                          ],
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1368:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1050,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1368:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1363:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                        "typeString": "struct NFTMinter.nftInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1056,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "1393:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10721",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 1057,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1031,
                          "src": "1401:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1058,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "1409:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1059,
                                "name": "nftChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1000,
                                "src": "1420:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTChef_$967",
                                  "typeString": "contract NFTChef"
                                }
                              },
                              "id": 1060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "poolLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 219,
                              "src": "1420:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 1061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1420:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1443:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1420:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$10721",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1055,
                        "name": "nftInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "1385:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_nftInfo_$991_storage_ptr_$",
                          "typeString": "type(struct NFTMinter.nftInfo storage pointer)"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1385:60:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo memory"
                      }
                    },
                    "src": "1363:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:82:4"
                }
              ]
            },
            "functionSelector": "cbcf0270",
            "id": 1068,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1038,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1037,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5667,
                  "src": "1286:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1286:9:4"
              }
            ],
            "name": "add",
            "nameLocation": "1199:3:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1211:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1203:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$12797",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1024,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12797,
                      "src": "1203:7:4"
                    },
                    "referencedDeclaration": 12797,
                    "src": "1203:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$12797",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1224:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1217:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10721",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1027,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10721,
                      "src": "1217:6:4"
                    },
                    "referencedDeclaration": 10721,
                    "src": "1217:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "1237:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1232:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1250:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1245:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1266:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1261:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:76:4"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1295:0:4"
            },
            "scope": 1331,
            "src": "1190:263:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "1600:62:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1082,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "1623:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1083,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "1629:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1084,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1642:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1079,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1611:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 309,
                      "src": "1611:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,bool) external"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:43:4"
                }
              ]
            },
            "functionSelector": "64482f79",
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1077,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1076,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5667,
                  "src": "1585:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1585:9:4"
              }
            ],
            "name": "set",
            "nameLocation": "1521:3:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1533:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "1525:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "1547:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "1539:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "1565:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "1560:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1524:53:4"
            },
            "returnParameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:4"
            },
            "scope": 1331,
            "src": "1512:150:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "1829:824:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1097,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "1923:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1102,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1100,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1091,
                                      "src": "1936:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1099,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1928:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1098,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1928:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1928:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1923:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1103,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "1923:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1915:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1095,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1915:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1915:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1961:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1953:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1105,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1953:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1953:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1915:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206d696e74",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1965:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        },
                        "value": "Invalid nft to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23641c926bba47ae346419ee2d1a23ccabd10564e92581bf1d9a8d21b1fa3500",
                          "typeString": "literal_string \"Invalid nft to mint\""
                        }
                      ],
                      "id": 1094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1907:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:80:4"
                },
                {
                  "assignments": [
                    1115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1115,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2073:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1180,
                      "src": "2058:19:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                        "typeString": "struct NFTMinter.nftInfo"
                      },
                      "typeName": {
                        "id": 1114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1113,
                          "name": "nftInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 991,
                          "src": "2058:7:4"
                        },
                        "referencedDeclaration": 991,
                        "src": "2058:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nftInfo_$991_storage_ptr",
                          "typeString": "struct NFTMinter.nftInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1122,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1116,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "2080:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                        "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                      }
                    },
                    "id": 1121,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1119,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "2093:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mintable_$46",
                            "typeString": "contract Mintable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Mintable_$46",
                            "typeString": "contract Mintable"
                          }
                        ],
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2085:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2085:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2085:13:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2080:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                      "typeString": "struct NFTMinter.nftInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2058:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1127,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2227:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2227:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1131,
                                  "name": "nftChef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1000,
                                  "src": "2247:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTChef_$967",
                                    "typeString": "contract NFTChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTChef_$967",
                                    "typeString": "contract NFTChef"
                                  }
                                ],
                                "id": 1130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2239:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1129,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2239:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2239:16:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1124,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1115,
                                "src": "2206:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                                  "typeString": "struct NFTMinter.nftInfo memory"
                                }
                              },
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "2206:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10698,
                            "src": "2206:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2206:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1134,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "2260:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                              "typeString": "struct NFTMinter.nftInfo memory"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "2260:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2206:64:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520676976656e20666f7220746865206e6674206d696e74",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2272:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        },
                        "value": "Invalid stake given for the nft mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d43547021d6b89c4c1c96bec4629d48151f17ea05616b8632bca7fd65f4d1fd5",
                          "typeString": "literal_string \"Invalid stake given for the nft mint\""
                        }
                      ],
                      "id": 1123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2198:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2198:113:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:113:4"
                },
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "2377:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1180,
                      "src": "2372:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1140,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2372:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1147,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2392:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2392:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1142,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "2382:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$46",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2382:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) payable external returns (uint256)"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2372:31:4"
                },
                {
                  "expression": {
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1148,
                          "name": "starts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "2416:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1154,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 1151,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "2431:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Mintable_$46",
                                "typeString": "contract Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Mintable_$46",
                                "typeString": "contract Mintable"
                              }
                            ],
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2423:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2423:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2423:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2416:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1155,
                      "indexExpression": {
                        "id": 1153,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "2438:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2416:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1156,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2444:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2444:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2416:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:40:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1163,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "2520:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Mintable_$46",
                              "typeString": "contract Mintable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Mintable_$46",
                              "typeString": "contract Mintable"
                            }
                          ],
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2512:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2512:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1165,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "2527:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1160,
                      "name": "NFT_Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "2503:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "EmitStatement",
                  "src": "2498:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2598:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2598:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1173,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "2610:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 990,
                        "src": "2610:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1175,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "2620:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1176,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "2624:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_memory_ptr",
                            "typeString": "struct NFTMinter.nftInfo memory"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "2624:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1168,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "2582:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 675,
                      "src": "2582:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "2582:53:4"
                }
              ]
            },
            "functionSelector": "6a627842",
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1803:4:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1817:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1808:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$46",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1090,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1089,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46,
                      "src": "1808:8:4"
                    },
                    "referencedDeclaration": 46,
                    "src": "1808:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$46",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1807:15:4"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1829:0:4"
            },
            "scope": 1331,
            "src": "1794:859:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "2789:478:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1192,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "2886:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1197,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1195,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1184,
                                      "src": "2899:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC721_$12797",
                                        "typeString": "contract IERC721"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC721_$12797",
                                        "typeString": "contract IERC721"
                                      }
                                    ],
                                    "id": 1194,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2891:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1193,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2891:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2891:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2886:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "2886:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2878:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2878:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2878:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2924:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2916:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2916:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2916:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2878:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f742068617276657374204e465420616464726573732e",
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2928:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        },
                        "value": "Can not harvest NFT address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f88250ed3d04b3c814db08ddee7166b9565c7baf8437e7cead84a70f71765bcc",
                          "typeString": "literal_string \"Can not harvest NFT address.\""
                        }
                      ],
                      "id": 1189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2870:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:89:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:89:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1211,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "3071:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1209,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1184,
                              "src": "3058:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$12797",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12730,
                            "src": "3058:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3058:17:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3079:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3079:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3058:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3050:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:81:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:81:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3218:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3218:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1224,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "3230:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1229,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1227,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1184,
                                "src": "3243:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$12797",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$12797",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3235:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1225,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3235:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3235:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3230:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 990,
                        "src": "3230:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1231,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "3255:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1219,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "3202:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "3202:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3202:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:57:4"
                }
              ]
            },
            "functionSelector": "018ee9b7",
            "id": 1235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "2751:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "2767:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "2759:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$12797",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1183,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1182,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12797,
                      "src": "2759:7:4"
                    },
                    "referencedDeclaration": 12797,
                    "src": "2759:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$12797",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2778:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "2773:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2758:24:4"
            },
            "returnParameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:4"
            },
            "scope": 1331,
            "src": "2742:525:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "3369:767:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1246,
                                  "name": "nfts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "3463:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                    "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                  }
                                },
                                "id": 1251,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 1249,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1238,
                                      "src": "3476:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3468:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1247,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3468:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3468:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3463:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                  "typeString": "struct NFTMinter.nftInfo storage ref"
                                }
                              },
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "3463:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$10721",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3455:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3455:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3455:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3501:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3493:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1254,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3493:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3493:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3455:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e667420746f206275726e",
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3505:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        },
                        "value": "Invalid nft to burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65db26c5240633d01eea82cd0d5c678a65bdc54f81887fe61095980eb05a4dd9",
                          "typeString": "literal_string \"Invalid nft to burn\""
                        }
                      ],
                      "id": 1243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3447:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3447:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:80:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1263,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3631:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3631:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1272,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "3676:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1268,
                                      "name": "_nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1238,
                                      "src": "3661:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Mintable_$46",
                                        "typeString": "contract Mintable"
                                      }
                                    ],
                                    "id": 1267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3653:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1266,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3653:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3653:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1265,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12797,
                                "src": "3645:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$12797_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3645:22:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$12797",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12730,
                            "src": "3645:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3631:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3682:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        },
                        "value": "Sender is not the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349161fe1f81026c04bac80af29169e1cb54efddd4837815e877a9330378ef76",
                          "typeString": "literal_string \"Sender is not the owner of the token.\""
                        }
                      ],
                      "id": 1262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3623:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:99:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:99:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1279,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3813:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "3813:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1281,
                                "name": "starts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "3828:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 1286,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1284,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1238,
                                    "src": "3843:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3835:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1282,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3835:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3835:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3828:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1288,
                            "indexExpression": {
                              "id": 1287,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "3850:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3828:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1289,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1005,
                                "src": "3857:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                                  "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                                }
                              },
                              "id": 1294,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1292,
                                    "name": "_nft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1238,
                                    "src": "3870:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mintable_$46",
                                      "typeString": "contract Mintable"
                                    }
                                  ],
                                  "id": 1291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3862:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1290,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3862:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3862:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3857:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                                "typeString": "struct NFTMinter.nftInfo storage ref"
                              }
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "duration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 988,
                            "src": "3857:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3828:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3813:72:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e66742063616e206e6f74206265206275726e6564207965742e",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3887:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        },
                        "value": "The nft can not be burned yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5e5e66da730ca34640b9b6d1313e9cc3b32cfd4b7dfb728e7a6664db1005666",
                          "typeString": "literal_string \"The nft can not be burned yet.\""
                        }
                      ],
                      "id": 1278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3805:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3805:115:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "3805:115:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3998:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3998:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1306,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "4010:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1311,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1309,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1238,
                                "src": "4023:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4015:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1307,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4015:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4015:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4010:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 990,
                        "src": "4010:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1313,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "4035:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1314,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "4039:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_nftInfo_$991_storage_$",
                              "typeString": "mapping(address => struct NFTMinter.nftInfo storage ref)"
                            }
                          },
                          "id": 1319,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1317,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1238,
                                "src": "4052:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mintable_$46",
                                  "typeString": "contract Mintable"
                                }
                              ],
                              "id": 1316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4044:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1315,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4044:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4044:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4039:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nftInfo_$991_storage",
                            "typeString": "struct NFTMinter.nftInfo storage ref"
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "4039:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1301,
                        "name": "nftChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "3981:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTChef_$967",
                          "typeString": "contract NFTChef"
                        }
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 780,
                      "src": "3981:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:84:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:84:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1326,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "4124:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1323,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "4114:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Mintable_$46",
                          "typeString": "contract Mintable"
                        }
                      },
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "4114:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4114:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:14:4"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "3333:4:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "3347:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "3338:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Mintable_$46",
                    "typeString": "contract Mintable"
                  },
                  "typeName": {
                    "id": 1237,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1236,
                      "name": "Mintable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46,
                      "src": "3338:8:4"
                    },
                    "referencedDeclaration": 46,
                    "src": "3338:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$46",
                      "typeString": "contract Mintable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3358:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "3353:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:25:4"
            },
            "returnParameters": {
              "id": 1242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:4"
            },
            "scope": 1331,
            "src": "3324:812:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1332,
        "src": "381:3758:4",
        "usedErrors": []
      }
    ],
    "src": "0:4139:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.5+commit.a4f2e591.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2022-06-23T01:08:52.263Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}